
BluePill_STemWin.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000b144  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000e80  0800b250  0800b250  0000c250  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800c0d0  0800c0d0  0000e0c4  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  0800c0d0  0800c0d0  0000e0c4  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  0800c0d0  0800c0d0  0000e0c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800c0d0  0800c0d0  0000d0d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800c0d4  0800c0d4  0000d0d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000000c4  20000000  0800c0d8  0000e000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00002c14  200000c4  0800c19c  0000e0c4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20002cd8  0800c19c  0000ecd8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000e0c4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00006961  00000000  00000000  0000e0ed  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001add  00000000  00000000  00014a4e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000710  00000000  00000000  00016530  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000525  00000000  00000000  00016c40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000194b7  00000000  00000000  00017165  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000879e  00000000  00000000  0003061c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008a8af  00000000  00000000  00038dba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000b1  00000000  00000000  000c3669  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001a54  00000000  00000000  000c371c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006c  00000000  00000000  000c5170  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	200000c4 	.word	0x200000c4
 8000128:	00000000 	.word	0x00000000
 800012c:	0800b238 	.word	0x0800b238

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	200000c8 	.word	0x200000c8
 8000148:	0800b238 	.word	0x0800b238

0800014c <GUI_X_Config>:
*
* Purpose:
*   Called during the initialization process in order to set up the
*   available memory for the GUI.
*/
void GUI_X_Config(void) {
 800014c:	b580      	push	{r7, lr}
 800014e:	af00      	add	r7, sp, #0
  //
  static U32 aMemory[GUI_NUMBYTES / 4];
  //
  // Assign memory to emWin
  //
  GUI_ALLOC_AssignMemory(aMemory, GUI_NUMBYTES);
 8000150:	f44f 5120 	mov.w	r1, #10240	@ 0x2800
 8000154:	4803      	ldr	r0, [pc, #12]	@ (8000164 <GUI_X_Config+0x18>)
 8000156:	f001 ffa1 	bl	800209c <GUI_ALLOC_AssignMemory>
  //
  // Set default font
  //
  GUI_SetDefaultFont(GUI_FONT_6X8);
 800015a:	4803      	ldr	r0, [pc, #12]	@ (8000168 <GUI_X_Config+0x1c>)
 800015c:	f002 fbda 	bl	8002914 <GUI_SetDefaultFont>
}
 8000160:	bf00      	nop
 8000162:	bd80      	pop	{r7, pc}
 8000164:	200002c0 	.word	0x200002c0
 8000168:	0800b6f4 	.word	0x0800b6f4

0800016c <GUI_X_Init>:
*     GUI_X_Init() is called from GUI_Init is a possibility to init
*     some hardware which needs to be up and running before the GUI.
*     If not required, leave this routine blank.
*/

void GUI_X_Init(void) {}
 800016c:	b480      	push	{r7}
 800016e:	af00      	add	r7, sp, #0
 8000170:	bf00      	nop
 8000172:	46bd      	mov	sp, r7
 8000174:	bc80      	pop	{r7}
 8000176:	4770      	bx	lr

08000178 <LcdWriteReg>:
*
* Function description:
*   Sets display register
*/
static void LcdWriteReg(U8 Data)
{
 8000178:	b580      	push	{r7, lr}
 800017a:	b082      	sub	sp, #8
 800017c:	af00      	add	r7, sp, #0
 800017e:	4603      	mov	r3, r0
 8000180:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(GPIOB, LCD_CS_PIN,  GPIO_PIN_RESET);
 8000182:	2200      	movs	r2, #0
 8000184:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000188:	480b      	ldr	r0, [pc, #44]	@ (80001b8 <LcdWriteReg+0x40>)
 800018a:	f000 ff79 	bl	8001080 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, LCD_CD_PIN,  GPIO_PIN_RESET);
 800018e:	2200      	movs	r2, #0
 8000190:	2101      	movs	r1, #1
 8000192:	4809      	ldr	r0, [pc, #36]	@ (80001b8 <LcdWriteReg+0x40>)
 8000194:	f000 ff74 	bl	8001080 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi1, &Data, 1, 1);
 8000198:	1df9      	adds	r1, r7, #7
 800019a:	2301      	movs	r3, #1
 800019c:	2201      	movs	r2, #1
 800019e:	4807      	ldr	r0, [pc, #28]	@ (80001bc <LcdWriteReg+0x44>)
 80001a0:	f001 fbe8 	bl	8001974 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(GPIOB, LCD_CS_PIN,  GPIO_PIN_SET);
 80001a4:	2201      	movs	r2, #1
 80001a6:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80001aa:	4803      	ldr	r0, [pc, #12]	@ (80001b8 <LcdWriteReg+0x40>)
 80001ac:	f000 ff68 	bl	8001080 <HAL_GPIO_WritePin>
}
 80001b0:	bf00      	nop
 80001b2:	3708      	adds	r7, #8
 80001b4:	46bd      	mov	sp, r7
 80001b6:	bd80      	pop	{r7, pc}
 80001b8:	40010c00 	.word	0x40010c00
 80001bc:	20002acc 	.word	0x20002acc

080001c0 <LcdReadReg>:
*       LcdWriteReg
*
* Function description:
*   Sets display register
*/
static U8 LcdReadReg(void) {
 80001c0:	b480      	push	{r7}
 80001c2:	af00      	add	r7, sp, #0
  // ... TBD by user
	return 0;
 80001c4:	2300      	movs	r3, #0
}
 80001c6:	4618      	mov	r0, r3
 80001c8:	46bd      	mov	sp, r7
 80001ca:	bc80      	pop	{r7}
 80001cc:	4770      	bx	lr
	...

080001d0 <LcdWriteData>:
*
* Function description:
*   Writes a value to a display register
*/
static void LcdWriteData(U8 Data)
{
 80001d0:	b580      	push	{r7, lr}
 80001d2:	b082      	sub	sp, #8
 80001d4:	af00      	add	r7, sp, #0
 80001d6:	4603      	mov	r3, r0
 80001d8:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(GPIOB, LCD_CS_PIN,  GPIO_PIN_RESET);
 80001da:	2200      	movs	r2, #0
 80001dc:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80001e0:	480b      	ldr	r0, [pc, #44]	@ (8000210 <LcdWriteData+0x40>)
 80001e2:	f000 ff4d 	bl	8001080 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, LCD_CD_PIN,  GPIO_PIN_SET);
 80001e6:	2201      	movs	r2, #1
 80001e8:	2101      	movs	r1, #1
 80001ea:	4809      	ldr	r0, [pc, #36]	@ (8000210 <LcdWriteData+0x40>)
 80001ec:	f000 ff48 	bl	8001080 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi1, &Data, 1, 1);
 80001f0:	1df9      	adds	r1, r7, #7
 80001f2:	2301      	movs	r3, #1
 80001f4:	2201      	movs	r2, #1
 80001f6:	4807      	ldr	r0, [pc, #28]	@ (8000214 <LcdWriteData+0x44>)
 80001f8:	f001 fbbc 	bl	8001974 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(GPIOB, LCD_CS_PIN,  GPIO_PIN_SET);
 80001fc:	2201      	movs	r2, #1
 80001fe:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000202:	4803      	ldr	r0, [pc, #12]	@ (8000210 <LcdWriteData+0x40>)
 8000204:	f000 ff3c 	bl	8001080 <HAL_GPIO_WritePin>
}
 8000208:	bf00      	nop
 800020a:	3708      	adds	r7, #8
 800020c:	46bd      	mov	sp, r7
 800020e:	bd80      	pop	{r7, pc}
 8000210:	40010c00 	.word	0x40010c00
 8000214:	20002acc 	.word	0x20002acc

08000218 <LcdWriteDataMultiple>:
*       LcdWriteDataMultiple
*
* Function description:
*   Writes multiple values to a display register.
*/
static void LcdWriteDataMultiple(U8 * pData, int NumItems) {
 8000218:	b580      	push	{r7, lr}
 800021a:	b082      	sub	sp, #8
 800021c:	af00      	add	r7, sp, #0
 800021e:	6078      	str	r0, [r7, #4]
 8000220:	6039      	str	r1, [r7, #0]

	while (NumItems--)
 8000222:	e012      	b.n	800024a <LcdWriteDataMultiple+0x32>
	{
		HAL_GPIO_WritePin(GPIOB, LCD_CS_PIN,  GPIO_PIN_RESET);
 8000224:	2200      	movs	r2, #0
 8000226:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800022a:	480d      	ldr	r0, [pc, #52]	@ (8000260 <LcdWriteDataMultiple+0x48>)
 800022c:	f000 ff28 	bl	8001080 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOB, LCD_CD_PIN,  GPIO_PIN_SET);
 8000230:	2201      	movs	r2, #1
 8000232:	2101      	movs	r1, #1
 8000234:	480a      	ldr	r0, [pc, #40]	@ (8000260 <LcdWriteDataMultiple+0x48>)
 8000236:	f000 ff23 	bl	8001080 <HAL_GPIO_WritePin>
		HAL_SPI_Transmit(&hspi1, pData++, 1, 1);
 800023a:	6879      	ldr	r1, [r7, #4]
 800023c:	1c4b      	adds	r3, r1, #1
 800023e:	607b      	str	r3, [r7, #4]
 8000240:	2301      	movs	r3, #1
 8000242:	2201      	movs	r2, #1
 8000244:	4807      	ldr	r0, [pc, #28]	@ (8000264 <LcdWriteDataMultiple+0x4c>)
 8000246:	f001 fb95 	bl	8001974 <HAL_SPI_Transmit>
	while (NumItems--)
 800024a:	683b      	ldr	r3, [r7, #0]
 800024c:	1e5a      	subs	r2, r3, #1
 800024e:	603a      	str	r2, [r7, #0]
 8000250:	2b00      	cmp	r3, #0
 8000252:	d1e7      	bne.n	8000224 <LcdWriteDataMultiple+0xc>
  }
}
 8000254:	bf00      	nop
 8000256:	bf00      	nop
 8000258:	3708      	adds	r7, #8
 800025a:	46bd      	mov	sp, r7
 800025c:	bd80      	pop	{r7, pc}
 800025e:	bf00      	nop
 8000260:	40010c00 	.word	0x40010c00
 8000264:	20002acc 	.word	0x20002acc

08000268 <LcdReadDataMultiple>:
*       LcdReadDataMultiple
*
* Function description:
*   Reads multiple values from a display register.
*/
static void LcdReadDataMultiple(U8 * pData, int NumItems) {
 8000268:	b480      	push	{r7}
 800026a:	b083      	sub	sp, #12
 800026c:	af00      	add	r7, sp, #0
 800026e:	6078      	str	r0, [r7, #4]
 8000270:	6039      	str	r1, [r7, #0]
  while (NumItems--) {
 8000272:	bf00      	nop
 8000274:	683b      	ldr	r3, [r7, #0]
 8000276:	1e5a      	subs	r2, r3, #1
 8000278:	603a      	str	r2, [r7, #0]
 800027a:	2b00      	cmp	r3, #0
 800027c:	d1fa      	bne.n	8000274 <LcdReadDataMultiple+0xc>
    // ... TBD by user
  }
}
 800027e:	bf00      	nop
 8000280:	bf00      	nop
 8000282:	370c      	adds	r7, #12
 8000284:	46bd      	mov	sp, r7
 8000286:	bc80      	pop	{r7}
 8000288:	4770      	bx	lr
	...

0800028c <LcdInit>:

void LcdInit(void) {
 800028c:	b580      	push	{r7, lr}
 800028e:	b082      	sub	sp, #8
 8000290:	af00      	add	r7, sp, #0

	HAL_GPIO_WritePin(GPIOB, LCD_CS_PIN,  GPIO_PIN_SET);
 8000292:	2201      	movs	r2, #1
 8000294:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000298:	489a      	ldr	r0, [pc, #616]	@ (8000504 <LcdInit+0x278>)
 800029a:	f000 fef1 	bl	8001080 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, LCD_CD_PIN,  GPIO_PIN_SET);
 800029e:	2201      	movs	r2, #1
 80002a0:	2101      	movs	r1, #1
 80002a2:	4898      	ldr	r0, [pc, #608]	@ (8000504 <LcdInit+0x278>)
 80002a4:	f000 feec 	bl	8001080 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, LCD_RST_PIN, GPIO_PIN_RESET);
 80002a8:	2200      	movs	r2, #0
 80002aa:	2102      	movs	r1, #2
 80002ac:	4895      	ldr	r0, [pc, #596]	@ (8000504 <LcdInit+0x278>)
 80002ae:	f000 fee7 	bl	8001080 <HAL_GPIO_WritePin>
	HAL_Delay(2);//Reset delay
 80002b2:	2002      	movs	r0, #2
 80002b4:	f000 fc3c 	bl	8000b30 <HAL_Delay>
	HAL_GPIO_WritePin(GPIOB, LCD_CS_PIN,  GPIO_PIN_RESET);
 80002b8:	2200      	movs	r2, #0
 80002ba:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80002be:	4891      	ldr	r0, [pc, #580]	@ (8000504 <LcdInit+0x278>)
 80002c0:	f000 fede 	bl	8001080 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, LCD_CD_PIN,  GPIO_PIN_RESET);
 80002c4:	2200      	movs	r2, #0
 80002c6:	2101      	movs	r1, #1
 80002c8:	488e      	ldr	r0, [pc, #568]	@ (8000504 <LcdInit+0x278>)
 80002ca:	f000 fed9 	bl	8001080 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, LCD_RST_PIN, GPIO_PIN_SET);
 80002ce:	2201      	movs	r2, #1
 80002d0:	2102      	movs	r1, #2
 80002d2:	488c      	ldr	r0, [pc, #560]	@ (8000504 <LcdInit+0x278>)
 80002d4:	f000 fed4 	bl	8001080 <HAL_GPIO_WritePin>
	for(uint8_t i=0; i<3; i++)  {
 80002d8:	2300      	movs	r3, #0
 80002da:	71fb      	strb	r3, [r7, #7]
 80002dc:	e005      	b.n	80002ea <LcdInit+0x5e>
		LcdWriteReg(0x00);
 80002de:	2000      	movs	r0, #0
 80002e0:	f7ff ff4a 	bl	8000178 <LcdWriteReg>
	for(uint8_t i=0; i<3; i++)  {
 80002e4:	79fb      	ldrb	r3, [r7, #7]
 80002e6:	3301      	adds	r3, #1
 80002e8:	71fb      	strb	r3, [r7, #7]
 80002ea:	79fb      	ldrb	r3, [r7, #7]
 80002ec:	2b02      	cmp	r3, #2
 80002ee:	d9f6      	bls.n	80002de <LcdInit+0x52>
	} // Three extra 0x00s
	HAL_GPIO_WritePin(GPIOB, LCD_CS_PIN,  GPIO_PIN_SET);
 80002f0:	2201      	movs	r2, #1
 80002f2:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80002f6:	4883      	ldr	r0, [pc, #524]	@ (8000504 <LcdInit+0x278>)
 80002f8:	f000 fec2 	bl	8001080 <HAL_GPIO_WritePin>

//ILI9341 initialization sequence

	LcdWriteReg(0x01);//soft reset
 80002fc:	2001      	movs	r0, #1
 80002fe:	f7ff ff3b 	bl	8000178 <LcdWriteReg>
	HAL_Delay(1000);
 8000302:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8000306:	f000 fc13 	bl	8000b30 <HAL_Delay>
	//power control A
	LcdWriteReg(0xCB);
 800030a:	20cb      	movs	r0, #203	@ 0xcb
 800030c:	f7ff ff34 	bl	8000178 <LcdWriteReg>
	LcdWriteData(0x39);
 8000310:	2039      	movs	r0, #57	@ 0x39
 8000312:	f7ff ff5d 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x2C);
 8000316:	202c      	movs	r0, #44	@ 0x2c
 8000318:	f7ff ff5a 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x00);
 800031c:	2000      	movs	r0, #0
 800031e:	f7ff ff57 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x34);
 8000322:	2034      	movs	r0, #52	@ 0x34
 8000324:	f7ff ff54 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x02);
 8000328:	2002      	movs	r0, #2
 800032a:	f7ff ff51 	bl	80001d0 <LcdWriteData>

	//power control B
	LcdWriteReg(0xCF);
 800032e:	20cf      	movs	r0, #207	@ 0xcf
 8000330:	f7ff ff22 	bl	8000178 <LcdWriteReg>
	LcdWriteData(0x00);
 8000334:	2000      	movs	r0, #0
 8000336:	f7ff ff4b 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0xC1);
 800033a:	20c1      	movs	r0, #193	@ 0xc1
 800033c:	f7ff ff48 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x30);
 8000340:	2030      	movs	r0, #48	@ 0x30
 8000342:	f7ff ff45 	bl	80001d0 <LcdWriteData>

	//driver timing control A
	LcdWriteReg(0xE8);
 8000346:	20e8      	movs	r0, #232	@ 0xe8
 8000348:	f7ff ff16 	bl	8000178 <LcdWriteReg>
	LcdWriteData(0x85);
 800034c:	2085      	movs	r0, #133	@ 0x85
 800034e:	f7ff ff3f 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x00);
 8000352:	2000      	movs	r0, #0
 8000354:	f7ff ff3c 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x78);
 8000358:	2078      	movs	r0, #120	@ 0x78
 800035a:	f7ff ff39 	bl	80001d0 <LcdWriteData>

	//driver timing control B
	LcdWriteReg(0xEA);
 800035e:	20ea      	movs	r0, #234	@ 0xea
 8000360:	f7ff ff0a 	bl	8000178 <LcdWriteReg>
	LcdWriteData(0x00);
 8000364:	2000      	movs	r0, #0
 8000366:	f7ff ff33 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x00);
 800036a:	2000      	movs	r0, #0
 800036c:	f7ff ff30 	bl	80001d0 <LcdWriteData>

	//power on sequence control
	LcdWriteReg(0xED);
 8000370:	20ed      	movs	r0, #237	@ 0xed
 8000372:	f7ff ff01 	bl	8000178 <LcdWriteReg>
	LcdWriteData(0x64);
 8000376:	2064      	movs	r0, #100	@ 0x64
 8000378:	f7ff ff2a 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x03);
 800037c:	2003      	movs	r0, #3
 800037e:	f7ff ff27 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x12);
 8000382:	2012      	movs	r0, #18
 8000384:	f7ff ff24 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x81);
 8000388:	2081      	movs	r0, #129	@ 0x81
 800038a:	f7ff ff21 	bl	80001d0 <LcdWriteData>

	//pump ratio control
	LcdWriteReg(0xF7);
 800038e:	20f7      	movs	r0, #247	@ 0xf7
 8000390:	f7ff fef2 	bl	8000178 <LcdWriteReg>
	LcdWriteData(0x20);
 8000394:	2020      	movs	r0, #32
 8000396:	f7ff ff1b 	bl	80001d0 <LcdWriteData>

	//power control,VRH[5:0]
	LcdWriteReg(0xC0);
 800039a:	20c0      	movs	r0, #192	@ 0xc0
 800039c:	f7ff feec 	bl	8000178 <LcdWriteReg>
	LcdWriteData(0x23);
 80003a0:	2023      	movs	r0, #35	@ 0x23
 80003a2:	f7ff ff15 	bl	80001d0 <LcdWriteData>

	//Power control,SAP[2:0];BT[3:0]
	LcdWriteReg(0xC1);
 80003a6:	20c1      	movs	r0, #193	@ 0xc1
 80003a8:	f7ff fee6 	bl	8000178 <LcdWriteReg>
	LcdWriteData(0x10);
 80003ac:	2010      	movs	r0, #16
 80003ae:	f7ff ff0f 	bl	80001d0 <LcdWriteData>

	//vcm control
	LcdWriteReg(0xC5);
 80003b2:	20c5      	movs	r0, #197	@ 0xc5
 80003b4:	f7ff fee0 	bl	8000178 <LcdWriteReg>
	LcdWriteData(0x3E);
 80003b8:	203e      	movs	r0, #62	@ 0x3e
 80003ba:	f7ff ff09 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x28);
 80003be:	2028      	movs	r0, #40	@ 0x28
 80003c0:	f7ff ff06 	bl	80001d0 <LcdWriteData>

	//vcm control 2
	LcdWriteReg(0xC7);
 80003c4:	20c7      	movs	r0, #199	@ 0xc7
 80003c6:	f7ff fed7 	bl	8000178 <LcdWriteReg>
	LcdWriteData(0x86);
 80003ca:	2086      	movs	r0, #134	@ 0x86
 80003cc:	f7ff ff00 	bl	80001d0 <LcdWriteData>

	//memory access control
	LcdWriteReg(0x36);
 80003d0:	2036      	movs	r0, #54	@ 0x36
 80003d2:	f7ff fed1 	bl	8000178 <LcdWriteReg>
	LcdWriteData(0x48);
 80003d6:	2048      	movs	r0, #72	@ 0x48
 80003d8:	f7ff fefa 	bl	80001d0 <LcdWriteData>

	//pixel format
	LcdWriteReg(0x3A);
 80003dc:	203a      	movs	r0, #58	@ 0x3a
 80003de:	f7ff fecb 	bl	8000178 <LcdWriteReg>
	LcdWriteData(0x55);
 80003e2:	2055      	movs	r0, #85	@ 0x55
 80003e4:	f7ff fef4 	bl	80001d0 <LcdWriteData>

	//frameration control,normal mode full colours
	LcdWriteReg(0xB1);
 80003e8:	20b1      	movs	r0, #177	@ 0xb1
 80003ea:	f7ff fec5 	bl	8000178 <LcdWriteReg>
	LcdWriteData(0x00);
 80003ee:	2000      	movs	r0, #0
 80003f0:	f7ff feee 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x18);
 80003f4:	2018      	movs	r0, #24
 80003f6:	f7ff feeb 	bl	80001d0 <LcdWriteData>

	//display function control
	LcdWriteReg(0xB6);
 80003fa:	20b6      	movs	r0, #182	@ 0xb6
 80003fc:	f7ff febc 	bl	8000178 <LcdWriteReg>
	LcdWriteData(0x08);
 8000400:	2008      	movs	r0, #8
 8000402:	f7ff fee5 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x82);
 8000406:	2082      	movs	r0, #130	@ 0x82
 8000408:	f7ff fee2 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x27);
 800040c:	2027      	movs	r0, #39	@ 0x27
 800040e:	f7ff fedf 	bl	80001d0 <LcdWriteData>

	//3gamma function disable
	LcdWriteReg(0xF2);
 8000412:	20f2      	movs	r0, #242	@ 0xf2
 8000414:	f7ff feb0 	bl	8000178 <LcdWriteReg>
	LcdWriteData(0x00);
 8000418:	2000      	movs	r0, #0
 800041a:	f7ff fed9 	bl	80001d0 <LcdWriteData>

	//gamma curve selected
	LcdWriteReg(0x26);
 800041e:	2026      	movs	r0, #38	@ 0x26
 8000420:	f7ff feaa 	bl	8000178 <LcdWriteReg>
	LcdWriteData(0x01);
 8000424:	2001      	movs	r0, #1
 8000426:	f7ff fed3 	bl	80001d0 <LcdWriteData>

	//set positive gamma correction
	LcdWriteReg(0xE0);
 800042a:	20e0      	movs	r0, #224	@ 0xe0
 800042c:	f7ff fea4 	bl	8000178 <LcdWriteReg>
	LcdWriteData(0x0F);
 8000430:	200f      	movs	r0, #15
 8000432:	f7ff fecd 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x31);
 8000436:	2031      	movs	r0, #49	@ 0x31
 8000438:	f7ff feca 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x2B);
 800043c:	202b      	movs	r0, #43	@ 0x2b
 800043e:	f7ff fec7 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x0C);
 8000442:	200c      	movs	r0, #12
 8000444:	f7ff fec4 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x0E);
 8000448:	200e      	movs	r0, #14
 800044a:	f7ff fec1 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x08);
 800044e:	2008      	movs	r0, #8
 8000450:	f7ff febe 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x4E);
 8000454:	204e      	movs	r0, #78	@ 0x4e
 8000456:	f7ff febb 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0xF1);
 800045a:	20f1      	movs	r0, #241	@ 0xf1
 800045c:	f7ff feb8 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x37);
 8000460:	2037      	movs	r0, #55	@ 0x37
 8000462:	f7ff feb5 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x07);
 8000466:	2007      	movs	r0, #7
 8000468:	f7ff feb2 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x10);
 800046c:	2010      	movs	r0, #16
 800046e:	f7ff feaf 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x03);
 8000472:	2003      	movs	r0, #3
 8000474:	f7ff feac 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x0E);
 8000478:	200e      	movs	r0, #14
 800047a:	f7ff fea9 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x09);
 800047e:	2009      	movs	r0, #9
 8000480:	f7ff fea6 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x00);
 8000484:	2000      	movs	r0, #0
 8000486:	f7ff fea3 	bl	80001d0 <LcdWriteData>

	//set negative gamma correction
	LcdWriteReg(0xE1);
 800048a:	20e1      	movs	r0, #225	@ 0xe1
 800048c:	f7ff fe74 	bl	8000178 <LcdWriteReg>
	LcdWriteData(0x00);
 8000490:	2000      	movs	r0, #0
 8000492:	f7ff fe9d 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x0E);
 8000496:	200e      	movs	r0, #14
 8000498:	f7ff fe9a 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x14);
 800049c:	2014      	movs	r0, #20
 800049e:	f7ff fe97 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x03);
 80004a2:	2003      	movs	r0, #3
 80004a4:	f7ff fe94 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x11);
 80004a8:	2011      	movs	r0, #17
 80004aa:	f7ff fe91 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x07);
 80004ae:	2007      	movs	r0, #7
 80004b0:	f7ff fe8e 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x31);
 80004b4:	2031      	movs	r0, #49	@ 0x31
 80004b6:	f7ff fe8b 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0xC1);
 80004ba:	20c1      	movs	r0, #193	@ 0xc1
 80004bc:	f7ff fe88 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x48);
 80004c0:	2048      	movs	r0, #72	@ 0x48
 80004c2:	f7ff fe85 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x08);
 80004c6:	2008      	movs	r0, #8
 80004c8:	f7ff fe82 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x0F);
 80004cc:	200f      	movs	r0, #15
 80004ce:	f7ff fe7f 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x0C);
 80004d2:	200c      	movs	r0, #12
 80004d4:	f7ff fe7c 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x31);
 80004d8:	2031      	movs	r0, #49	@ 0x31
 80004da:	f7ff fe79 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x36);
 80004de:	2036      	movs	r0, #54	@ 0x36
 80004e0:	f7ff fe76 	bl	80001d0 <LcdWriteData>
	LcdWriteData(0x0F);
 80004e4:	200f      	movs	r0, #15
 80004e6:	f7ff fe73 	bl	80001d0 <LcdWriteData>

	//exit sleep
	LcdWriteReg(0x11);
 80004ea:	2011      	movs	r0, #17
 80004ec:	f7ff fe44 	bl	8000178 <LcdWriteReg>
	HAL_Delay(120);
 80004f0:	2078      	movs	r0, #120	@ 0x78
 80004f2:	f000 fb1d 	bl	8000b30 <HAL_Delay>
	//display on
	LcdWriteReg(0x29);
 80004f6:	2029      	movs	r0, #41	@ 0x29
 80004f8:	f7ff fe3e 	bl	8000178 <LcdWriteReg>
}
 80004fc:	bf00      	nop
 80004fe:	3708      	adds	r7, #8
 8000500:	46bd      	mov	sp, r7
 8000502:	bd80      	pop	{r7, pc}
 8000504:	40010c00 	.word	0x40010c00

08000508 <LCD_X_Config>:
*   Called during the initialization process in order to set up the
*   display driver configuration.
*
*/

void LCD_X_Config(void) {
 8000508:	b580      	push	{r7, lr}
 800050a:	b0a0      	sub	sp, #128	@ 0x80
 800050c:	af00      	add	r7, sp, #0
  GUI_DEVICE * pDevice;
  CONFIG_FLEXCOLOR Config = {0};
 800050e:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 8000512:	2200      	movs	r2, #0
 8000514:	601a      	str	r2, [r3, #0]
 8000516:	605a      	str	r2, [r3, #4]
 8000518:	609a      	str	r2, [r3, #8]
 800051a:	60da      	str	r2, [r3, #12]
 800051c:	611a      	str	r2, [r3, #16]
  GUI_PORT_API PortAPI = {0};
 800051e:	463b      	mov	r3, r7
 8000520:	2268      	movs	r2, #104	@ 0x68
 8000522:	2100      	movs	r1, #0
 8000524:	4618      	mov	r0, r3
 8000526:	f00a fe4d 	bl	800b1c4 <memset>
  //
  // Set display driver and color conversion
  //
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_M565, 0, 0);//16bit color flexcolor driver
 800052a:	2300      	movs	r3, #0
 800052c:	2200      	movs	r2, #0
 800052e:	4916      	ldr	r1, [pc, #88]	@ (8000588 <LCD_X_Config+0x80>)
 8000530:	4816      	ldr	r0, [pc, #88]	@ (800058c <LCD_X_Config+0x84>)
 8000532:	f002 fba1 	bl	8002c78 <GUI_DEVICE_CreateAndLink>
 8000536:	67f8      	str	r0, [r7, #124]	@ 0x7c
  //
  // Display driver configuration, required for Lin-driver
  //
  LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
 8000538:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 800053c:	21f0      	movs	r1, #240	@ 0xf0
 800053e:	2000      	movs	r0, #0
 8000540:	f003 faa0 	bl	8003a84 <LCD_SetSizeEx>
  LCD_SetVSizeEx(0, VXSIZE_PHYS, VYSIZE_PHYS);
 8000544:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8000548:	21f0      	movs	r1, #240	@ 0xf0
 800054a:	2000      	movs	r0, #0
 800054c:	f003 fab2 	bl	8003ab4 <LCD_SetVSizeEx>
  //
  // Orientation
  //
  Config.Orientation = GUI_SWAP_XY;
 8000550:	2304      	movs	r3, #4
 8000552:	673b      	str	r3, [r7, #112]	@ 0x70
  GUIDRV_FlexColor_Config(pDevice, &Config);
 8000554:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 8000558:	4619      	mov	r1, r3
 800055a:	6ff8      	ldr	r0, [r7, #124]	@ 0x7c
 800055c:	f003 fda9 	bl	80040b2 <GUIDRV_FlexColor_Config>
  //
  // Set controller and operation mode
  //
  PortAPI.pfWrite8_A0  = LcdWriteReg;
 8000560:	4b0b      	ldr	r3, [pc, #44]	@ (8000590 <LCD_X_Config+0x88>)
 8000562:	603b      	str	r3, [r7, #0]
  PortAPI.pfWrite8_A1  = LcdWriteData;
 8000564:	4b0b      	ldr	r3, [pc, #44]	@ (8000594 <LCD_X_Config+0x8c>)
 8000566:	607b      	str	r3, [r7, #4]
  PortAPI.pfWriteM8_A1  = LcdWriteDataMultiple;
 8000568:	4b0b      	ldr	r3, [pc, #44]	@ (8000598 <LCD_X_Config+0x90>)
 800056a:	60fb      	str	r3, [r7, #12]
  PortAPI.pfRead8_A1  = LcdReadReg;
 800056c:	4b0b      	ldr	r3, [pc, #44]	@ (800059c <LCD_X_Config+0x94>)
 800056e:	617b      	str	r3, [r7, #20]
  PortAPI.pfReadM8_A1 = LcdReadDataMultiple;
 8000570:	4b0b      	ldr	r3, [pc, #44]	@ (80005a0 <LCD_X_Config+0x98>)
 8000572:	61fb      	str	r3, [r7, #28]

  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66709, GUIDRV_FLEXCOLOR_M16C0B8);//ILI9341, 16bit color, 8 bit bus, no cache
 8000574:	4639      	mov	r1, r7
 8000576:	4b0b      	ldr	r3, [pc, #44]	@ (80005a4 <LCD_X_Config+0x9c>)
 8000578:	4a0b      	ldr	r2, [pc, #44]	@ (80005a8 <LCD_X_Config+0xa0>)
 800057a:	6ff8      	ldr	r0, [r7, #124]	@ 0x7c
 800057c:	f003 fdb7 	bl	80040ee <GUIDRV_FlexColor_SetFunc>
}
 8000580:	bf00      	nop
 8000582:	3780      	adds	r7, #128	@ 0x80
 8000584:	46bd      	mov	sp, r7
 8000586:	bd80      	pop	{r7, pc}
 8000588:	0800b260 	.word	0x0800b260
 800058c:	0800b694 	.word	0x0800b694
 8000590:	08000179 	.word	0x08000179
 8000594:	080001d1 	.word	0x080001d1
 8000598:	08000219 	.word	0x08000219
 800059c:	080001c1 	.word	0x080001c1
 80005a0:	08000269 	.word	0x08000269
 80005a4:	080047c1 	.word	0x080047c1
 80005a8:	08004b61 	.word	0x08004b61

080005ac <LCD_X_DisplayDriver>:
* Return Value:
*   < -1 - Error
*     -1 - Command not handled
*      0 - Ok
*/
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
 80005ac:	b580      	push	{r7, lr}
 80005ae:	b086      	sub	sp, #24
 80005b0:	af00      	add	r7, sp, #0
 80005b2:	60f8      	str	r0, [r7, #12]
 80005b4:	60b9      	str	r1, [r7, #8]
 80005b6:	607a      	str	r2, [r7, #4]
  int r;
  (void) LayerIndex;
  (void) pData;
  
  switch (Cmd) {
 80005b8:	68bb      	ldr	r3, [r7, #8]
 80005ba:	2b01      	cmp	r3, #1
 80005bc:	d103      	bne.n	80005c6 <LCD_X_DisplayDriver+0x1a>
  case LCD_X_INITCONTROLLER: {

	  LcdInit();	//ili9341 init code
 80005be:	f7ff fe65 	bl	800028c <LcdInit>
    // display controller and put it into operation. If the display
    // controller is not initialized by any external routine this needs
    // to be adapted by the customer...
    //
    // ...
    return 0;
 80005c2:	2300      	movs	r3, #0
 80005c4:	e003      	b.n	80005ce <LCD_X_DisplayDriver+0x22>
  }
  default:
    r = -1;
 80005c6:	f04f 33ff 	mov.w	r3, #4294967295
 80005ca:	617b      	str	r3, [r7, #20]
  }
  return r;
 80005cc:	697b      	ldr	r3, [r7, #20]
}
 80005ce:	4618      	mov	r0, r3
 80005d0:	3718      	adds	r7, #24
 80005d2:	46bd      	mov	sp, r7
 80005d4:	bd80      	pop	{r7, pc}

080005d6 <_cbDialog>:

/*********************************************************************
*
*       _cbDialog
*/
static void _cbDialog(WM_MESSAGE * pMsg) {
 80005d6:	b580      	push	{r7, lr}
 80005d8:	b082      	sub	sp, #8
 80005da:	af00      	add	r7, sp, #0
 80005dc:	6078      	str	r0, [r7, #4]

  switch (pMsg->MsgId) {
  // USER START (Optionally insert additional message handling)
  // USER END
  default:
    WM_DefaultProc(pMsg);
 80005de:	6878      	ldr	r0, [r7, #4]
 80005e0:	f006 fd28 	bl	8007034 <WM_DefaultProc>
    break;
 80005e4:	bf00      	nop
  }
}
 80005e6:	bf00      	nop
 80005e8:	3708      	adds	r7, #8
 80005ea:	46bd      	mov	sp, r7
 80005ec:	bd80      	pop	{r7, pc}
	...

080005f0 <CreateWindow>:
*/

uint8_t yuzdelik = 0;

WM_HWIN CreateWindow(void);
WM_HWIN CreateWindow(void) {
 80005f0:	b580      	push	{r7, lr}
 80005f2:	b084      	sub	sp, #16
 80005f4:	af02      	add	r7, sp, #8
  WM_HWIN hWin;

  PROGBAR_Handle prog;

  hWin = GUI_CreateDialogBox(_aDialogCreate, GUI_COUNTOF(_aDialogCreate), _cbDialog, WM_HBKWIN, 0, 0);
 80005f6:	f006 fe0d 	bl	8007214 <WM_GetDesktopWindow>
 80005fa:	4603      	mov	r3, r0
 80005fc:	2200      	movs	r2, #0
 80005fe:	9201      	str	r2, [sp, #4]
 8000600:	2200      	movs	r2, #0
 8000602:	9200      	str	r2, [sp, #0]
 8000604:	4a12      	ldr	r2, [pc, #72]	@ (8000650 <CreateWindow+0x60>)
 8000606:	2102      	movs	r1, #2
 8000608:	4812      	ldr	r0, [pc, #72]	@ (8000654 <CreateWindow+0x64>)
 800060a:	f007 fa4a 	bl	8007aa2 <GUI_CreateDialogBox>
 800060e:	6078      	str	r0, [r7, #4]

  prog = WM_GetDialogItem(hWin, ID_PROGBAR_0);
 8000610:	f640 0101 	movw	r1, #2049	@ 0x801
 8000614:	6878      	ldr	r0, [r7, #4]
 8000616:	f006 fe4e 	bl	80072b6 <WM_GetDialogItem>
 800061a:	6038      	str	r0, [r7, #0]

  while(1)
  {
	  yuzdelik++;
 800061c:	4b0e      	ldr	r3, [pc, #56]	@ (8000658 <CreateWindow+0x68>)
 800061e:	781b      	ldrb	r3, [r3, #0]
 8000620:	3301      	adds	r3, #1
 8000622:	b2da      	uxtb	r2, r3
 8000624:	4b0c      	ldr	r3, [pc, #48]	@ (8000658 <CreateWindow+0x68>)
 8000626:	701a      	strb	r2, [r3, #0]

	  if (yuzdelik > 99)
 8000628:	4b0b      	ldr	r3, [pc, #44]	@ (8000658 <CreateWindow+0x68>)
 800062a:	781b      	ldrb	r3, [r3, #0]
 800062c:	2b63      	cmp	r3, #99	@ 0x63
 800062e:	d902      	bls.n	8000636 <CreateWindow+0x46>
	  {
		  yuzdelik = 0;
 8000630:	4b09      	ldr	r3, [pc, #36]	@ (8000658 <CreateWindow+0x68>)
 8000632:	2200      	movs	r2, #0
 8000634:	701a      	strb	r2, [r3, #0]
	  }

	  PROGBAR_SetValue(prog, yuzdelik);
 8000636:	4b08      	ldr	r3, [pc, #32]	@ (8000658 <CreateWindow+0x68>)
 8000638:	781b      	ldrb	r3, [r3, #0]
 800063a:	4619      	mov	r1, r3
 800063c:	6838      	ldr	r0, [r7, #0]
 800063e:	f007 fbb7 	bl	8007db0 <PROGBAR_SetValue>

	  GUI_Exec();
 8000642:	f002 f83f 	bl	80026c4 <GUI_Exec>

	  HAL_Delay(50);
 8000646:	2032      	movs	r0, #50	@ 0x32
 8000648:	f000 fa72 	bl	8000b30 <HAL_Delay>
	  yuzdelik++;
 800064c:	e7e6      	b.n	800061c <CreateWindow+0x2c>
 800064e:	bf00      	nop
 8000650:	080005d7 	.word	0x080005d7
 8000654:	0800c074 	.word	0x0800c074
 8000658:	20002ac0 	.word	0x20002ac0

0800065c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800065c:	b580      	push	{r7, lr}
 800065e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000660:	f000 fa04 	bl	8000a6c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000664:	f000 f80c 	bl	8000680 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000668:	f000 f89a 	bl	80007a0 <MX_GPIO_Init>
  MX_SPI1_Init();
 800066c:	f000 f862 	bl	8000734 <MX_SPI1_Init>
  MX_CRC_Init();
 8000670:	f000 f84c 	bl	800070c <MX_CRC_Init>
  /* USER CODE BEGIN 2 */
  GUI_Init();
 8000674:	f002 f9e0 	bl	8002a38 <GUI_Init>
  CreateWindow();
 8000678:	f7ff ffba 	bl	80005f0 <CreateWindow>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 800067c:	bf00      	nop
 800067e:	e7fd      	b.n	800067c <main+0x20>

08000680 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000680:	b580      	push	{r7, lr}
 8000682:	b090      	sub	sp, #64	@ 0x40
 8000684:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000686:	f107 0318 	add.w	r3, r7, #24
 800068a:	2228      	movs	r2, #40	@ 0x28
 800068c:	2100      	movs	r1, #0
 800068e:	4618      	mov	r0, r3
 8000690:	f00a fd98 	bl	800b1c4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000694:	1d3b      	adds	r3, r7, #4
 8000696:	2200      	movs	r2, #0
 8000698:	601a      	str	r2, [r3, #0]
 800069a:	605a      	str	r2, [r3, #4]
 800069c:	609a      	str	r2, [r3, #8]
 800069e:	60da      	str	r2, [r3, #12]
 80006a0:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80006a2:	2301      	movs	r3, #1
 80006a4:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80006a6:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80006aa:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80006ac:	2300      	movs	r3, #0
 80006ae:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80006b0:	2301      	movs	r3, #1
 80006b2:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80006b4:	2302      	movs	r3, #2
 80006b6:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80006b8:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80006bc:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 80006be:	f44f 13e0 	mov.w	r3, #1835008	@ 0x1c0000
 80006c2:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80006c4:	f107 0318 	add.w	r3, r7, #24
 80006c8:	4618      	mov	r0, r3
 80006ca:	f000 fcf1 	bl	80010b0 <HAL_RCC_OscConfig>
 80006ce:	4603      	mov	r3, r0
 80006d0:	2b00      	cmp	r3, #0
 80006d2:	d001      	beq.n	80006d8 <SystemClock_Config+0x58>
  {
    Error_Handler();
 80006d4:	f000 f8d2 	bl	800087c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80006d8:	230f      	movs	r3, #15
 80006da:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80006dc:	2302      	movs	r3, #2
 80006de:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80006e0:	2300      	movs	r3, #0
 80006e2:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80006e4:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80006e8:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80006ea:	2300      	movs	r3, #0
 80006ec:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80006ee:	1d3b      	adds	r3, r7, #4
 80006f0:	2102      	movs	r1, #2
 80006f2:	4618      	mov	r0, r3
 80006f4:	f000 ff5e 	bl	80015b4 <HAL_RCC_ClockConfig>
 80006f8:	4603      	mov	r3, r0
 80006fa:	2b00      	cmp	r3, #0
 80006fc:	d001      	beq.n	8000702 <SystemClock_Config+0x82>
  {
    Error_Handler();
 80006fe:	f000 f8bd 	bl	800087c <Error_Handler>
  }
}
 8000702:	bf00      	nop
 8000704:	3740      	adds	r7, #64	@ 0x40
 8000706:	46bd      	mov	sp, r7
 8000708:	bd80      	pop	{r7, pc}
	...

0800070c <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 800070c:	b580      	push	{r7, lr}
 800070e:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8000710:	4b06      	ldr	r3, [pc, #24]	@ (800072c <MX_CRC_Init+0x20>)
 8000712:	4a07      	ldr	r2, [pc, #28]	@ (8000730 <MX_CRC_Init+0x24>)
 8000714:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000716:	4805      	ldr	r0, [pc, #20]	@ (800072c <MX_CRC_Init+0x20>)
 8000718:	f000 fb11 	bl	8000d3e <HAL_CRC_Init>
 800071c:	4603      	mov	r3, r0
 800071e:	2b00      	cmp	r3, #0
 8000720:	d001      	beq.n	8000726 <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 8000722:	f000 f8ab 	bl	800087c <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8000726:	bf00      	nop
 8000728:	bd80      	pop	{r7, pc}
 800072a:	bf00      	nop
 800072c:	20002ac4 	.word	0x20002ac4
 8000730:	40023000 	.word	0x40023000

08000734 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8000734:	b580      	push	{r7, lr}
 8000736:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8000738:	4b17      	ldr	r3, [pc, #92]	@ (8000798 <MX_SPI1_Init+0x64>)
 800073a:	4a18      	ldr	r2, [pc, #96]	@ (800079c <MX_SPI1_Init+0x68>)
 800073c:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 800073e:	4b16      	ldr	r3, [pc, #88]	@ (8000798 <MX_SPI1_Init+0x64>)
 8000740:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8000744:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8000746:	4b14      	ldr	r3, [pc, #80]	@ (8000798 <MX_SPI1_Init+0x64>)
 8000748:	2200      	movs	r2, #0
 800074a:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 800074c:	4b12      	ldr	r3, [pc, #72]	@ (8000798 <MX_SPI1_Init+0x64>)
 800074e:	2200      	movs	r2, #0
 8000750:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000752:	4b11      	ldr	r3, [pc, #68]	@ (8000798 <MX_SPI1_Init+0x64>)
 8000754:	2200      	movs	r2, #0
 8000756:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000758:	4b0f      	ldr	r3, [pc, #60]	@ (8000798 <MX_SPI1_Init+0x64>)
 800075a:	2200      	movs	r2, #0
 800075c:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 800075e:	4b0e      	ldr	r3, [pc, #56]	@ (8000798 <MX_SPI1_Init+0x64>)
 8000760:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000764:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 8000766:	4b0c      	ldr	r3, [pc, #48]	@ (8000798 <MX_SPI1_Init+0x64>)
 8000768:	2208      	movs	r2, #8
 800076a:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800076c:	4b0a      	ldr	r3, [pc, #40]	@ (8000798 <MX_SPI1_Init+0x64>)
 800076e:	2200      	movs	r2, #0
 8000770:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8000772:	4b09      	ldr	r3, [pc, #36]	@ (8000798 <MX_SPI1_Init+0x64>)
 8000774:	2200      	movs	r2, #0
 8000776:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000778:	4b07      	ldr	r3, [pc, #28]	@ (8000798 <MX_SPI1_Init+0x64>)
 800077a:	2200      	movs	r2, #0
 800077c:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 10;
 800077e:	4b06      	ldr	r3, [pc, #24]	@ (8000798 <MX_SPI1_Init+0x64>)
 8000780:	220a      	movs	r2, #10
 8000782:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8000784:	4804      	ldr	r0, [pc, #16]	@ (8000798 <MX_SPI1_Init+0x64>)
 8000786:	f001 f871 	bl	800186c <HAL_SPI_Init>
 800078a:	4603      	mov	r3, r0
 800078c:	2b00      	cmp	r3, #0
 800078e:	d001      	beq.n	8000794 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8000790:	f000 f874 	bl	800087c <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8000794:	bf00      	nop
 8000796:	bd80      	pop	{r7, pc}
 8000798:	20002acc 	.word	0x20002acc
 800079c:	40013000 	.word	0x40013000

080007a0 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80007a0:	b580      	push	{r7, lr}
 80007a2:	b088      	sub	sp, #32
 80007a4:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80007a6:	f107 0310 	add.w	r3, r7, #16
 80007aa:	2200      	movs	r2, #0
 80007ac:	601a      	str	r2, [r3, #0]
 80007ae:	605a      	str	r2, [r3, #4]
 80007b0:	609a      	str	r2, [r3, #8]
 80007b2:	60da      	str	r2, [r3, #12]
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80007b4:	4b2e      	ldr	r3, [pc, #184]	@ (8000870 <MX_GPIO_Init+0xd0>)
 80007b6:	699b      	ldr	r3, [r3, #24]
 80007b8:	4a2d      	ldr	r2, [pc, #180]	@ (8000870 <MX_GPIO_Init+0xd0>)
 80007ba:	f043 0310 	orr.w	r3, r3, #16
 80007be:	6193      	str	r3, [r2, #24]
 80007c0:	4b2b      	ldr	r3, [pc, #172]	@ (8000870 <MX_GPIO_Init+0xd0>)
 80007c2:	699b      	ldr	r3, [r3, #24]
 80007c4:	f003 0310 	and.w	r3, r3, #16
 80007c8:	60fb      	str	r3, [r7, #12]
 80007ca:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80007cc:	4b28      	ldr	r3, [pc, #160]	@ (8000870 <MX_GPIO_Init+0xd0>)
 80007ce:	699b      	ldr	r3, [r3, #24]
 80007d0:	4a27      	ldr	r2, [pc, #156]	@ (8000870 <MX_GPIO_Init+0xd0>)
 80007d2:	f043 0320 	orr.w	r3, r3, #32
 80007d6:	6193      	str	r3, [r2, #24]
 80007d8:	4b25      	ldr	r3, [pc, #148]	@ (8000870 <MX_GPIO_Init+0xd0>)
 80007da:	699b      	ldr	r3, [r3, #24]
 80007dc:	f003 0320 	and.w	r3, r3, #32
 80007e0:	60bb      	str	r3, [r7, #8]
 80007e2:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80007e4:	4b22      	ldr	r3, [pc, #136]	@ (8000870 <MX_GPIO_Init+0xd0>)
 80007e6:	699b      	ldr	r3, [r3, #24]
 80007e8:	4a21      	ldr	r2, [pc, #132]	@ (8000870 <MX_GPIO_Init+0xd0>)
 80007ea:	f043 0304 	orr.w	r3, r3, #4
 80007ee:	6193      	str	r3, [r2, #24]
 80007f0:	4b1f      	ldr	r3, [pc, #124]	@ (8000870 <MX_GPIO_Init+0xd0>)
 80007f2:	699b      	ldr	r3, [r3, #24]
 80007f4:	f003 0304 	and.w	r3, r3, #4
 80007f8:	607b      	str	r3, [r7, #4]
 80007fa:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80007fc:	4b1c      	ldr	r3, [pc, #112]	@ (8000870 <MX_GPIO_Init+0xd0>)
 80007fe:	699b      	ldr	r3, [r3, #24]
 8000800:	4a1b      	ldr	r2, [pc, #108]	@ (8000870 <MX_GPIO_Init+0xd0>)
 8000802:	f043 0308 	orr.w	r3, r3, #8
 8000806:	6193      	str	r3, [r2, #24]
 8000808:	4b19      	ldr	r3, [pc, #100]	@ (8000870 <MX_GPIO_Init+0xd0>)
 800080a:	699b      	ldr	r3, [r3, #24]
 800080c:	f003 0308 	and.w	r3, r3, #8
 8000810:	603b      	str	r3, [r7, #0]
 8000812:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 8000814:	2200      	movs	r2, #0
 8000816:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800081a:	4816      	ldr	r0, [pc, #88]	@ (8000874 <MX_GPIO_Init+0xd4>)
 800081c:	f000 fc30 	bl	8001080 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LCD_DC_Pin|LCD_RST_Pin|LCD_CS_Pin, GPIO_PIN_RESET);
 8000820:	2200      	movs	r2, #0
 8000822:	f240 4103 	movw	r1, #1027	@ 0x403
 8000826:	4814      	ldr	r0, [pc, #80]	@ (8000878 <MX_GPIO_Init+0xd8>)
 8000828:	f000 fc2a 	bl	8001080 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 800082c:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000830:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000832:	2301      	movs	r3, #1
 8000834:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000836:	2300      	movs	r3, #0
 8000838:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800083a:	2302      	movs	r3, #2
 800083c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800083e:	f107 0310 	add.w	r3, r7, #16
 8000842:	4619      	mov	r1, r3
 8000844:	480b      	ldr	r0, [pc, #44]	@ (8000874 <MX_GPIO_Init+0xd4>)
 8000846:	f000 fa97 	bl	8000d78 <HAL_GPIO_Init>

  /*Configure GPIO pins : LCD_DC_Pin LCD_RST_Pin LCD_CS_Pin */
  GPIO_InitStruct.Pin = LCD_DC_Pin|LCD_RST_Pin|LCD_CS_Pin;
 800084a:	f240 4303 	movw	r3, #1027	@ 0x403
 800084e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000850:	2301      	movs	r3, #1
 8000852:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000854:	2300      	movs	r3, #0
 8000856:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000858:	2302      	movs	r3, #2
 800085a:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800085c:	f107 0310 	add.w	r3, r7, #16
 8000860:	4619      	mov	r1, r3
 8000862:	4805      	ldr	r0, [pc, #20]	@ (8000878 <MX_GPIO_Init+0xd8>)
 8000864:	f000 fa88 	bl	8000d78 <HAL_GPIO_Init>

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 8000868:	bf00      	nop
 800086a:	3720      	adds	r7, #32
 800086c:	46bd      	mov	sp, r7
 800086e:	bd80      	pop	{r7, pc}
 8000870:	40021000 	.word	0x40021000
 8000874:	40011000 	.word	0x40011000
 8000878:	40010c00 	.word	0x40010c00

0800087c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800087c:	b480      	push	{r7}
 800087e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000880:	b672      	cpsid	i
}
 8000882:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000884:	bf00      	nop
 8000886:	e7fd      	b.n	8000884 <Error_Handler+0x8>

08000888 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000888:	b480      	push	{r7}
 800088a:	b085      	sub	sp, #20
 800088c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 800088e:	4b15      	ldr	r3, [pc, #84]	@ (80008e4 <HAL_MspInit+0x5c>)
 8000890:	699b      	ldr	r3, [r3, #24]
 8000892:	4a14      	ldr	r2, [pc, #80]	@ (80008e4 <HAL_MspInit+0x5c>)
 8000894:	f043 0301 	orr.w	r3, r3, #1
 8000898:	6193      	str	r3, [r2, #24]
 800089a:	4b12      	ldr	r3, [pc, #72]	@ (80008e4 <HAL_MspInit+0x5c>)
 800089c:	699b      	ldr	r3, [r3, #24]
 800089e:	f003 0301 	and.w	r3, r3, #1
 80008a2:	60bb      	str	r3, [r7, #8]
 80008a4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 80008a6:	4b0f      	ldr	r3, [pc, #60]	@ (80008e4 <HAL_MspInit+0x5c>)
 80008a8:	69db      	ldr	r3, [r3, #28]
 80008aa:	4a0e      	ldr	r2, [pc, #56]	@ (80008e4 <HAL_MspInit+0x5c>)
 80008ac:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80008b0:	61d3      	str	r3, [r2, #28]
 80008b2:	4b0c      	ldr	r3, [pc, #48]	@ (80008e4 <HAL_MspInit+0x5c>)
 80008b4:	69db      	ldr	r3, [r3, #28]
 80008b6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80008ba:	607b      	str	r3, [r7, #4]
 80008bc:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 80008be:	4b0a      	ldr	r3, [pc, #40]	@ (80008e8 <HAL_MspInit+0x60>)
 80008c0:	685b      	ldr	r3, [r3, #4]
 80008c2:	60fb      	str	r3, [r7, #12]
 80008c4:	68fb      	ldr	r3, [r7, #12]
 80008c6:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 80008ca:	60fb      	str	r3, [r7, #12]
 80008cc:	68fb      	ldr	r3, [r7, #12]
 80008ce:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80008d2:	60fb      	str	r3, [r7, #12]
 80008d4:	4a04      	ldr	r2, [pc, #16]	@ (80008e8 <HAL_MspInit+0x60>)
 80008d6:	68fb      	ldr	r3, [r7, #12]
 80008d8:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80008da:	bf00      	nop
 80008dc:	3714      	adds	r7, #20
 80008de:	46bd      	mov	sp, r7
 80008e0:	bc80      	pop	{r7}
 80008e2:	4770      	bx	lr
 80008e4:	40021000 	.word	0x40021000
 80008e8:	40010000 	.word	0x40010000

080008ec <HAL_CRC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 80008ec:	b480      	push	{r7}
 80008ee:	b085      	sub	sp, #20
 80008f0:	af00      	add	r7, sp, #0
 80008f2:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 80008f4:	687b      	ldr	r3, [r7, #4]
 80008f6:	681b      	ldr	r3, [r3, #0]
 80008f8:	4a09      	ldr	r2, [pc, #36]	@ (8000920 <HAL_CRC_MspInit+0x34>)
 80008fa:	4293      	cmp	r3, r2
 80008fc:	d10b      	bne.n	8000916 <HAL_CRC_MspInit+0x2a>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80008fe:	4b09      	ldr	r3, [pc, #36]	@ (8000924 <HAL_CRC_MspInit+0x38>)
 8000900:	695b      	ldr	r3, [r3, #20]
 8000902:	4a08      	ldr	r2, [pc, #32]	@ (8000924 <HAL_CRC_MspInit+0x38>)
 8000904:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000908:	6153      	str	r3, [r2, #20]
 800090a:	4b06      	ldr	r3, [pc, #24]	@ (8000924 <HAL_CRC_MspInit+0x38>)
 800090c:	695b      	ldr	r3, [r3, #20]
 800090e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8000912:	60fb      	str	r3, [r7, #12]
 8000914:	68fb      	ldr	r3, [r7, #12]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 8000916:	bf00      	nop
 8000918:	3714      	adds	r7, #20
 800091a:	46bd      	mov	sp, r7
 800091c:	bc80      	pop	{r7}
 800091e:	4770      	bx	lr
 8000920:	40023000 	.word	0x40023000
 8000924:	40021000 	.word	0x40021000

08000928 <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8000928:	b580      	push	{r7, lr}
 800092a:	b088      	sub	sp, #32
 800092c:	af00      	add	r7, sp, #0
 800092e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000930:	f107 0310 	add.w	r3, r7, #16
 8000934:	2200      	movs	r2, #0
 8000936:	601a      	str	r2, [r3, #0]
 8000938:	605a      	str	r2, [r3, #4]
 800093a:	609a      	str	r2, [r3, #8]
 800093c:	60da      	str	r2, [r3, #12]
  if(hspi->Instance==SPI1)
 800093e:	687b      	ldr	r3, [r7, #4]
 8000940:	681b      	ldr	r3, [r3, #0]
 8000942:	4a1b      	ldr	r2, [pc, #108]	@ (80009b0 <HAL_SPI_MspInit+0x88>)
 8000944:	4293      	cmp	r3, r2
 8000946:	d12f      	bne.n	80009a8 <HAL_SPI_MspInit+0x80>
  {
    /* USER CODE BEGIN SPI1_MspInit 0 */

    /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8000948:	4b1a      	ldr	r3, [pc, #104]	@ (80009b4 <HAL_SPI_MspInit+0x8c>)
 800094a:	699b      	ldr	r3, [r3, #24]
 800094c:	4a19      	ldr	r2, [pc, #100]	@ (80009b4 <HAL_SPI_MspInit+0x8c>)
 800094e:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000952:	6193      	str	r3, [r2, #24]
 8000954:	4b17      	ldr	r3, [pc, #92]	@ (80009b4 <HAL_SPI_MspInit+0x8c>)
 8000956:	699b      	ldr	r3, [r3, #24]
 8000958:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800095c:	60fb      	str	r3, [r7, #12]
 800095e:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000960:	4b14      	ldr	r3, [pc, #80]	@ (80009b4 <HAL_SPI_MspInit+0x8c>)
 8000962:	699b      	ldr	r3, [r3, #24]
 8000964:	4a13      	ldr	r2, [pc, #76]	@ (80009b4 <HAL_SPI_MspInit+0x8c>)
 8000966:	f043 0304 	orr.w	r3, r3, #4
 800096a:	6193      	str	r3, [r2, #24]
 800096c:	4b11      	ldr	r3, [pc, #68]	@ (80009b4 <HAL_SPI_MspInit+0x8c>)
 800096e:	699b      	ldr	r3, [r3, #24]
 8000970:	f003 0304 	and.w	r3, r3, #4
 8000974:	60bb      	str	r3, [r7, #8]
 8000976:	68bb      	ldr	r3, [r7, #8]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_7;
 8000978:	23a0      	movs	r3, #160	@ 0xa0
 800097a:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800097c:	2302      	movs	r3, #2
 800097e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000980:	2303      	movs	r3, #3
 8000982:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000984:	f107 0310 	add.w	r3, r7, #16
 8000988:	4619      	mov	r1, r3
 800098a:	480b      	ldr	r0, [pc, #44]	@ (80009b8 <HAL_SPI_MspInit+0x90>)
 800098c:	f000 f9f4 	bl	8000d78 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8000990:	2340      	movs	r3, #64	@ 0x40
 8000992:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000994:	2300      	movs	r3, #0
 8000996:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000998:	2300      	movs	r3, #0
 800099a:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800099c:	f107 0310 	add.w	r3, r7, #16
 80009a0:	4619      	mov	r1, r3
 80009a2:	4805      	ldr	r0, [pc, #20]	@ (80009b8 <HAL_SPI_MspInit+0x90>)
 80009a4:	f000 f9e8 	bl	8000d78 <HAL_GPIO_Init>

    /* USER CODE END SPI1_MspInit 1 */

  }

}
 80009a8:	bf00      	nop
 80009aa:	3720      	adds	r7, #32
 80009ac:	46bd      	mov	sp, r7
 80009ae:	bd80      	pop	{r7, pc}
 80009b0:	40013000 	.word	0x40013000
 80009b4:	40021000 	.word	0x40021000
 80009b8:	40010800 	.word	0x40010800

080009bc <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80009bc:	b480      	push	{r7}
 80009be:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80009c0:	bf00      	nop
 80009c2:	e7fd      	b.n	80009c0 <NMI_Handler+0x4>

080009c4 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80009c4:	b480      	push	{r7}
 80009c6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80009c8:	bf00      	nop
 80009ca:	e7fd      	b.n	80009c8 <HardFault_Handler+0x4>

080009cc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80009cc:	b480      	push	{r7}
 80009ce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80009d0:	bf00      	nop
 80009d2:	e7fd      	b.n	80009d0 <MemManage_Handler+0x4>

080009d4 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80009d4:	b480      	push	{r7}
 80009d6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80009d8:	bf00      	nop
 80009da:	e7fd      	b.n	80009d8 <BusFault_Handler+0x4>

080009dc <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80009dc:	b480      	push	{r7}
 80009de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80009e0:	bf00      	nop
 80009e2:	e7fd      	b.n	80009e0 <UsageFault_Handler+0x4>

080009e4 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80009e4:	b480      	push	{r7}
 80009e6:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80009e8:	bf00      	nop
 80009ea:	46bd      	mov	sp, r7
 80009ec:	bc80      	pop	{r7}
 80009ee:	4770      	bx	lr

080009f0 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80009f0:	b480      	push	{r7}
 80009f2:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80009f4:	bf00      	nop
 80009f6:	46bd      	mov	sp, r7
 80009f8:	bc80      	pop	{r7}
 80009fa:	4770      	bx	lr

080009fc <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80009fc:	b480      	push	{r7}
 80009fe:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000a00:	bf00      	nop
 8000a02:	46bd      	mov	sp, r7
 8000a04:	bc80      	pop	{r7}
 8000a06:	4770      	bx	lr

08000a08 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000a08:	b580      	push	{r7, lr}
 8000a0a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000a0c:	f000 f874 	bl	8000af8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000a10:	bf00      	nop
 8000a12:	bd80      	pop	{r7, pc}

08000a14 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8000a14:	b480      	push	{r7}
 8000a16:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000a18:	bf00      	nop
 8000a1a:	46bd      	mov	sp, r7
 8000a1c:	bc80      	pop	{r7}
 8000a1e:	4770      	bx	lr

08000a20 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Call the clock system initialization function.*/
    bl  SystemInit
 8000a20:	f7ff fff8 	bl	8000a14 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000a24:	480b      	ldr	r0, [pc, #44]	@ (8000a54 <LoopFillZerobss+0xe>)
  ldr r1, =_edata
 8000a26:	490c      	ldr	r1, [pc, #48]	@ (8000a58 <LoopFillZerobss+0x12>)
  ldr r2, =_sidata
 8000a28:	4a0c      	ldr	r2, [pc, #48]	@ (8000a5c <LoopFillZerobss+0x16>)
  movs r3, #0
 8000a2a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000a2c:	e002      	b.n	8000a34 <LoopCopyDataInit>

08000a2e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000a2e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000a30:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000a32:	3304      	adds	r3, #4

08000a34 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000a34:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000a36:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000a38:	d3f9      	bcc.n	8000a2e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000a3a:	4a09      	ldr	r2, [pc, #36]	@ (8000a60 <LoopFillZerobss+0x1a>)
  ldr r4, =_ebss
 8000a3c:	4c09      	ldr	r4, [pc, #36]	@ (8000a64 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8000a3e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000a40:	e001      	b.n	8000a46 <LoopFillZerobss>

08000a42 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000a42:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000a44:	3204      	adds	r2, #4

08000a46 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000a46:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000a48:	d3fb      	bcc.n	8000a42 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8000a4a:	f00a fbc3 	bl	800b1d4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000a4e:	f7ff fe05 	bl	800065c <main>
  bx lr
 8000a52:	4770      	bx	lr
  ldr r0, =_sdata
 8000a54:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000a58:	200000c4 	.word	0x200000c4
  ldr r2, =_sidata
 8000a5c:	0800c0d8 	.word	0x0800c0d8
  ldr r2, =_sbss
 8000a60:	200000c4 	.word	0x200000c4
  ldr r4, =_ebss
 8000a64:	20002cd8 	.word	0x20002cd8

08000a68 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000a68:	e7fe      	b.n	8000a68 <ADC1_2_IRQHandler>
	...

08000a6c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8000a6c:	b580      	push	{r7, lr}
 8000a6e:	af00      	add	r7, sp, #0
    defined(STM32F102x6) || defined(STM32F102xB) || \
    defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) || \
    defined(STM32F105xC) || defined(STM32F107xC)

  /* Prefetch buffer is not available on value line devices */
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8000a70:	4b08      	ldr	r3, [pc, #32]	@ (8000a94 <HAL_Init+0x28>)
 8000a72:	681b      	ldr	r3, [r3, #0]
 8000a74:	4a07      	ldr	r2, [pc, #28]	@ (8000a94 <HAL_Init+0x28>)
 8000a76:	f043 0310 	orr.w	r3, r3, #16
 8000a7a:	6013      	str	r3, [r2, #0]
#endif
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8000a7c:	2003      	movs	r0, #3
 8000a7e:	f000 f92b 	bl	8000cd8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8000a82:	200f      	movs	r0, #15
 8000a84:	f000 f808 	bl	8000a98 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8000a88:	f7ff fefe 	bl	8000888 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8000a8c:	2300      	movs	r3, #0
}
 8000a8e:	4618      	mov	r0, r3
 8000a90:	bd80      	pop	{r7, pc}
 8000a92:	bf00      	nop
 8000a94:	40022000 	.word	0x40022000

08000a98 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8000a98:	b580      	push	{r7, lr}
 8000a9a:	b082      	sub	sp, #8
 8000a9c:	af00      	add	r7, sp, #0
 8000a9e:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8000aa0:	4b12      	ldr	r3, [pc, #72]	@ (8000aec <HAL_InitTick+0x54>)
 8000aa2:	681a      	ldr	r2, [r3, #0]
 8000aa4:	4b12      	ldr	r3, [pc, #72]	@ (8000af0 <HAL_InitTick+0x58>)
 8000aa6:	781b      	ldrb	r3, [r3, #0]
 8000aa8:	4619      	mov	r1, r3
 8000aaa:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000aae:	fbb3 f3f1 	udiv	r3, r3, r1
 8000ab2:	fbb2 f3f3 	udiv	r3, r2, r3
 8000ab6:	4618      	mov	r0, r3
 8000ab8:	f000 f935 	bl	8000d26 <HAL_SYSTICK_Config>
 8000abc:	4603      	mov	r3, r0
 8000abe:	2b00      	cmp	r3, #0
 8000ac0:	d001      	beq.n	8000ac6 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 8000ac2:	2301      	movs	r3, #1
 8000ac4:	e00e      	b.n	8000ae4 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000ac6:	687b      	ldr	r3, [r7, #4]
 8000ac8:	2b0f      	cmp	r3, #15
 8000aca:	d80a      	bhi.n	8000ae2 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8000acc:	2200      	movs	r2, #0
 8000ace:	6879      	ldr	r1, [r7, #4]
 8000ad0:	f04f 30ff 	mov.w	r0, #4294967295
 8000ad4:	f000 f90b 	bl	8000cee <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8000ad8:	4a06      	ldr	r2, [pc, #24]	@ (8000af4 <HAL_InitTick+0x5c>)
 8000ada:	687b      	ldr	r3, [r7, #4]
 8000adc:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8000ade:	2300      	movs	r3, #0
 8000ae0:	e000      	b.n	8000ae4 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8000ae2:	2301      	movs	r3, #1
}
 8000ae4:	4618      	mov	r0, r3
 8000ae6:	3708      	adds	r7, #8
 8000ae8:	46bd      	mov	sp, r7
 8000aea:	bd80      	pop	{r7, pc}
 8000aec:	200000b8 	.word	0x200000b8
 8000af0:	200000c0 	.word	0x200000c0
 8000af4:	200000bc 	.word	0x200000bc

08000af8 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8000af8:	b480      	push	{r7}
 8000afa:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8000afc:	4b05      	ldr	r3, [pc, #20]	@ (8000b14 <HAL_IncTick+0x1c>)
 8000afe:	781b      	ldrb	r3, [r3, #0]
 8000b00:	461a      	mov	r2, r3
 8000b02:	4b05      	ldr	r3, [pc, #20]	@ (8000b18 <HAL_IncTick+0x20>)
 8000b04:	681b      	ldr	r3, [r3, #0]
 8000b06:	4413      	add	r3, r2
 8000b08:	4a03      	ldr	r2, [pc, #12]	@ (8000b18 <HAL_IncTick+0x20>)
 8000b0a:	6013      	str	r3, [r2, #0]
}
 8000b0c:	bf00      	nop
 8000b0e:	46bd      	mov	sp, r7
 8000b10:	bc80      	pop	{r7}
 8000b12:	4770      	bx	lr
 8000b14:	200000c0 	.word	0x200000c0
 8000b18:	20002b24 	.word	0x20002b24

08000b1c <HAL_GetTick>:
  * @note  This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8000b1c:	b480      	push	{r7}
 8000b1e:	af00      	add	r7, sp, #0
  return uwTick;
 8000b20:	4b02      	ldr	r3, [pc, #8]	@ (8000b2c <HAL_GetTick+0x10>)
 8000b22:	681b      	ldr	r3, [r3, #0]
}
 8000b24:	4618      	mov	r0, r3
 8000b26:	46bd      	mov	sp, r7
 8000b28:	bc80      	pop	{r7}
 8000b2a:	4770      	bx	lr
 8000b2c:	20002b24 	.word	0x20002b24

08000b30 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8000b30:	b580      	push	{r7, lr}
 8000b32:	b084      	sub	sp, #16
 8000b34:	af00      	add	r7, sp, #0
 8000b36:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8000b38:	f7ff fff0 	bl	8000b1c <HAL_GetTick>
 8000b3c:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8000b3e:	687b      	ldr	r3, [r7, #4]
 8000b40:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8000b42:	68fb      	ldr	r3, [r7, #12]
 8000b44:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000b48:	d005      	beq.n	8000b56 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8000b4a:	4b0a      	ldr	r3, [pc, #40]	@ (8000b74 <HAL_Delay+0x44>)
 8000b4c:	781b      	ldrb	r3, [r3, #0]
 8000b4e:	461a      	mov	r2, r3
 8000b50:	68fb      	ldr	r3, [r7, #12]
 8000b52:	4413      	add	r3, r2
 8000b54:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8000b56:	bf00      	nop
 8000b58:	f7ff ffe0 	bl	8000b1c <HAL_GetTick>
 8000b5c:	4602      	mov	r2, r0
 8000b5e:	68bb      	ldr	r3, [r7, #8]
 8000b60:	1ad3      	subs	r3, r2, r3
 8000b62:	68fa      	ldr	r2, [r7, #12]
 8000b64:	429a      	cmp	r2, r3
 8000b66:	d8f7      	bhi.n	8000b58 <HAL_Delay+0x28>
  {
  }
}
 8000b68:	bf00      	nop
 8000b6a:	bf00      	nop
 8000b6c:	3710      	adds	r7, #16
 8000b6e:	46bd      	mov	sp, r7
 8000b70:	bd80      	pop	{r7, pc}
 8000b72:	bf00      	nop
 8000b74:	200000c0 	.word	0x200000c0

08000b78 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8000b78:	b480      	push	{r7}
 8000b7a:	b085      	sub	sp, #20
 8000b7c:	af00      	add	r7, sp, #0
 8000b7e:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8000b80:	687b      	ldr	r3, [r7, #4]
 8000b82:	f003 0307 	and.w	r3, r3, #7
 8000b86:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8000b88:	4b0c      	ldr	r3, [pc, #48]	@ (8000bbc <__NVIC_SetPriorityGrouping+0x44>)
 8000b8a:	68db      	ldr	r3, [r3, #12]
 8000b8c:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8000b8e:	68ba      	ldr	r2, [r7, #8]
 8000b90:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8000b94:	4013      	ands	r3, r2
 8000b96:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos) );               /* Insert write key and priority group */
 8000b98:	68fb      	ldr	r3, [r7, #12]
 8000b9a:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8000b9c:	68bb      	ldr	r3, [r7, #8]
 8000b9e:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8000ba0:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8000ba4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000ba8:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8000baa:	4a04      	ldr	r2, [pc, #16]	@ (8000bbc <__NVIC_SetPriorityGrouping+0x44>)
 8000bac:	68bb      	ldr	r3, [r7, #8]
 8000bae:	60d3      	str	r3, [r2, #12]
}
 8000bb0:	bf00      	nop
 8000bb2:	3714      	adds	r7, #20
 8000bb4:	46bd      	mov	sp, r7
 8000bb6:	bc80      	pop	{r7}
 8000bb8:	4770      	bx	lr
 8000bba:	bf00      	nop
 8000bbc:	e000ed00 	.word	0xe000ed00

08000bc0 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8000bc0:	b480      	push	{r7}
 8000bc2:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8000bc4:	4b04      	ldr	r3, [pc, #16]	@ (8000bd8 <__NVIC_GetPriorityGrouping+0x18>)
 8000bc6:	68db      	ldr	r3, [r3, #12]
 8000bc8:	0a1b      	lsrs	r3, r3, #8
 8000bca:	f003 0307 	and.w	r3, r3, #7
}
 8000bce:	4618      	mov	r0, r3
 8000bd0:	46bd      	mov	sp, r7
 8000bd2:	bc80      	pop	{r7}
 8000bd4:	4770      	bx	lr
 8000bd6:	bf00      	nop
 8000bd8:	e000ed00 	.word	0xe000ed00

08000bdc <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000bdc:	b480      	push	{r7}
 8000bde:	b083      	sub	sp, #12
 8000be0:	af00      	add	r7, sp, #0
 8000be2:	4603      	mov	r3, r0
 8000be4:	6039      	str	r1, [r7, #0]
 8000be6:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000be8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bec:	2b00      	cmp	r3, #0
 8000bee:	db0a      	blt.n	8000c06 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000bf0:	683b      	ldr	r3, [r7, #0]
 8000bf2:	b2da      	uxtb	r2, r3
 8000bf4:	490c      	ldr	r1, [pc, #48]	@ (8000c28 <__NVIC_SetPriority+0x4c>)
 8000bf6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bfa:	0112      	lsls	r2, r2, #4
 8000bfc:	b2d2      	uxtb	r2, r2
 8000bfe:	440b      	add	r3, r1
 8000c00:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8000c04:	e00a      	b.n	8000c1c <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000c06:	683b      	ldr	r3, [r7, #0]
 8000c08:	b2da      	uxtb	r2, r3
 8000c0a:	4908      	ldr	r1, [pc, #32]	@ (8000c2c <__NVIC_SetPriority+0x50>)
 8000c0c:	79fb      	ldrb	r3, [r7, #7]
 8000c0e:	f003 030f 	and.w	r3, r3, #15
 8000c12:	3b04      	subs	r3, #4
 8000c14:	0112      	lsls	r2, r2, #4
 8000c16:	b2d2      	uxtb	r2, r2
 8000c18:	440b      	add	r3, r1
 8000c1a:	761a      	strb	r2, [r3, #24]
}
 8000c1c:	bf00      	nop
 8000c1e:	370c      	adds	r7, #12
 8000c20:	46bd      	mov	sp, r7
 8000c22:	bc80      	pop	{r7}
 8000c24:	4770      	bx	lr
 8000c26:	bf00      	nop
 8000c28:	e000e100 	.word	0xe000e100
 8000c2c:	e000ed00 	.word	0xe000ed00

08000c30 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8000c30:	b480      	push	{r7}
 8000c32:	b089      	sub	sp, #36	@ 0x24
 8000c34:	af00      	add	r7, sp, #0
 8000c36:	60f8      	str	r0, [r7, #12]
 8000c38:	60b9      	str	r1, [r7, #8]
 8000c3a:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8000c3c:	68fb      	ldr	r3, [r7, #12]
 8000c3e:	f003 0307 	and.w	r3, r3, #7
 8000c42:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8000c44:	69fb      	ldr	r3, [r7, #28]
 8000c46:	f1c3 0307 	rsb	r3, r3, #7
 8000c4a:	2b04      	cmp	r3, #4
 8000c4c:	bf28      	it	cs
 8000c4e:	2304      	movcs	r3, #4
 8000c50:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8000c52:	69fb      	ldr	r3, [r7, #28]
 8000c54:	3304      	adds	r3, #4
 8000c56:	2b06      	cmp	r3, #6
 8000c58:	d902      	bls.n	8000c60 <NVIC_EncodePriority+0x30>
 8000c5a:	69fb      	ldr	r3, [r7, #28]
 8000c5c:	3b03      	subs	r3, #3
 8000c5e:	e000      	b.n	8000c62 <NVIC_EncodePriority+0x32>
 8000c60:	2300      	movs	r3, #0
 8000c62:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8000c64:	f04f 32ff 	mov.w	r2, #4294967295
 8000c68:	69bb      	ldr	r3, [r7, #24]
 8000c6a:	fa02 f303 	lsl.w	r3, r2, r3
 8000c6e:	43da      	mvns	r2, r3
 8000c70:	68bb      	ldr	r3, [r7, #8]
 8000c72:	401a      	ands	r2, r3
 8000c74:	697b      	ldr	r3, [r7, #20]
 8000c76:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8000c78:	f04f 31ff 	mov.w	r1, #4294967295
 8000c7c:	697b      	ldr	r3, [r7, #20]
 8000c7e:	fa01 f303 	lsl.w	r3, r1, r3
 8000c82:	43d9      	mvns	r1, r3
 8000c84:	687b      	ldr	r3, [r7, #4]
 8000c86:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8000c88:	4313      	orrs	r3, r2
         );
}
 8000c8a:	4618      	mov	r0, r3
 8000c8c:	3724      	adds	r7, #36	@ 0x24
 8000c8e:	46bd      	mov	sp, r7
 8000c90:	bc80      	pop	{r7}
 8000c92:	4770      	bx	lr

08000c94 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8000c94:	b580      	push	{r7, lr}
 8000c96:	b082      	sub	sp, #8
 8000c98:	af00      	add	r7, sp, #0
 8000c9a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8000c9c:	687b      	ldr	r3, [r7, #4]
 8000c9e:	3b01      	subs	r3, #1
 8000ca0:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8000ca4:	d301      	bcc.n	8000caa <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8000ca6:	2301      	movs	r3, #1
 8000ca8:	e00f      	b.n	8000cca <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8000caa:	4a0a      	ldr	r2, [pc, #40]	@ (8000cd4 <SysTick_Config+0x40>)
 8000cac:	687b      	ldr	r3, [r7, #4]
 8000cae:	3b01      	subs	r3, #1
 8000cb0:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8000cb2:	210f      	movs	r1, #15
 8000cb4:	f04f 30ff 	mov.w	r0, #4294967295
 8000cb8:	f7ff ff90 	bl	8000bdc <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8000cbc:	4b05      	ldr	r3, [pc, #20]	@ (8000cd4 <SysTick_Config+0x40>)
 8000cbe:	2200      	movs	r2, #0
 8000cc0:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8000cc2:	4b04      	ldr	r3, [pc, #16]	@ (8000cd4 <SysTick_Config+0x40>)
 8000cc4:	2207      	movs	r2, #7
 8000cc6:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8000cc8:	2300      	movs	r3, #0
}
 8000cca:	4618      	mov	r0, r3
 8000ccc:	3708      	adds	r7, #8
 8000cce:	46bd      	mov	sp, r7
 8000cd0:	bd80      	pop	{r7, pc}
 8000cd2:	bf00      	nop
 8000cd4:	e000e010 	.word	0xe000e010

08000cd8 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8000cd8:	b580      	push	{r7, lr}
 8000cda:	b082      	sub	sp, #8
 8000cdc:	af00      	add	r7, sp, #0
 8000cde:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8000ce0:	6878      	ldr	r0, [r7, #4]
 8000ce2:	f7ff ff49 	bl	8000b78 <__NVIC_SetPriorityGrouping>
}
 8000ce6:	bf00      	nop
 8000ce8:	3708      	adds	r7, #8
 8000cea:	46bd      	mov	sp, r7
 8000cec:	bd80      	pop	{r7, pc}

08000cee <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8000cee:	b580      	push	{r7, lr}
 8000cf0:	b086      	sub	sp, #24
 8000cf2:	af00      	add	r7, sp, #0
 8000cf4:	4603      	mov	r3, r0
 8000cf6:	60b9      	str	r1, [r7, #8]
 8000cf8:	607a      	str	r2, [r7, #4]
 8000cfa:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8000d00:	f7ff ff5e 	bl	8000bc0 <__NVIC_GetPriorityGrouping>
 8000d04:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8000d06:	687a      	ldr	r2, [r7, #4]
 8000d08:	68b9      	ldr	r1, [r7, #8]
 8000d0a:	6978      	ldr	r0, [r7, #20]
 8000d0c:	f7ff ff90 	bl	8000c30 <NVIC_EncodePriority>
 8000d10:	4602      	mov	r2, r0
 8000d12:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000d16:	4611      	mov	r1, r2
 8000d18:	4618      	mov	r0, r3
 8000d1a:	f7ff ff5f 	bl	8000bdc <__NVIC_SetPriority>
}
 8000d1e:	bf00      	nop
 8000d20:	3718      	adds	r7, #24
 8000d22:	46bd      	mov	sp, r7
 8000d24:	bd80      	pop	{r7, pc}

08000d26 <HAL_SYSTICK_Config>:
  * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8000d26:	b580      	push	{r7, lr}
 8000d28:	b082      	sub	sp, #8
 8000d2a:	af00      	add	r7, sp, #0
 8000d2c:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8000d2e:	6878      	ldr	r0, [r7, #4]
 8000d30:	f7ff ffb0 	bl	8000c94 <SysTick_Config>
 8000d34:	4603      	mov	r3, r0
}
 8000d36:	4618      	mov	r0, r3
 8000d38:	3708      	adds	r7, #8
 8000d3a:	46bd      	mov	sp, r7
 8000d3c:	bd80      	pop	{r7, pc}

08000d3e <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8000d3e:	b580      	push	{r7, lr}
 8000d40:	b082      	sub	sp, #8
 8000d42:	af00      	add	r7, sp, #0
 8000d44:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8000d46:	687b      	ldr	r3, [r7, #4]
 8000d48:	2b00      	cmp	r3, #0
 8000d4a:	d101      	bne.n	8000d50 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8000d4c:	2301      	movs	r3, #1
 8000d4e:	e00e      	b.n	8000d6e <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8000d50:	687b      	ldr	r3, [r7, #4]
 8000d52:	795b      	ldrb	r3, [r3, #5]
 8000d54:	b2db      	uxtb	r3, r3
 8000d56:	2b00      	cmp	r3, #0
 8000d58:	d105      	bne.n	8000d66 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8000d5a:	687b      	ldr	r3, [r7, #4]
 8000d5c:	2200      	movs	r2, #0
 8000d5e:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8000d60:	6878      	ldr	r0, [r7, #4]
 8000d62:	f7ff fdc3 	bl	80008ec <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8000d66:	687b      	ldr	r3, [r7, #4]
 8000d68:	2201      	movs	r2, #1
 8000d6a:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 8000d6c:	2300      	movs	r3, #0
}
 8000d6e:	4618      	mov	r0, r3
 8000d70:	3708      	adds	r7, #8
 8000d72:	46bd      	mov	sp, r7
 8000d74:	bd80      	pop	{r7, pc}
	...

08000d78 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8000d78:	b480      	push	{r7}
 8000d7a:	b08b      	sub	sp, #44	@ 0x2c
 8000d7c:	af00      	add	r7, sp, #0
 8000d7e:	6078      	str	r0, [r7, #4]
 8000d80:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 8000d82:	2300      	movs	r3, #0
 8000d84:	627b      	str	r3, [r7, #36]	@ 0x24
  uint32_t ioposition;
  uint32_t iocurrent;
  uint32_t temp;
  uint32_t config = 0x00u;
 8000d86:	2300      	movs	r3, #0
 8000d88:	623b      	str	r3, [r7, #32]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8000d8a:	e169      	b.n	8001060 <HAL_GPIO_Init+0x2e8>
  {
    /* Get the IO position */
    ioposition = (0x01uL << position);
 8000d8c:	2201      	movs	r2, #1
 8000d8e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000d90:	fa02 f303 	lsl.w	r3, r2, r3
 8000d94:	61fb      	str	r3, [r7, #28]

    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8000d96:	683b      	ldr	r3, [r7, #0]
 8000d98:	681b      	ldr	r3, [r3, #0]
 8000d9a:	69fa      	ldr	r2, [r7, #28]
 8000d9c:	4013      	ands	r3, r2
 8000d9e:	61bb      	str	r3, [r7, #24]

    if (iocurrent == ioposition)
 8000da0:	69ba      	ldr	r2, [r7, #24]
 8000da2:	69fb      	ldr	r3, [r7, #28]
 8000da4:	429a      	cmp	r2, r3
 8000da6:	f040 8158 	bne.w	800105a <HAL_GPIO_Init+0x2e2>
    {
      /* Check the Alternate function parameters */
      assert_param(IS_GPIO_AF_INSTANCE(GPIOx));

      /* Based on the required mode, filling config variable with MODEy[1:0] and CNFy[3:2] corresponding bits */
      switch (GPIO_Init->Mode)
 8000daa:	683b      	ldr	r3, [r7, #0]
 8000dac:	685b      	ldr	r3, [r3, #4]
 8000dae:	4a9a      	ldr	r2, [pc, #616]	@ (8001018 <HAL_GPIO_Init+0x2a0>)
 8000db0:	4293      	cmp	r3, r2
 8000db2:	d05e      	beq.n	8000e72 <HAL_GPIO_Init+0xfa>
 8000db4:	4a98      	ldr	r2, [pc, #608]	@ (8001018 <HAL_GPIO_Init+0x2a0>)
 8000db6:	4293      	cmp	r3, r2
 8000db8:	d875      	bhi.n	8000ea6 <HAL_GPIO_Init+0x12e>
 8000dba:	4a98      	ldr	r2, [pc, #608]	@ (800101c <HAL_GPIO_Init+0x2a4>)
 8000dbc:	4293      	cmp	r3, r2
 8000dbe:	d058      	beq.n	8000e72 <HAL_GPIO_Init+0xfa>
 8000dc0:	4a96      	ldr	r2, [pc, #600]	@ (800101c <HAL_GPIO_Init+0x2a4>)
 8000dc2:	4293      	cmp	r3, r2
 8000dc4:	d86f      	bhi.n	8000ea6 <HAL_GPIO_Init+0x12e>
 8000dc6:	4a96      	ldr	r2, [pc, #600]	@ (8001020 <HAL_GPIO_Init+0x2a8>)
 8000dc8:	4293      	cmp	r3, r2
 8000dca:	d052      	beq.n	8000e72 <HAL_GPIO_Init+0xfa>
 8000dcc:	4a94      	ldr	r2, [pc, #592]	@ (8001020 <HAL_GPIO_Init+0x2a8>)
 8000dce:	4293      	cmp	r3, r2
 8000dd0:	d869      	bhi.n	8000ea6 <HAL_GPIO_Init+0x12e>
 8000dd2:	4a94      	ldr	r2, [pc, #592]	@ (8001024 <HAL_GPIO_Init+0x2ac>)
 8000dd4:	4293      	cmp	r3, r2
 8000dd6:	d04c      	beq.n	8000e72 <HAL_GPIO_Init+0xfa>
 8000dd8:	4a92      	ldr	r2, [pc, #584]	@ (8001024 <HAL_GPIO_Init+0x2ac>)
 8000dda:	4293      	cmp	r3, r2
 8000ddc:	d863      	bhi.n	8000ea6 <HAL_GPIO_Init+0x12e>
 8000dde:	4a92      	ldr	r2, [pc, #584]	@ (8001028 <HAL_GPIO_Init+0x2b0>)
 8000de0:	4293      	cmp	r3, r2
 8000de2:	d046      	beq.n	8000e72 <HAL_GPIO_Init+0xfa>
 8000de4:	4a90      	ldr	r2, [pc, #576]	@ (8001028 <HAL_GPIO_Init+0x2b0>)
 8000de6:	4293      	cmp	r3, r2
 8000de8:	d85d      	bhi.n	8000ea6 <HAL_GPIO_Init+0x12e>
 8000dea:	2b12      	cmp	r3, #18
 8000dec:	d82a      	bhi.n	8000e44 <HAL_GPIO_Init+0xcc>
 8000dee:	2b12      	cmp	r3, #18
 8000df0:	d859      	bhi.n	8000ea6 <HAL_GPIO_Init+0x12e>
 8000df2:	a201      	add	r2, pc, #4	@ (adr r2, 8000df8 <HAL_GPIO_Init+0x80>)
 8000df4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000df8:	08000e73 	.word	0x08000e73
 8000dfc:	08000e4d 	.word	0x08000e4d
 8000e00:	08000e5f 	.word	0x08000e5f
 8000e04:	08000ea1 	.word	0x08000ea1
 8000e08:	08000ea7 	.word	0x08000ea7
 8000e0c:	08000ea7 	.word	0x08000ea7
 8000e10:	08000ea7 	.word	0x08000ea7
 8000e14:	08000ea7 	.word	0x08000ea7
 8000e18:	08000ea7 	.word	0x08000ea7
 8000e1c:	08000ea7 	.word	0x08000ea7
 8000e20:	08000ea7 	.word	0x08000ea7
 8000e24:	08000ea7 	.word	0x08000ea7
 8000e28:	08000ea7 	.word	0x08000ea7
 8000e2c:	08000ea7 	.word	0x08000ea7
 8000e30:	08000ea7 	.word	0x08000ea7
 8000e34:	08000ea7 	.word	0x08000ea7
 8000e38:	08000ea7 	.word	0x08000ea7
 8000e3c:	08000e55 	.word	0x08000e55
 8000e40:	08000e69 	.word	0x08000e69
 8000e44:	4a79      	ldr	r2, [pc, #484]	@ (800102c <HAL_GPIO_Init+0x2b4>)
 8000e46:	4293      	cmp	r3, r2
 8000e48:	d013      	beq.n	8000e72 <HAL_GPIO_Init+0xfa>
          config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_ANALOG;
          break;

        /* Parameters are checked with assert_param */
        default:
          break;
 8000e4a:	e02c      	b.n	8000ea6 <HAL_GPIO_Init+0x12e>
          config = GPIO_Init->Speed + GPIO_CR_CNF_GP_OUTPUT_PP;
 8000e4c:	683b      	ldr	r3, [r7, #0]
 8000e4e:	68db      	ldr	r3, [r3, #12]
 8000e50:	623b      	str	r3, [r7, #32]
          break;
 8000e52:	e029      	b.n	8000ea8 <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_GP_OUTPUT_OD;
 8000e54:	683b      	ldr	r3, [r7, #0]
 8000e56:	68db      	ldr	r3, [r3, #12]
 8000e58:	3304      	adds	r3, #4
 8000e5a:	623b      	str	r3, [r7, #32]
          break;
 8000e5c:	e024      	b.n	8000ea8 <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_AF_OUTPUT_PP;
 8000e5e:	683b      	ldr	r3, [r7, #0]
 8000e60:	68db      	ldr	r3, [r3, #12]
 8000e62:	3308      	adds	r3, #8
 8000e64:	623b      	str	r3, [r7, #32]
          break;
 8000e66:	e01f      	b.n	8000ea8 <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_AF_OUTPUT_OD;
 8000e68:	683b      	ldr	r3, [r7, #0]
 8000e6a:	68db      	ldr	r3, [r3, #12]
 8000e6c:	330c      	adds	r3, #12
 8000e6e:	623b      	str	r3, [r7, #32]
          break;
 8000e70:	e01a      	b.n	8000ea8 <HAL_GPIO_Init+0x130>
          if (GPIO_Init->Pull == GPIO_NOPULL)
 8000e72:	683b      	ldr	r3, [r7, #0]
 8000e74:	689b      	ldr	r3, [r3, #8]
 8000e76:	2b00      	cmp	r3, #0
 8000e78:	d102      	bne.n	8000e80 <HAL_GPIO_Init+0x108>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_FLOATING;
 8000e7a:	2304      	movs	r3, #4
 8000e7c:	623b      	str	r3, [r7, #32]
          break;
 8000e7e:	e013      	b.n	8000ea8 <HAL_GPIO_Init+0x130>
          else if (GPIO_Init->Pull == GPIO_PULLUP)
 8000e80:	683b      	ldr	r3, [r7, #0]
 8000e82:	689b      	ldr	r3, [r3, #8]
 8000e84:	2b01      	cmp	r3, #1
 8000e86:	d105      	bne.n	8000e94 <HAL_GPIO_Init+0x11c>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_PU_PD;
 8000e88:	2308      	movs	r3, #8
 8000e8a:	623b      	str	r3, [r7, #32]
            GPIOx->BSRR = ioposition;
 8000e8c:	687b      	ldr	r3, [r7, #4]
 8000e8e:	69fa      	ldr	r2, [r7, #28]
 8000e90:	611a      	str	r2, [r3, #16]
          break;
 8000e92:	e009      	b.n	8000ea8 <HAL_GPIO_Init+0x130>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_PU_PD;
 8000e94:	2308      	movs	r3, #8
 8000e96:	623b      	str	r3, [r7, #32]
            GPIOx->BRR = ioposition;
 8000e98:	687b      	ldr	r3, [r7, #4]
 8000e9a:	69fa      	ldr	r2, [r7, #28]
 8000e9c:	615a      	str	r2, [r3, #20]
          break;
 8000e9e:	e003      	b.n	8000ea8 <HAL_GPIO_Init+0x130>
          config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_ANALOG;
 8000ea0:	2300      	movs	r3, #0
 8000ea2:	623b      	str	r3, [r7, #32]
          break;
 8000ea4:	e000      	b.n	8000ea8 <HAL_GPIO_Init+0x130>
          break;
 8000ea6:	bf00      	nop
      }

      /* Check if the current bit belongs to first half or last half of the pin count number
       in order to address CRH or CRL register*/
      configregister = (iocurrent < GPIO_PIN_8) ? &GPIOx->CRL     : &GPIOx->CRH;
 8000ea8:	69bb      	ldr	r3, [r7, #24]
 8000eaa:	2bff      	cmp	r3, #255	@ 0xff
 8000eac:	d801      	bhi.n	8000eb2 <HAL_GPIO_Init+0x13a>
 8000eae:	687b      	ldr	r3, [r7, #4]
 8000eb0:	e001      	b.n	8000eb6 <HAL_GPIO_Init+0x13e>
 8000eb2:	687b      	ldr	r3, [r7, #4]
 8000eb4:	3304      	adds	r3, #4
 8000eb6:	617b      	str	r3, [r7, #20]
      registeroffset = (iocurrent < GPIO_PIN_8) ? (position << 2u) : ((position - 8u) << 2u);
 8000eb8:	69bb      	ldr	r3, [r7, #24]
 8000eba:	2bff      	cmp	r3, #255	@ 0xff
 8000ebc:	d802      	bhi.n	8000ec4 <HAL_GPIO_Init+0x14c>
 8000ebe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000ec0:	009b      	lsls	r3, r3, #2
 8000ec2:	e002      	b.n	8000eca <HAL_GPIO_Init+0x152>
 8000ec4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000ec6:	3b08      	subs	r3, #8
 8000ec8:	009b      	lsls	r3, r3, #2
 8000eca:	613b      	str	r3, [r7, #16]

      /* Apply the new configuration of the pin to the register */
      MODIFY_REG((*configregister), ((GPIO_CRL_MODE0 | GPIO_CRL_CNF0) << registeroffset), (config << registeroffset));
 8000ecc:	697b      	ldr	r3, [r7, #20]
 8000ece:	681a      	ldr	r2, [r3, #0]
 8000ed0:	210f      	movs	r1, #15
 8000ed2:	693b      	ldr	r3, [r7, #16]
 8000ed4:	fa01 f303 	lsl.w	r3, r1, r3
 8000ed8:	43db      	mvns	r3, r3
 8000eda:	401a      	ands	r2, r3
 8000edc:	6a39      	ldr	r1, [r7, #32]
 8000ede:	693b      	ldr	r3, [r7, #16]
 8000ee0:	fa01 f303 	lsl.w	r3, r1, r3
 8000ee4:	431a      	orrs	r2, r3
 8000ee6:	697b      	ldr	r3, [r7, #20]
 8000ee8:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8000eea:	683b      	ldr	r3, [r7, #0]
 8000eec:	685b      	ldr	r3, [r3, #4]
 8000eee:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000ef2:	2b00      	cmp	r3, #0
 8000ef4:	f000 80b1 	beq.w	800105a <HAL_GPIO_Init+0x2e2>
      {
        /* Enable AFIO Clock */
        __HAL_RCC_AFIO_CLK_ENABLE();
 8000ef8:	4b4d      	ldr	r3, [pc, #308]	@ (8001030 <HAL_GPIO_Init+0x2b8>)
 8000efa:	699b      	ldr	r3, [r3, #24]
 8000efc:	4a4c      	ldr	r2, [pc, #304]	@ (8001030 <HAL_GPIO_Init+0x2b8>)
 8000efe:	f043 0301 	orr.w	r3, r3, #1
 8000f02:	6193      	str	r3, [r2, #24]
 8000f04:	4b4a      	ldr	r3, [pc, #296]	@ (8001030 <HAL_GPIO_Init+0x2b8>)
 8000f06:	699b      	ldr	r3, [r3, #24]
 8000f08:	f003 0301 	and.w	r3, r3, #1
 8000f0c:	60bb      	str	r3, [r7, #8]
 8000f0e:	68bb      	ldr	r3, [r7, #8]
        temp = AFIO->EXTICR[position >> 2u];
 8000f10:	4a48      	ldr	r2, [pc, #288]	@ (8001034 <HAL_GPIO_Init+0x2bc>)
 8000f12:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000f14:	089b      	lsrs	r3, r3, #2
 8000f16:	3302      	adds	r3, #2
 8000f18:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000f1c:	60fb      	str	r3, [r7, #12]
        CLEAR_BIT(temp, (0x0Fu) << (4u * (position & 0x03u)));
 8000f1e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000f20:	f003 0303 	and.w	r3, r3, #3
 8000f24:	009b      	lsls	r3, r3, #2
 8000f26:	220f      	movs	r2, #15
 8000f28:	fa02 f303 	lsl.w	r3, r2, r3
 8000f2c:	43db      	mvns	r3, r3
 8000f2e:	68fa      	ldr	r2, [r7, #12]
 8000f30:	4013      	ands	r3, r2
 8000f32:	60fb      	str	r3, [r7, #12]
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4u * (position & 0x03u)));
 8000f34:	687b      	ldr	r3, [r7, #4]
 8000f36:	4a40      	ldr	r2, [pc, #256]	@ (8001038 <HAL_GPIO_Init+0x2c0>)
 8000f38:	4293      	cmp	r3, r2
 8000f3a:	d013      	beq.n	8000f64 <HAL_GPIO_Init+0x1ec>
 8000f3c:	687b      	ldr	r3, [r7, #4]
 8000f3e:	4a3f      	ldr	r2, [pc, #252]	@ (800103c <HAL_GPIO_Init+0x2c4>)
 8000f40:	4293      	cmp	r3, r2
 8000f42:	d00d      	beq.n	8000f60 <HAL_GPIO_Init+0x1e8>
 8000f44:	687b      	ldr	r3, [r7, #4]
 8000f46:	4a3e      	ldr	r2, [pc, #248]	@ (8001040 <HAL_GPIO_Init+0x2c8>)
 8000f48:	4293      	cmp	r3, r2
 8000f4a:	d007      	beq.n	8000f5c <HAL_GPIO_Init+0x1e4>
 8000f4c:	687b      	ldr	r3, [r7, #4]
 8000f4e:	4a3d      	ldr	r2, [pc, #244]	@ (8001044 <HAL_GPIO_Init+0x2cc>)
 8000f50:	4293      	cmp	r3, r2
 8000f52:	d101      	bne.n	8000f58 <HAL_GPIO_Init+0x1e0>
 8000f54:	2303      	movs	r3, #3
 8000f56:	e006      	b.n	8000f66 <HAL_GPIO_Init+0x1ee>
 8000f58:	2304      	movs	r3, #4
 8000f5a:	e004      	b.n	8000f66 <HAL_GPIO_Init+0x1ee>
 8000f5c:	2302      	movs	r3, #2
 8000f5e:	e002      	b.n	8000f66 <HAL_GPIO_Init+0x1ee>
 8000f60:	2301      	movs	r3, #1
 8000f62:	e000      	b.n	8000f66 <HAL_GPIO_Init+0x1ee>
 8000f64:	2300      	movs	r3, #0
 8000f66:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8000f68:	f002 0203 	and.w	r2, r2, #3
 8000f6c:	0092      	lsls	r2, r2, #2
 8000f6e:	4093      	lsls	r3, r2
 8000f70:	68fa      	ldr	r2, [r7, #12]
 8000f72:	4313      	orrs	r3, r2
 8000f74:	60fb      	str	r3, [r7, #12]
        AFIO->EXTICR[position >> 2u] = temp;
 8000f76:	492f      	ldr	r1, [pc, #188]	@ (8001034 <HAL_GPIO_Init+0x2bc>)
 8000f78:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000f7a:	089b      	lsrs	r3, r3, #2
 8000f7c:	3302      	adds	r3, #2
 8000f7e:	68fa      	ldr	r2, [r7, #12]
 8000f80:	f841 2023 	str.w	r2, [r1, r3, lsl #2]


        /* Enable or disable the rising trigger */
        if ((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8000f84:	683b      	ldr	r3, [r7, #0]
 8000f86:	685b      	ldr	r3, [r3, #4]
 8000f88:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8000f8c:	2b00      	cmp	r3, #0
 8000f8e:	d006      	beq.n	8000f9e <HAL_GPIO_Init+0x226>
        {
          SET_BIT(EXTI->RTSR, iocurrent);
 8000f90:	4b2d      	ldr	r3, [pc, #180]	@ (8001048 <HAL_GPIO_Init+0x2d0>)
 8000f92:	689a      	ldr	r2, [r3, #8]
 8000f94:	492c      	ldr	r1, [pc, #176]	@ (8001048 <HAL_GPIO_Init+0x2d0>)
 8000f96:	69bb      	ldr	r3, [r7, #24]
 8000f98:	4313      	orrs	r3, r2
 8000f9a:	608b      	str	r3, [r1, #8]
 8000f9c:	e006      	b.n	8000fac <HAL_GPIO_Init+0x234>
        }
        else
        {
          CLEAR_BIT(EXTI->RTSR, iocurrent);
 8000f9e:	4b2a      	ldr	r3, [pc, #168]	@ (8001048 <HAL_GPIO_Init+0x2d0>)
 8000fa0:	689a      	ldr	r2, [r3, #8]
 8000fa2:	69bb      	ldr	r3, [r7, #24]
 8000fa4:	43db      	mvns	r3, r3
 8000fa6:	4928      	ldr	r1, [pc, #160]	@ (8001048 <HAL_GPIO_Init+0x2d0>)
 8000fa8:	4013      	ands	r3, r2
 8000faa:	608b      	str	r3, [r1, #8]
        }

        /* Enable or disable the falling trigger */
        if ((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8000fac:	683b      	ldr	r3, [r7, #0]
 8000fae:	685b      	ldr	r3, [r3, #4]
 8000fb0:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8000fb4:	2b00      	cmp	r3, #0
 8000fb6:	d006      	beq.n	8000fc6 <HAL_GPIO_Init+0x24e>
        {
          SET_BIT(EXTI->FTSR, iocurrent);
 8000fb8:	4b23      	ldr	r3, [pc, #140]	@ (8001048 <HAL_GPIO_Init+0x2d0>)
 8000fba:	68da      	ldr	r2, [r3, #12]
 8000fbc:	4922      	ldr	r1, [pc, #136]	@ (8001048 <HAL_GPIO_Init+0x2d0>)
 8000fbe:	69bb      	ldr	r3, [r7, #24]
 8000fc0:	4313      	orrs	r3, r2
 8000fc2:	60cb      	str	r3, [r1, #12]
 8000fc4:	e006      	b.n	8000fd4 <HAL_GPIO_Init+0x25c>
        }
        else
        {
          CLEAR_BIT(EXTI->FTSR, iocurrent);
 8000fc6:	4b20      	ldr	r3, [pc, #128]	@ (8001048 <HAL_GPIO_Init+0x2d0>)
 8000fc8:	68da      	ldr	r2, [r3, #12]
 8000fca:	69bb      	ldr	r3, [r7, #24]
 8000fcc:	43db      	mvns	r3, r3
 8000fce:	491e      	ldr	r1, [pc, #120]	@ (8001048 <HAL_GPIO_Init+0x2d0>)
 8000fd0:	4013      	ands	r3, r2
 8000fd2:	60cb      	str	r3, [r1, #12]
        }

        /* Configure the event mask */
        if ((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8000fd4:	683b      	ldr	r3, [r7, #0]
 8000fd6:	685b      	ldr	r3, [r3, #4]
 8000fd8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000fdc:	2b00      	cmp	r3, #0
 8000fde:	d006      	beq.n	8000fee <HAL_GPIO_Init+0x276>
        {
          SET_BIT(EXTI->EMR, iocurrent);
 8000fe0:	4b19      	ldr	r3, [pc, #100]	@ (8001048 <HAL_GPIO_Init+0x2d0>)
 8000fe2:	685a      	ldr	r2, [r3, #4]
 8000fe4:	4918      	ldr	r1, [pc, #96]	@ (8001048 <HAL_GPIO_Init+0x2d0>)
 8000fe6:	69bb      	ldr	r3, [r7, #24]
 8000fe8:	4313      	orrs	r3, r2
 8000fea:	604b      	str	r3, [r1, #4]
 8000fec:	e006      	b.n	8000ffc <HAL_GPIO_Init+0x284>
        }
        else
        {
          CLEAR_BIT(EXTI->EMR, iocurrent);
 8000fee:	4b16      	ldr	r3, [pc, #88]	@ (8001048 <HAL_GPIO_Init+0x2d0>)
 8000ff0:	685a      	ldr	r2, [r3, #4]
 8000ff2:	69bb      	ldr	r3, [r7, #24]
 8000ff4:	43db      	mvns	r3, r3
 8000ff6:	4914      	ldr	r1, [pc, #80]	@ (8001048 <HAL_GPIO_Init+0x2d0>)
 8000ff8:	4013      	ands	r3, r2
 8000ffa:	604b      	str	r3, [r1, #4]
        }

        /* Configure the interrupt mask */
        if ((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8000ffc:	683b      	ldr	r3, [r7, #0]
 8000ffe:	685b      	ldr	r3, [r3, #4]
 8001000:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001004:	2b00      	cmp	r3, #0
 8001006:	d021      	beq.n	800104c <HAL_GPIO_Init+0x2d4>
        {
          SET_BIT(EXTI->IMR, iocurrent);
 8001008:	4b0f      	ldr	r3, [pc, #60]	@ (8001048 <HAL_GPIO_Init+0x2d0>)
 800100a:	681a      	ldr	r2, [r3, #0]
 800100c:	490e      	ldr	r1, [pc, #56]	@ (8001048 <HAL_GPIO_Init+0x2d0>)
 800100e:	69bb      	ldr	r3, [r7, #24]
 8001010:	4313      	orrs	r3, r2
 8001012:	600b      	str	r3, [r1, #0]
 8001014:	e021      	b.n	800105a <HAL_GPIO_Init+0x2e2>
 8001016:	bf00      	nop
 8001018:	10320000 	.word	0x10320000
 800101c:	10310000 	.word	0x10310000
 8001020:	10220000 	.word	0x10220000
 8001024:	10210000 	.word	0x10210000
 8001028:	10120000 	.word	0x10120000
 800102c:	10110000 	.word	0x10110000
 8001030:	40021000 	.word	0x40021000
 8001034:	40010000 	.word	0x40010000
 8001038:	40010800 	.word	0x40010800
 800103c:	40010c00 	.word	0x40010c00
 8001040:	40011000 	.word	0x40011000
 8001044:	40011400 	.word	0x40011400
 8001048:	40010400 	.word	0x40010400
        }
        else
        {
          CLEAR_BIT(EXTI->IMR, iocurrent);
 800104c:	4b0b      	ldr	r3, [pc, #44]	@ (800107c <HAL_GPIO_Init+0x304>)
 800104e:	681a      	ldr	r2, [r3, #0]
 8001050:	69bb      	ldr	r3, [r7, #24]
 8001052:	43db      	mvns	r3, r3
 8001054:	4909      	ldr	r1, [pc, #36]	@ (800107c <HAL_GPIO_Init+0x304>)
 8001056:	4013      	ands	r3, r2
 8001058:	600b      	str	r3, [r1, #0]
        }
      }
    }

	position++;
 800105a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800105c:	3301      	adds	r3, #1
 800105e:	627b      	str	r3, [r7, #36]	@ 0x24
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8001060:	683b      	ldr	r3, [r7, #0]
 8001062:	681a      	ldr	r2, [r3, #0]
 8001064:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001066:	fa22 f303 	lsr.w	r3, r2, r3
 800106a:	2b00      	cmp	r3, #0
 800106c:	f47f ae8e 	bne.w	8000d8c <HAL_GPIO_Init+0x14>
  }
}
 8001070:	bf00      	nop
 8001072:	bf00      	nop
 8001074:	372c      	adds	r7, #44	@ 0x2c
 8001076:	46bd      	mov	sp, r7
 8001078:	bc80      	pop	{r7}
 800107a:	4770      	bx	lr
 800107c:	40010400 	.word	0x40010400

08001080 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8001080:	b480      	push	{r7}
 8001082:	b083      	sub	sp, #12
 8001084:	af00      	add	r7, sp, #0
 8001086:	6078      	str	r0, [r7, #4]
 8001088:	460b      	mov	r3, r1
 800108a:	807b      	strh	r3, [r7, #2]
 800108c:	4613      	mov	r3, r2
 800108e:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8001090:	787b      	ldrb	r3, [r7, #1]
 8001092:	2b00      	cmp	r3, #0
 8001094:	d003      	beq.n	800109e <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8001096:	887a      	ldrh	r2, [r7, #2]
 8001098:	687b      	ldr	r3, [r7, #4]
 800109a:	611a      	str	r2, [r3, #16]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16u;
  }
}
 800109c:	e003      	b.n	80010a6 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16u;
 800109e:	887b      	ldrh	r3, [r7, #2]
 80010a0:	041a      	lsls	r2, r3, #16
 80010a2:	687b      	ldr	r3, [r7, #4]
 80010a4:	611a      	str	r2, [r3, #16]
}
 80010a6:	bf00      	nop
 80010a8:	370c      	adds	r7, #12
 80010aa:	46bd      	mov	sp, r7
 80010ac:	bc80      	pop	{r7}
 80010ae:	4770      	bx	lr

080010b0 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80010b0:	b580      	push	{r7, lr}
 80010b2:	b086      	sub	sp, #24
 80010b4:	af00      	add	r7, sp, #0
 80010b6:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 80010b8:	687b      	ldr	r3, [r7, #4]
 80010ba:	2b00      	cmp	r3, #0
 80010bc:	d101      	bne.n	80010c2 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 80010be:	2301      	movs	r3, #1
 80010c0:	e272      	b.n	80015a8 <HAL_RCC_OscConfig+0x4f8>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80010c2:	687b      	ldr	r3, [r7, #4]
 80010c4:	681b      	ldr	r3, [r3, #0]
 80010c6:	f003 0301 	and.w	r3, r3, #1
 80010ca:	2b00      	cmp	r3, #0
 80010cc:	f000 8087 	beq.w	80011de <HAL_RCC_OscConfig+0x12e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 80010d0:	4b92      	ldr	r3, [pc, #584]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 80010d2:	685b      	ldr	r3, [r3, #4]
 80010d4:	f003 030c 	and.w	r3, r3, #12
 80010d8:	2b04      	cmp	r3, #4
 80010da:	d00c      	beq.n	80010f6 <HAL_RCC_OscConfig+0x46>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 80010dc:	4b8f      	ldr	r3, [pc, #572]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 80010de:	685b      	ldr	r3, [r3, #4]
 80010e0:	f003 030c 	and.w	r3, r3, #12
 80010e4:	2b08      	cmp	r3, #8
 80010e6:	d112      	bne.n	800110e <HAL_RCC_OscConfig+0x5e>
 80010e8:	4b8c      	ldr	r3, [pc, #560]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 80010ea:	685b      	ldr	r3, [r3, #4]
 80010ec:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80010f0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80010f4:	d10b      	bne.n	800110e <HAL_RCC_OscConfig+0x5e>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80010f6:	4b89      	ldr	r3, [pc, #548]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 80010f8:	681b      	ldr	r3, [r3, #0]
 80010fa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80010fe:	2b00      	cmp	r3, #0
 8001100:	d06c      	beq.n	80011dc <HAL_RCC_OscConfig+0x12c>
 8001102:	687b      	ldr	r3, [r7, #4]
 8001104:	685b      	ldr	r3, [r3, #4]
 8001106:	2b00      	cmp	r3, #0
 8001108:	d168      	bne.n	80011dc <HAL_RCC_OscConfig+0x12c>
      {
        return HAL_ERROR;
 800110a:	2301      	movs	r3, #1
 800110c:	e24c      	b.n	80015a8 <HAL_RCC_OscConfig+0x4f8>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800110e:	687b      	ldr	r3, [r7, #4]
 8001110:	685b      	ldr	r3, [r3, #4]
 8001112:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001116:	d106      	bne.n	8001126 <HAL_RCC_OscConfig+0x76>
 8001118:	4b80      	ldr	r3, [pc, #512]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 800111a:	681b      	ldr	r3, [r3, #0]
 800111c:	4a7f      	ldr	r2, [pc, #508]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 800111e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001122:	6013      	str	r3, [r2, #0]
 8001124:	e02e      	b.n	8001184 <HAL_RCC_OscConfig+0xd4>
 8001126:	687b      	ldr	r3, [r7, #4]
 8001128:	685b      	ldr	r3, [r3, #4]
 800112a:	2b00      	cmp	r3, #0
 800112c:	d10c      	bne.n	8001148 <HAL_RCC_OscConfig+0x98>
 800112e:	4b7b      	ldr	r3, [pc, #492]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 8001130:	681b      	ldr	r3, [r3, #0]
 8001132:	4a7a      	ldr	r2, [pc, #488]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 8001134:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001138:	6013      	str	r3, [r2, #0]
 800113a:	4b78      	ldr	r3, [pc, #480]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 800113c:	681b      	ldr	r3, [r3, #0]
 800113e:	4a77      	ldr	r2, [pc, #476]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 8001140:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001144:	6013      	str	r3, [r2, #0]
 8001146:	e01d      	b.n	8001184 <HAL_RCC_OscConfig+0xd4>
 8001148:	687b      	ldr	r3, [r7, #4]
 800114a:	685b      	ldr	r3, [r3, #4]
 800114c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8001150:	d10c      	bne.n	800116c <HAL_RCC_OscConfig+0xbc>
 8001152:	4b72      	ldr	r3, [pc, #456]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 8001154:	681b      	ldr	r3, [r3, #0]
 8001156:	4a71      	ldr	r2, [pc, #452]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 8001158:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800115c:	6013      	str	r3, [r2, #0]
 800115e:	4b6f      	ldr	r3, [pc, #444]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 8001160:	681b      	ldr	r3, [r3, #0]
 8001162:	4a6e      	ldr	r2, [pc, #440]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 8001164:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001168:	6013      	str	r3, [r2, #0]
 800116a:	e00b      	b.n	8001184 <HAL_RCC_OscConfig+0xd4>
 800116c:	4b6b      	ldr	r3, [pc, #428]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 800116e:	681b      	ldr	r3, [r3, #0]
 8001170:	4a6a      	ldr	r2, [pc, #424]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 8001172:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001176:	6013      	str	r3, [r2, #0]
 8001178:	4b68      	ldr	r3, [pc, #416]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 800117a:	681b      	ldr	r3, [r3, #0]
 800117c:	4a67      	ldr	r2, [pc, #412]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 800117e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001182:	6013      	str	r3, [r2, #0]


      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8001184:	687b      	ldr	r3, [r7, #4]
 8001186:	685b      	ldr	r3, [r3, #4]
 8001188:	2b00      	cmp	r3, #0
 800118a:	d013      	beq.n	80011b4 <HAL_RCC_OscConfig+0x104>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800118c:	f7ff fcc6 	bl	8000b1c <HAL_GetTick>
 8001190:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001192:	e008      	b.n	80011a6 <HAL_RCC_OscConfig+0xf6>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8001194:	f7ff fcc2 	bl	8000b1c <HAL_GetTick>
 8001198:	4602      	mov	r2, r0
 800119a:	693b      	ldr	r3, [r7, #16]
 800119c:	1ad3      	subs	r3, r2, r3
 800119e:	2b64      	cmp	r3, #100	@ 0x64
 80011a0:	d901      	bls.n	80011a6 <HAL_RCC_OscConfig+0xf6>
          {
            return HAL_TIMEOUT;
 80011a2:	2303      	movs	r3, #3
 80011a4:	e200      	b.n	80015a8 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80011a6:	4b5d      	ldr	r3, [pc, #372]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 80011a8:	681b      	ldr	r3, [r3, #0]
 80011aa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80011ae:	2b00      	cmp	r3, #0
 80011b0:	d0f0      	beq.n	8001194 <HAL_RCC_OscConfig+0xe4>
 80011b2:	e014      	b.n	80011de <HAL_RCC_OscConfig+0x12e>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80011b4:	f7ff fcb2 	bl	8000b1c <HAL_GetTick>
 80011b8:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80011ba:	e008      	b.n	80011ce <HAL_RCC_OscConfig+0x11e>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80011bc:	f7ff fcae 	bl	8000b1c <HAL_GetTick>
 80011c0:	4602      	mov	r2, r0
 80011c2:	693b      	ldr	r3, [r7, #16]
 80011c4:	1ad3      	subs	r3, r2, r3
 80011c6:	2b64      	cmp	r3, #100	@ 0x64
 80011c8:	d901      	bls.n	80011ce <HAL_RCC_OscConfig+0x11e>
          {
            return HAL_TIMEOUT;
 80011ca:	2303      	movs	r3, #3
 80011cc:	e1ec      	b.n	80015a8 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80011ce:	4b53      	ldr	r3, [pc, #332]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 80011d0:	681b      	ldr	r3, [r3, #0]
 80011d2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80011d6:	2b00      	cmp	r3, #0
 80011d8:	d1f0      	bne.n	80011bc <HAL_RCC_OscConfig+0x10c>
 80011da:	e000      	b.n	80011de <HAL_RCC_OscConfig+0x12e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80011dc:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80011de:	687b      	ldr	r3, [r7, #4]
 80011e0:	681b      	ldr	r3, [r3, #0]
 80011e2:	f003 0302 	and.w	r3, r3, #2
 80011e6:	2b00      	cmp	r3, #0
 80011e8:	d063      	beq.n	80012b2 <HAL_RCC_OscConfig+0x202>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 80011ea:	4b4c      	ldr	r3, [pc, #304]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 80011ec:	685b      	ldr	r3, [r3, #4]
 80011ee:	f003 030c 	and.w	r3, r3, #12
 80011f2:	2b00      	cmp	r3, #0
 80011f4:	d00b      	beq.n	800120e <HAL_RCC_OscConfig+0x15e>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI_DIV2)))
 80011f6:	4b49      	ldr	r3, [pc, #292]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 80011f8:	685b      	ldr	r3, [r3, #4]
 80011fa:	f003 030c 	and.w	r3, r3, #12
 80011fe:	2b08      	cmp	r3, #8
 8001200:	d11c      	bne.n	800123c <HAL_RCC_OscConfig+0x18c>
 8001202:	4b46      	ldr	r3, [pc, #280]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 8001204:	685b      	ldr	r3, [r3, #4]
 8001206:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800120a:	2b00      	cmp	r3, #0
 800120c:	d116      	bne.n	800123c <HAL_RCC_OscConfig+0x18c>
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800120e:	4b43      	ldr	r3, [pc, #268]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 8001210:	681b      	ldr	r3, [r3, #0]
 8001212:	f003 0302 	and.w	r3, r3, #2
 8001216:	2b00      	cmp	r3, #0
 8001218:	d005      	beq.n	8001226 <HAL_RCC_OscConfig+0x176>
 800121a:	687b      	ldr	r3, [r7, #4]
 800121c:	691b      	ldr	r3, [r3, #16]
 800121e:	2b01      	cmp	r3, #1
 8001220:	d001      	beq.n	8001226 <HAL_RCC_OscConfig+0x176>
      {
        return HAL_ERROR;
 8001222:	2301      	movs	r3, #1
 8001224:	e1c0      	b.n	80015a8 <HAL_RCC_OscConfig+0x4f8>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001226:	4b3d      	ldr	r3, [pc, #244]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 8001228:	681b      	ldr	r3, [r3, #0]
 800122a:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800122e:	687b      	ldr	r3, [r7, #4]
 8001230:	695b      	ldr	r3, [r3, #20]
 8001232:	00db      	lsls	r3, r3, #3
 8001234:	4939      	ldr	r1, [pc, #228]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 8001236:	4313      	orrs	r3, r2
 8001238:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800123a:	e03a      	b.n	80012b2 <HAL_RCC_OscConfig+0x202>
      }
    }
    else
    {
      /* Check the HSI State */
      if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 800123c:	687b      	ldr	r3, [r7, #4]
 800123e:	691b      	ldr	r3, [r3, #16]
 8001240:	2b00      	cmp	r3, #0
 8001242:	d020      	beq.n	8001286 <HAL_RCC_OscConfig+0x1d6>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8001244:	4b36      	ldr	r3, [pc, #216]	@ (8001320 <HAL_RCC_OscConfig+0x270>)
 8001246:	2201      	movs	r2, #1
 8001248:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800124a:	f7ff fc67 	bl	8000b1c <HAL_GetTick>
 800124e:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001250:	e008      	b.n	8001264 <HAL_RCC_OscConfig+0x1b4>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8001252:	f7ff fc63 	bl	8000b1c <HAL_GetTick>
 8001256:	4602      	mov	r2, r0
 8001258:	693b      	ldr	r3, [r7, #16]
 800125a:	1ad3      	subs	r3, r2, r3
 800125c:	2b02      	cmp	r3, #2
 800125e:	d901      	bls.n	8001264 <HAL_RCC_OscConfig+0x1b4>
          {
            return HAL_TIMEOUT;
 8001260:	2303      	movs	r3, #3
 8001262:	e1a1      	b.n	80015a8 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001264:	4b2d      	ldr	r3, [pc, #180]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 8001266:	681b      	ldr	r3, [r3, #0]
 8001268:	f003 0302 	and.w	r3, r3, #2
 800126c:	2b00      	cmp	r3, #0
 800126e:	d0f0      	beq.n	8001252 <HAL_RCC_OscConfig+0x1a2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001270:	4b2a      	ldr	r3, [pc, #168]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 8001272:	681b      	ldr	r3, [r3, #0]
 8001274:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001278:	687b      	ldr	r3, [r7, #4]
 800127a:	695b      	ldr	r3, [r3, #20]
 800127c:	00db      	lsls	r3, r3, #3
 800127e:	4927      	ldr	r1, [pc, #156]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 8001280:	4313      	orrs	r3, r2
 8001282:	600b      	str	r3, [r1, #0]
 8001284:	e015      	b.n	80012b2 <HAL_RCC_OscConfig+0x202>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8001286:	4b26      	ldr	r3, [pc, #152]	@ (8001320 <HAL_RCC_OscConfig+0x270>)
 8001288:	2200      	movs	r2, #0
 800128a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800128c:	f7ff fc46 	bl	8000b1c <HAL_GetTick>
 8001290:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8001292:	e008      	b.n	80012a6 <HAL_RCC_OscConfig+0x1f6>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8001294:	f7ff fc42 	bl	8000b1c <HAL_GetTick>
 8001298:	4602      	mov	r2, r0
 800129a:	693b      	ldr	r3, [r7, #16]
 800129c:	1ad3      	subs	r3, r2, r3
 800129e:	2b02      	cmp	r3, #2
 80012a0:	d901      	bls.n	80012a6 <HAL_RCC_OscConfig+0x1f6>
          {
            return HAL_TIMEOUT;
 80012a2:	2303      	movs	r3, #3
 80012a4:	e180      	b.n	80015a8 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80012a6:	4b1d      	ldr	r3, [pc, #116]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 80012a8:	681b      	ldr	r3, [r3, #0]
 80012aa:	f003 0302 	and.w	r3, r3, #2
 80012ae:	2b00      	cmp	r3, #0
 80012b0:	d1f0      	bne.n	8001294 <HAL_RCC_OscConfig+0x1e4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80012b2:	687b      	ldr	r3, [r7, #4]
 80012b4:	681b      	ldr	r3, [r3, #0]
 80012b6:	f003 0308 	and.w	r3, r3, #8
 80012ba:	2b00      	cmp	r3, #0
 80012bc:	d03a      	beq.n	8001334 <HAL_RCC_OscConfig+0x284>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 80012be:	687b      	ldr	r3, [r7, #4]
 80012c0:	699b      	ldr	r3, [r3, #24]
 80012c2:	2b00      	cmp	r3, #0
 80012c4:	d019      	beq.n	80012fa <HAL_RCC_OscConfig+0x24a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80012c6:	4b17      	ldr	r3, [pc, #92]	@ (8001324 <HAL_RCC_OscConfig+0x274>)
 80012c8:	2201      	movs	r2, #1
 80012ca:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80012cc:	f7ff fc26 	bl	8000b1c <HAL_GetTick>
 80012d0:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80012d2:	e008      	b.n	80012e6 <HAL_RCC_OscConfig+0x236>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80012d4:	f7ff fc22 	bl	8000b1c <HAL_GetTick>
 80012d8:	4602      	mov	r2, r0
 80012da:	693b      	ldr	r3, [r7, #16]
 80012dc:	1ad3      	subs	r3, r2, r3
 80012de:	2b02      	cmp	r3, #2
 80012e0:	d901      	bls.n	80012e6 <HAL_RCC_OscConfig+0x236>
        {
          return HAL_TIMEOUT;
 80012e2:	2303      	movs	r3, #3
 80012e4:	e160      	b.n	80015a8 <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80012e6:	4b0d      	ldr	r3, [pc, #52]	@ (800131c <HAL_RCC_OscConfig+0x26c>)
 80012e8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80012ea:	f003 0302 	and.w	r3, r3, #2
 80012ee:	2b00      	cmp	r3, #0
 80012f0:	d0f0      	beq.n	80012d4 <HAL_RCC_OscConfig+0x224>
        }
      }
      /*  To have a fully stabilized clock in the specified range, a software delay of 1ms
          should be added.*/
      RCC_Delay(1);
 80012f2:	2001      	movs	r0, #1
 80012f4:	f000 fa9c 	bl	8001830 <RCC_Delay>
 80012f8:	e01c      	b.n	8001334 <HAL_RCC_OscConfig+0x284>
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80012fa:	4b0a      	ldr	r3, [pc, #40]	@ (8001324 <HAL_RCC_OscConfig+0x274>)
 80012fc:	2200      	movs	r2, #0
 80012fe:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001300:	f7ff fc0c 	bl	8000b1c <HAL_GetTick>
 8001304:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8001306:	e00f      	b.n	8001328 <HAL_RCC_OscConfig+0x278>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8001308:	f7ff fc08 	bl	8000b1c <HAL_GetTick>
 800130c:	4602      	mov	r2, r0
 800130e:	693b      	ldr	r3, [r7, #16]
 8001310:	1ad3      	subs	r3, r2, r3
 8001312:	2b02      	cmp	r3, #2
 8001314:	d908      	bls.n	8001328 <HAL_RCC_OscConfig+0x278>
        {
          return HAL_TIMEOUT;
 8001316:	2303      	movs	r3, #3
 8001318:	e146      	b.n	80015a8 <HAL_RCC_OscConfig+0x4f8>
 800131a:	bf00      	nop
 800131c:	40021000 	.word	0x40021000
 8001320:	42420000 	.word	0x42420000
 8001324:	42420480 	.word	0x42420480
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8001328:	4b92      	ldr	r3, [pc, #584]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 800132a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800132c:	f003 0302 	and.w	r3, r3, #2
 8001330:	2b00      	cmp	r3, #0
 8001332:	d1e9      	bne.n	8001308 <HAL_RCC_OscConfig+0x258>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8001334:	687b      	ldr	r3, [r7, #4]
 8001336:	681b      	ldr	r3, [r3, #0]
 8001338:	f003 0304 	and.w	r3, r3, #4
 800133c:	2b00      	cmp	r3, #0
 800133e:	f000 80a6 	beq.w	800148e <HAL_RCC_OscConfig+0x3de>
  {
    FlagStatus       pwrclkchanged = RESET;
 8001342:	2300      	movs	r3, #0
 8001344:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8001346:	4b8b      	ldr	r3, [pc, #556]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 8001348:	69db      	ldr	r3, [r3, #28]
 800134a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800134e:	2b00      	cmp	r3, #0
 8001350:	d10d      	bne.n	800136e <HAL_RCC_OscConfig+0x2be>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8001352:	4b88      	ldr	r3, [pc, #544]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 8001354:	69db      	ldr	r3, [r3, #28]
 8001356:	4a87      	ldr	r2, [pc, #540]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 8001358:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800135c:	61d3      	str	r3, [r2, #28]
 800135e:	4b85      	ldr	r3, [pc, #532]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 8001360:	69db      	ldr	r3, [r3, #28]
 8001362:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001366:	60bb      	str	r3, [r7, #8]
 8001368:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 800136a:	2301      	movs	r3, #1
 800136c:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800136e:	4b82      	ldr	r3, [pc, #520]	@ (8001578 <HAL_RCC_OscConfig+0x4c8>)
 8001370:	681b      	ldr	r3, [r3, #0]
 8001372:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001376:	2b00      	cmp	r3, #0
 8001378:	d118      	bne.n	80013ac <HAL_RCC_OscConfig+0x2fc>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800137a:	4b7f      	ldr	r3, [pc, #508]	@ (8001578 <HAL_RCC_OscConfig+0x4c8>)
 800137c:	681b      	ldr	r3, [r3, #0]
 800137e:	4a7e      	ldr	r2, [pc, #504]	@ (8001578 <HAL_RCC_OscConfig+0x4c8>)
 8001380:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001384:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8001386:	f7ff fbc9 	bl	8000b1c <HAL_GetTick>
 800138a:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800138c:	e008      	b.n	80013a0 <HAL_RCC_OscConfig+0x2f0>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800138e:	f7ff fbc5 	bl	8000b1c <HAL_GetTick>
 8001392:	4602      	mov	r2, r0
 8001394:	693b      	ldr	r3, [r7, #16]
 8001396:	1ad3      	subs	r3, r2, r3
 8001398:	2b64      	cmp	r3, #100	@ 0x64
 800139a:	d901      	bls.n	80013a0 <HAL_RCC_OscConfig+0x2f0>
        {
          return HAL_TIMEOUT;
 800139c:	2303      	movs	r3, #3
 800139e:	e103      	b.n	80015a8 <HAL_RCC_OscConfig+0x4f8>
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80013a0:	4b75      	ldr	r3, [pc, #468]	@ (8001578 <HAL_RCC_OscConfig+0x4c8>)
 80013a2:	681b      	ldr	r3, [r3, #0]
 80013a4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80013a8:	2b00      	cmp	r3, #0
 80013aa:	d0f0      	beq.n	800138e <HAL_RCC_OscConfig+0x2de>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80013ac:	687b      	ldr	r3, [r7, #4]
 80013ae:	68db      	ldr	r3, [r3, #12]
 80013b0:	2b01      	cmp	r3, #1
 80013b2:	d106      	bne.n	80013c2 <HAL_RCC_OscConfig+0x312>
 80013b4:	4b6f      	ldr	r3, [pc, #444]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 80013b6:	6a1b      	ldr	r3, [r3, #32]
 80013b8:	4a6e      	ldr	r2, [pc, #440]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 80013ba:	f043 0301 	orr.w	r3, r3, #1
 80013be:	6213      	str	r3, [r2, #32]
 80013c0:	e02d      	b.n	800141e <HAL_RCC_OscConfig+0x36e>
 80013c2:	687b      	ldr	r3, [r7, #4]
 80013c4:	68db      	ldr	r3, [r3, #12]
 80013c6:	2b00      	cmp	r3, #0
 80013c8:	d10c      	bne.n	80013e4 <HAL_RCC_OscConfig+0x334>
 80013ca:	4b6a      	ldr	r3, [pc, #424]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 80013cc:	6a1b      	ldr	r3, [r3, #32]
 80013ce:	4a69      	ldr	r2, [pc, #420]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 80013d0:	f023 0301 	bic.w	r3, r3, #1
 80013d4:	6213      	str	r3, [r2, #32]
 80013d6:	4b67      	ldr	r3, [pc, #412]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 80013d8:	6a1b      	ldr	r3, [r3, #32]
 80013da:	4a66      	ldr	r2, [pc, #408]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 80013dc:	f023 0304 	bic.w	r3, r3, #4
 80013e0:	6213      	str	r3, [r2, #32]
 80013e2:	e01c      	b.n	800141e <HAL_RCC_OscConfig+0x36e>
 80013e4:	687b      	ldr	r3, [r7, #4]
 80013e6:	68db      	ldr	r3, [r3, #12]
 80013e8:	2b05      	cmp	r3, #5
 80013ea:	d10c      	bne.n	8001406 <HAL_RCC_OscConfig+0x356>
 80013ec:	4b61      	ldr	r3, [pc, #388]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 80013ee:	6a1b      	ldr	r3, [r3, #32]
 80013f0:	4a60      	ldr	r2, [pc, #384]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 80013f2:	f043 0304 	orr.w	r3, r3, #4
 80013f6:	6213      	str	r3, [r2, #32]
 80013f8:	4b5e      	ldr	r3, [pc, #376]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 80013fa:	6a1b      	ldr	r3, [r3, #32]
 80013fc:	4a5d      	ldr	r2, [pc, #372]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 80013fe:	f043 0301 	orr.w	r3, r3, #1
 8001402:	6213      	str	r3, [r2, #32]
 8001404:	e00b      	b.n	800141e <HAL_RCC_OscConfig+0x36e>
 8001406:	4b5b      	ldr	r3, [pc, #364]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 8001408:	6a1b      	ldr	r3, [r3, #32]
 800140a:	4a5a      	ldr	r2, [pc, #360]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 800140c:	f023 0301 	bic.w	r3, r3, #1
 8001410:	6213      	str	r3, [r2, #32]
 8001412:	4b58      	ldr	r3, [pc, #352]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 8001414:	6a1b      	ldr	r3, [r3, #32]
 8001416:	4a57      	ldr	r2, [pc, #348]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 8001418:	f023 0304 	bic.w	r3, r3, #4
 800141c:	6213      	str	r3, [r2, #32]
    /* Check the LSE State */
    if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 800141e:	687b      	ldr	r3, [r7, #4]
 8001420:	68db      	ldr	r3, [r3, #12]
 8001422:	2b00      	cmp	r3, #0
 8001424:	d015      	beq.n	8001452 <HAL_RCC_OscConfig+0x3a2>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001426:	f7ff fb79 	bl	8000b1c <HAL_GetTick>
 800142a:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800142c:	e00a      	b.n	8001444 <HAL_RCC_OscConfig+0x394>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800142e:	f7ff fb75 	bl	8000b1c <HAL_GetTick>
 8001432:	4602      	mov	r2, r0
 8001434:	693b      	ldr	r3, [r7, #16]
 8001436:	1ad3      	subs	r3, r2, r3
 8001438:	f241 3288 	movw	r2, #5000	@ 0x1388
 800143c:	4293      	cmp	r3, r2
 800143e:	d901      	bls.n	8001444 <HAL_RCC_OscConfig+0x394>
        {
          return HAL_TIMEOUT;
 8001440:	2303      	movs	r3, #3
 8001442:	e0b1      	b.n	80015a8 <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001444:	4b4b      	ldr	r3, [pc, #300]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 8001446:	6a1b      	ldr	r3, [r3, #32]
 8001448:	f003 0302 	and.w	r3, r3, #2
 800144c:	2b00      	cmp	r3, #0
 800144e:	d0ee      	beq.n	800142e <HAL_RCC_OscConfig+0x37e>
 8001450:	e014      	b.n	800147c <HAL_RCC_OscConfig+0x3cc>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001452:	f7ff fb63 	bl	8000b1c <HAL_GetTick>
 8001456:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001458:	e00a      	b.n	8001470 <HAL_RCC_OscConfig+0x3c0>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800145a:	f7ff fb5f 	bl	8000b1c <HAL_GetTick>
 800145e:	4602      	mov	r2, r0
 8001460:	693b      	ldr	r3, [r7, #16]
 8001462:	1ad3      	subs	r3, r2, r3
 8001464:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001468:	4293      	cmp	r3, r2
 800146a:	d901      	bls.n	8001470 <HAL_RCC_OscConfig+0x3c0>
        {
          return HAL_TIMEOUT;
 800146c:	2303      	movs	r3, #3
 800146e:	e09b      	b.n	80015a8 <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001470:	4b40      	ldr	r3, [pc, #256]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 8001472:	6a1b      	ldr	r3, [r3, #32]
 8001474:	f003 0302 	and.w	r3, r3, #2
 8001478:	2b00      	cmp	r3, #0
 800147a:	d1ee      	bne.n	800145a <HAL_RCC_OscConfig+0x3aa>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if (pwrclkchanged == SET)
 800147c:	7dfb      	ldrb	r3, [r7, #23]
 800147e:	2b01      	cmp	r3, #1
 8001480:	d105      	bne.n	800148e <HAL_RCC_OscConfig+0x3de>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8001482:	4b3c      	ldr	r3, [pc, #240]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 8001484:	69db      	ldr	r3, [r3, #28]
 8001486:	4a3b      	ldr	r2, [pc, #236]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 8001488:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800148c:	61d3      	str	r3, [r2, #28]

#endif /* RCC_CR_PLL2ON */
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800148e:	687b      	ldr	r3, [r7, #4]
 8001490:	69db      	ldr	r3, [r3, #28]
 8001492:	2b00      	cmp	r3, #0
 8001494:	f000 8087 	beq.w	80015a6 <HAL_RCC_OscConfig+0x4f6>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8001498:	4b36      	ldr	r3, [pc, #216]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 800149a:	685b      	ldr	r3, [r3, #4]
 800149c:	f003 030c 	and.w	r3, r3, #12
 80014a0:	2b08      	cmp	r3, #8
 80014a2:	d061      	beq.n	8001568 <HAL_RCC_OscConfig+0x4b8>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80014a4:	687b      	ldr	r3, [r7, #4]
 80014a6:	69db      	ldr	r3, [r3, #28]
 80014a8:	2b02      	cmp	r3, #2
 80014aa:	d146      	bne.n	800153a <HAL_RCC_OscConfig+0x48a>
        /* Check the parameters */
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80014ac:	4b33      	ldr	r3, [pc, #204]	@ (800157c <HAL_RCC_OscConfig+0x4cc>)
 80014ae:	2200      	movs	r2, #0
 80014b0:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80014b2:	f7ff fb33 	bl	8000b1c <HAL_GetTick>
 80014b6:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80014b8:	e008      	b.n	80014cc <HAL_RCC_OscConfig+0x41c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80014ba:	f7ff fb2f 	bl	8000b1c <HAL_GetTick>
 80014be:	4602      	mov	r2, r0
 80014c0:	693b      	ldr	r3, [r7, #16]
 80014c2:	1ad3      	subs	r3, r2, r3
 80014c4:	2b02      	cmp	r3, #2
 80014c6:	d901      	bls.n	80014cc <HAL_RCC_OscConfig+0x41c>
          {
            return HAL_TIMEOUT;
 80014c8:	2303      	movs	r3, #3
 80014ca:	e06d      	b.n	80015a8 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80014cc:	4b29      	ldr	r3, [pc, #164]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 80014ce:	681b      	ldr	r3, [r3, #0]
 80014d0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80014d4:	2b00      	cmp	r3, #0
 80014d6:	d1f0      	bne.n	80014ba <HAL_RCC_OscConfig+0x40a>
          }
        }

        /* Configure the HSE prediv factor --------------------------------*/
        /* It can be written only when the PLL is disabled. Not used in PLL source is different than HSE */
        if (RCC_OscInitStruct->PLL.PLLSource == RCC_PLLSOURCE_HSE)
 80014d8:	687b      	ldr	r3, [r7, #4]
 80014da:	6a1b      	ldr	r3, [r3, #32]
 80014dc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80014e0:	d108      	bne.n	80014f4 <HAL_RCC_OscConfig+0x444>
          /* Set PREDIV1 source */
          SET_BIT(RCC->CFGR2, RCC_OscInitStruct->Prediv1Source);
#endif /* RCC_CFGR2_PREDIV1SRC */

          /* Set PREDIV1 Value */
          __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 80014e2:	4b24      	ldr	r3, [pc, #144]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 80014e4:	685b      	ldr	r3, [r3, #4]
 80014e6:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 80014ea:	687b      	ldr	r3, [r7, #4]
 80014ec:	689b      	ldr	r3, [r3, #8]
 80014ee:	4921      	ldr	r1, [pc, #132]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 80014f0:	4313      	orrs	r3, r2
 80014f2:	604b      	str	r3, [r1, #4]
        }

        /* Configure the main PLL clock source and multiplication factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80014f4:	4b1f      	ldr	r3, [pc, #124]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 80014f6:	685b      	ldr	r3, [r3, #4]
 80014f8:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 80014fc:	687b      	ldr	r3, [r7, #4]
 80014fe:	6a19      	ldr	r1, [r3, #32]
 8001500:	687b      	ldr	r3, [r7, #4]
 8001502:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001504:	430b      	orrs	r3, r1
 8001506:	491b      	ldr	r1, [pc, #108]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 8001508:	4313      	orrs	r3, r2
 800150a:	604b      	str	r3, [r1, #4]
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 800150c:	4b1b      	ldr	r3, [pc, #108]	@ (800157c <HAL_RCC_OscConfig+0x4cc>)
 800150e:	2201      	movs	r2, #1
 8001510:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001512:	f7ff fb03 	bl	8000b1c <HAL_GetTick>
 8001516:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8001518:	e008      	b.n	800152c <HAL_RCC_OscConfig+0x47c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800151a:	f7ff faff 	bl	8000b1c <HAL_GetTick>
 800151e:	4602      	mov	r2, r0
 8001520:	693b      	ldr	r3, [r7, #16]
 8001522:	1ad3      	subs	r3, r2, r3
 8001524:	2b02      	cmp	r3, #2
 8001526:	d901      	bls.n	800152c <HAL_RCC_OscConfig+0x47c>
          {
            return HAL_TIMEOUT;
 8001528:	2303      	movs	r3, #3
 800152a:	e03d      	b.n	80015a8 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 800152c:	4b11      	ldr	r3, [pc, #68]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 800152e:	681b      	ldr	r3, [r3, #0]
 8001530:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001534:	2b00      	cmp	r3, #0
 8001536:	d0f0      	beq.n	800151a <HAL_RCC_OscConfig+0x46a>
 8001538:	e035      	b.n	80015a6 <HAL_RCC_OscConfig+0x4f6>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800153a:	4b10      	ldr	r3, [pc, #64]	@ (800157c <HAL_RCC_OscConfig+0x4cc>)
 800153c:	2200      	movs	r2, #0
 800153e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001540:	f7ff faec 	bl	8000b1c <HAL_GetTick>
 8001544:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001546:	e008      	b.n	800155a <HAL_RCC_OscConfig+0x4aa>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001548:	f7ff fae8 	bl	8000b1c <HAL_GetTick>
 800154c:	4602      	mov	r2, r0
 800154e:	693b      	ldr	r3, [r7, #16]
 8001550:	1ad3      	subs	r3, r2, r3
 8001552:	2b02      	cmp	r3, #2
 8001554:	d901      	bls.n	800155a <HAL_RCC_OscConfig+0x4aa>
          {
            return HAL_TIMEOUT;
 8001556:	2303      	movs	r3, #3
 8001558:	e026      	b.n	80015a8 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 800155a:	4b06      	ldr	r3, [pc, #24]	@ (8001574 <HAL_RCC_OscConfig+0x4c4>)
 800155c:	681b      	ldr	r3, [r3, #0]
 800155e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001562:	2b00      	cmp	r3, #0
 8001564:	d1f0      	bne.n	8001548 <HAL_RCC_OscConfig+0x498>
 8001566:	e01e      	b.n	80015a6 <HAL_RCC_OscConfig+0x4f6>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8001568:	687b      	ldr	r3, [r7, #4]
 800156a:	69db      	ldr	r3, [r3, #28]
 800156c:	2b01      	cmp	r3, #1
 800156e:	d107      	bne.n	8001580 <HAL_RCC_OscConfig+0x4d0>
      {
        return HAL_ERROR;
 8001570:	2301      	movs	r3, #1
 8001572:	e019      	b.n	80015a8 <HAL_RCC_OscConfig+0x4f8>
 8001574:	40021000 	.word	0x40021000
 8001578:	40007000 	.word	0x40007000
 800157c:	42420060 	.word	0x42420060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8001580:	4b0b      	ldr	r3, [pc, #44]	@ (80015b0 <HAL_RCC_OscConfig+0x500>)
 8001582:	685b      	ldr	r3, [r3, #4]
 8001584:	60fb      	str	r3, [r7, #12]
        if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001586:	68fb      	ldr	r3, [r7, #12]
 8001588:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 800158c:	687b      	ldr	r3, [r7, #4]
 800158e:	6a1b      	ldr	r3, [r3, #32]
 8001590:	429a      	cmp	r2, r3
 8001592:	d106      	bne.n	80015a2 <HAL_RCC_OscConfig+0x4f2>
            (READ_BIT(pll_config, RCC_CFGR_PLLMULL) != RCC_OscInitStruct->PLL.PLLMUL))
 8001594:	68fb      	ldr	r3, [r7, #12]
 8001596:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 800159a:	687b      	ldr	r3, [r7, #4]
 800159c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
        if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800159e:	429a      	cmp	r2, r3
 80015a0:	d001      	beq.n	80015a6 <HAL_RCC_OscConfig+0x4f6>
        {
          return HAL_ERROR;
 80015a2:	2301      	movs	r3, #1
 80015a4:	e000      	b.n	80015a8 <HAL_RCC_OscConfig+0x4f8>
        }
      }
    }
  }

  return HAL_OK;
 80015a6:	2300      	movs	r3, #0
}
 80015a8:	4618      	mov	r0, r3
 80015aa:	3718      	adds	r7, #24
 80015ac:	46bd      	mov	sp, r7
 80015ae:	bd80      	pop	{r7, pc}
 80015b0:	40021000 	.word	0x40021000

080015b4 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80015b4:	b580      	push	{r7, lr}
 80015b6:	b084      	sub	sp, #16
 80015b8:	af00      	add	r7, sp, #0
 80015ba:	6078      	str	r0, [r7, #4]
 80015bc:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 80015be:	687b      	ldr	r3, [r7, #4]
 80015c0:	2b00      	cmp	r3, #0
 80015c2:	d101      	bne.n	80015c8 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 80015c4:	2301      	movs	r3, #1
 80015c6:	e0d0      	b.n	800176a <HAL_RCC_ClockConfig+0x1b6>
  must be correctly programmed according to the frequency of the CPU clock
    (HCLK) of the device. */

#if defined(FLASH_ACR_LATENCY)
  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 80015c8:	4b6a      	ldr	r3, [pc, #424]	@ (8001774 <HAL_RCC_ClockConfig+0x1c0>)
 80015ca:	681b      	ldr	r3, [r3, #0]
 80015cc:	f003 0307 	and.w	r3, r3, #7
 80015d0:	683a      	ldr	r2, [r7, #0]
 80015d2:	429a      	cmp	r2, r3
 80015d4:	d910      	bls.n	80015f8 <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80015d6:	4b67      	ldr	r3, [pc, #412]	@ (8001774 <HAL_RCC_ClockConfig+0x1c0>)
 80015d8:	681b      	ldr	r3, [r3, #0]
 80015da:	f023 0207 	bic.w	r2, r3, #7
 80015de:	4965      	ldr	r1, [pc, #404]	@ (8001774 <HAL_RCC_ClockConfig+0x1c0>)
 80015e0:	683b      	ldr	r3, [r7, #0]
 80015e2:	4313      	orrs	r3, r2
 80015e4:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80015e6:	4b63      	ldr	r3, [pc, #396]	@ (8001774 <HAL_RCC_ClockConfig+0x1c0>)
 80015e8:	681b      	ldr	r3, [r3, #0]
 80015ea:	f003 0307 	and.w	r3, r3, #7
 80015ee:	683a      	ldr	r2, [r7, #0]
 80015f0:	429a      	cmp	r2, r3
 80015f2:	d001      	beq.n	80015f8 <HAL_RCC_ClockConfig+0x44>
  {
    return HAL_ERROR;
 80015f4:	2301      	movs	r3, #1
 80015f6:	e0b8      	b.n	800176a <HAL_RCC_ClockConfig+0x1b6>
  }
}

#endif /* FLASH_ACR_LATENCY */
/*-------------------------- HCLK Configuration --------------------------*/
if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80015f8:	687b      	ldr	r3, [r7, #4]
 80015fa:	681b      	ldr	r3, [r3, #0]
 80015fc:	f003 0302 	and.w	r3, r3, #2
 8001600:	2b00      	cmp	r3, #0
 8001602:	d020      	beq.n	8001646 <HAL_RCC_ClockConfig+0x92>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
    a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001604:	687b      	ldr	r3, [r7, #4]
 8001606:	681b      	ldr	r3, [r3, #0]
 8001608:	f003 0304 	and.w	r3, r3, #4
 800160c:	2b00      	cmp	r3, #0
 800160e:	d005      	beq.n	800161c <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8001610:	4b59      	ldr	r3, [pc, #356]	@ (8001778 <HAL_RCC_ClockConfig+0x1c4>)
 8001612:	685b      	ldr	r3, [r3, #4]
 8001614:	4a58      	ldr	r2, [pc, #352]	@ (8001778 <HAL_RCC_ClockConfig+0x1c4>)
 8001616:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 800161a:	6053      	str	r3, [r2, #4]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800161c:	687b      	ldr	r3, [r7, #4]
 800161e:	681b      	ldr	r3, [r3, #0]
 8001620:	f003 0308 	and.w	r3, r3, #8
 8001624:	2b00      	cmp	r3, #0
 8001626:	d005      	beq.n	8001634 <HAL_RCC_ClockConfig+0x80>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8001628:	4b53      	ldr	r3, [pc, #332]	@ (8001778 <HAL_RCC_ClockConfig+0x1c4>)
 800162a:	685b      	ldr	r3, [r3, #4]
 800162c:	4a52      	ldr	r2, [pc, #328]	@ (8001778 <HAL_RCC_ClockConfig+0x1c4>)
 800162e:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 8001632:	6053      	str	r3, [r2, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8001634:	4b50      	ldr	r3, [pc, #320]	@ (8001778 <HAL_RCC_ClockConfig+0x1c4>)
 8001636:	685b      	ldr	r3, [r3, #4]
 8001638:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 800163c:	687b      	ldr	r3, [r7, #4]
 800163e:	689b      	ldr	r3, [r3, #8]
 8001640:	494d      	ldr	r1, [pc, #308]	@ (8001778 <HAL_RCC_ClockConfig+0x1c4>)
 8001642:	4313      	orrs	r3, r2
 8001644:	604b      	str	r3, [r1, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8001646:	687b      	ldr	r3, [r7, #4]
 8001648:	681b      	ldr	r3, [r3, #0]
 800164a:	f003 0301 	and.w	r3, r3, #1
 800164e:	2b00      	cmp	r3, #0
 8001650:	d040      	beq.n	80016d4 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001652:	687b      	ldr	r3, [r7, #4]
 8001654:	685b      	ldr	r3, [r3, #4]
 8001656:	2b01      	cmp	r3, #1
 8001658:	d107      	bne.n	800166a <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800165a:	4b47      	ldr	r3, [pc, #284]	@ (8001778 <HAL_RCC_ClockConfig+0x1c4>)
 800165c:	681b      	ldr	r3, [r3, #0]
 800165e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001662:	2b00      	cmp	r3, #0
 8001664:	d115      	bne.n	8001692 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001666:	2301      	movs	r3, #1
 8001668:	e07f      	b.n	800176a <HAL_RCC_ClockConfig+0x1b6>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800166a:	687b      	ldr	r3, [r7, #4]
 800166c:	685b      	ldr	r3, [r3, #4]
 800166e:	2b02      	cmp	r3, #2
 8001670:	d107      	bne.n	8001682 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001672:	4b41      	ldr	r3, [pc, #260]	@ (8001778 <HAL_RCC_ClockConfig+0x1c4>)
 8001674:	681b      	ldr	r3, [r3, #0]
 8001676:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800167a:	2b00      	cmp	r3, #0
 800167c:	d109      	bne.n	8001692 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800167e:	2301      	movs	r3, #1
 8001680:	e073      	b.n	800176a <HAL_RCC_ClockConfig+0x1b6>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001682:	4b3d      	ldr	r3, [pc, #244]	@ (8001778 <HAL_RCC_ClockConfig+0x1c4>)
 8001684:	681b      	ldr	r3, [r3, #0]
 8001686:	f003 0302 	and.w	r3, r3, #2
 800168a:	2b00      	cmp	r3, #0
 800168c:	d101      	bne.n	8001692 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800168e:	2301      	movs	r3, #1
 8001690:	e06b      	b.n	800176a <HAL_RCC_ClockConfig+0x1b6>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8001692:	4b39      	ldr	r3, [pc, #228]	@ (8001778 <HAL_RCC_ClockConfig+0x1c4>)
 8001694:	685b      	ldr	r3, [r3, #4]
 8001696:	f023 0203 	bic.w	r2, r3, #3
 800169a:	687b      	ldr	r3, [r7, #4]
 800169c:	685b      	ldr	r3, [r3, #4]
 800169e:	4936      	ldr	r1, [pc, #216]	@ (8001778 <HAL_RCC_ClockConfig+0x1c4>)
 80016a0:	4313      	orrs	r3, r2
 80016a2:	604b      	str	r3, [r1, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 80016a4:	f7ff fa3a 	bl	8000b1c <HAL_GetTick>
 80016a8:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80016aa:	e00a      	b.n	80016c2 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80016ac:	f7ff fa36 	bl	8000b1c <HAL_GetTick>
 80016b0:	4602      	mov	r2, r0
 80016b2:	68fb      	ldr	r3, [r7, #12]
 80016b4:	1ad3      	subs	r3, r2, r3
 80016b6:	f241 3288 	movw	r2, #5000	@ 0x1388
 80016ba:	4293      	cmp	r3, r2
 80016bc:	d901      	bls.n	80016c2 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 80016be:	2303      	movs	r3, #3
 80016c0:	e053      	b.n	800176a <HAL_RCC_ClockConfig+0x1b6>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80016c2:	4b2d      	ldr	r3, [pc, #180]	@ (8001778 <HAL_RCC_ClockConfig+0x1c4>)
 80016c4:	685b      	ldr	r3, [r3, #4]
 80016c6:	f003 020c 	and.w	r2, r3, #12
 80016ca:	687b      	ldr	r3, [r7, #4]
 80016cc:	685b      	ldr	r3, [r3, #4]
 80016ce:	009b      	lsls	r3, r3, #2
 80016d0:	429a      	cmp	r2, r3
 80016d2:	d1eb      	bne.n	80016ac <HAL_RCC_ClockConfig+0xf8>
    }
  }

#if defined(FLASH_ACR_LATENCY)
  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 80016d4:	4b27      	ldr	r3, [pc, #156]	@ (8001774 <HAL_RCC_ClockConfig+0x1c0>)
 80016d6:	681b      	ldr	r3, [r3, #0]
 80016d8:	f003 0307 	and.w	r3, r3, #7
 80016dc:	683a      	ldr	r2, [r7, #0]
 80016de:	429a      	cmp	r2, r3
 80016e0:	d210      	bcs.n	8001704 <HAL_RCC_ClockConfig+0x150>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80016e2:	4b24      	ldr	r3, [pc, #144]	@ (8001774 <HAL_RCC_ClockConfig+0x1c0>)
 80016e4:	681b      	ldr	r3, [r3, #0]
 80016e6:	f023 0207 	bic.w	r2, r3, #7
 80016ea:	4922      	ldr	r1, [pc, #136]	@ (8001774 <HAL_RCC_ClockConfig+0x1c0>)
 80016ec:	683b      	ldr	r3, [r7, #0]
 80016ee:	4313      	orrs	r3, r2
 80016f0:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80016f2:	4b20      	ldr	r3, [pc, #128]	@ (8001774 <HAL_RCC_ClockConfig+0x1c0>)
 80016f4:	681b      	ldr	r3, [r3, #0]
 80016f6:	f003 0307 	and.w	r3, r3, #7
 80016fa:	683a      	ldr	r2, [r7, #0]
 80016fc:	429a      	cmp	r2, r3
 80016fe:	d001      	beq.n	8001704 <HAL_RCC_ClockConfig+0x150>
  {
    return HAL_ERROR;
 8001700:	2301      	movs	r3, #1
 8001702:	e032      	b.n	800176a <HAL_RCC_ClockConfig+0x1b6>
  }
}
#endif /* FLASH_ACR_LATENCY */

/*-------------------------- PCLK1 Configuration ---------------------------*/
if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001704:	687b      	ldr	r3, [r7, #4]
 8001706:	681b      	ldr	r3, [r3, #0]
 8001708:	f003 0304 	and.w	r3, r3, #4
 800170c:	2b00      	cmp	r3, #0
 800170e:	d008      	beq.n	8001722 <HAL_RCC_ClockConfig+0x16e>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8001710:	4b19      	ldr	r3, [pc, #100]	@ (8001778 <HAL_RCC_ClockConfig+0x1c4>)
 8001712:	685b      	ldr	r3, [r3, #4]
 8001714:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8001718:	687b      	ldr	r3, [r7, #4]
 800171a:	68db      	ldr	r3, [r3, #12]
 800171c:	4916      	ldr	r1, [pc, #88]	@ (8001778 <HAL_RCC_ClockConfig+0x1c4>)
 800171e:	4313      	orrs	r3, r2
 8001720:	604b      	str	r3, [r1, #4]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001722:	687b      	ldr	r3, [r7, #4]
 8001724:	681b      	ldr	r3, [r3, #0]
 8001726:	f003 0308 	and.w	r3, r3, #8
 800172a:	2b00      	cmp	r3, #0
 800172c:	d009      	beq.n	8001742 <HAL_RCC_ClockConfig+0x18e>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 800172e:	4b12      	ldr	r3, [pc, #72]	@ (8001778 <HAL_RCC_ClockConfig+0x1c4>)
 8001730:	685b      	ldr	r3, [r3, #4]
 8001732:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8001736:	687b      	ldr	r3, [r7, #4]
 8001738:	691b      	ldr	r3, [r3, #16]
 800173a:	00db      	lsls	r3, r3, #3
 800173c:	490e      	ldr	r1, [pc, #56]	@ (8001778 <HAL_RCC_ClockConfig+0x1c4>)
 800173e:	4313      	orrs	r3, r2
 8001740:	604b      	str	r3, [r1, #4]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8001742:	f000 f821 	bl	8001788 <HAL_RCC_GetSysClockFreq>
 8001746:	4602      	mov	r2, r0
 8001748:	4b0b      	ldr	r3, [pc, #44]	@ (8001778 <HAL_RCC_ClockConfig+0x1c4>)
 800174a:	685b      	ldr	r3, [r3, #4]
 800174c:	091b      	lsrs	r3, r3, #4
 800174e:	f003 030f 	and.w	r3, r3, #15
 8001752:	490a      	ldr	r1, [pc, #40]	@ (800177c <HAL_RCC_ClockConfig+0x1c8>)
 8001754:	5ccb      	ldrb	r3, [r1, r3]
 8001756:	fa22 f303 	lsr.w	r3, r2, r3
 800175a:	4a09      	ldr	r2, [pc, #36]	@ (8001780 <HAL_RCC_ClockConfig+0x1cc>)
 800175c:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);
 800175e:	4b09      	ldr	r3, [pc, #36]	@ (8001784 <HAL_RCC_ClockConfig+0x1d0>)
 8001760:	681b      	ldr	r3, [r3, #0]
 8001762:	4618      	mov	r0, r3
 8001764:	f7ff f998 	bl	8000a98 <HAL_InitTick>

  return HAL_OK;
 8001768:	2300      	movs	r3, #0
}
 800176a:	4618      	mov	r0, r3
 800176c:	3710      	adds	r7, #16
 800176e:	46bd      	mov	sp, r7
 8001770:	bd80      	pop	{r7, pc}
 8001772:	bf00      	nop
 8001774:	40022000 	.word	0x40022000
 8001778:	40021000 	.word	0x40021000
 800177c:	0800c0ac 	.word	0x0800c0ac
 8001780:	200000b8 	.word	0x200000b8
 8001784:	200000bc 	.word	0x200000bc

08001788 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8001788:	b480      	push	{r7}
 800178a:	b087      	sub	sp, #28
 800178c:	af00      	add	r7, sp, #0
#else
  static const uint8_t aPredivFactorTable[2U] = {1, 2};
#endif /*RCC_CFGR2_PREDIV1*/

#endif
  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 800178e:	2300      	movs	r3, #0
 8001790:	60fb      	str	r3, [r7, #12]
 8001792:	2300      	movs	r3, #0
 8001794:	60bb      	str	r3, [r7, #8]
 8001796:	2300      	movs	r3, #0
 8001798:	617b      	str	r3, [r7, #20]
 800179a:	2300      	movs	r3, #0
 800179c:	607b      	str	r3, [r7, #4]
  uint32_t sysclockfreq = 0U;
 800179e:	2300      	movs	r3, #0
 80017a0:	613b      	str	r3, [r7, #16]
#if defined(RCC_CFGR2_PREDIV1SRC)
  uint32_t prediv2 = 0U, pll2mul = 0U;
#endif /*RCC_CFGR2_PREDIV1SRC*/

  tmpreg = RCC->CFGR;
 80017a2:	4b1e      	ldr	r3, [pc, #120]	@ (800181c <HAL_RCC_GetSysClockFreq+0x94>)
 80017a4:	685b      	ldr	r3, [r3, #4]
 80017a6:	60fb      	str	r3, [r7, #12]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 80017a8:	68fb      	ldr	r3, [r7, #12]
 80017aa:	f003 030c 	and.w	r3, r3, #12
 80017ae:	2b04      	cmp	r3, #4
 80017b0:	d002      	beq.n	80017b8 <HAL_RCC_GetSysClockFreq+0x30>
 80017b2:	2b08      	cmp	r3, #8
 80017b4:	d003      	beq.n	80017be <HAL_RCC_GetSysClockFreq+0x36>
 80017b6:	e027      	b.n	8001808 <HAL_RCC_GetSysClockFreq+0x80>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 80017b8:	4b19      	ldr	r3, [pc, #100]	@ (8001820 <HAL_RCC_GetSysClockFreq+0x98>)
 80017ba:	613b      	str	r3, [r7, #16]
      break;
 80017bc:	e027      	b.n	800180e <HAL_RCC_GetSysClockFreq+0x86>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos];
 80017be:	68fb      	ldr	r3, [r7, #12]
 80017c0:	0c9b      	lsrs	r3, r3, #18
 80017c2:	f003 030f 	and.w	r3, r3, #15
 80017c6:	4a17      	ldr	r2, [pc, #92]	@ (8001824 <HAL_RCC_GetSysClockFreq+0x9c>)
 80017c8:	5cd3      	ldrb	r3, [r2, r3]
 80017ca:	607b      	str	r3, [r7, #4]
      if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 80017cc:	68fb      	ldr	r3, [r7, #12]
 80017ce:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80017d2:	2b00      	cmp	r3, #0
 80017d4:	d010      	beq.n	80017f8 <HAL_RCC_GetSysClockFreq+0x70>
      {
#if defined(RCC_CFGR2_PREDIV1)
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV1) >> RCC_CFGR2_PREDIV1_Pos];
#else
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> RCC_CFGR_PLLXTPRE_Pos];
 80017d6:	4b11      	ldr	r3, [pc, #68]	@ (800181c <HAL_RCC_GetSysClockFreq+0x94>)
 80017d8:	685b      	ldr	r3, [r3, #4]
 80017da:	0c5b      	lsrs	r3, r3, #17
 80017dc:	f003 0301 	and.w	r3, r3, #1
 80017e0:	4a11      	ldr	r2, [pc, #68]	@ (8001828 <HAL_RCC_GetSysClockFreq+0xa0>)
 80017e2:	5cd3      	ldrb	r3, [r2, r3]
 80017e4:	60bb      	str	r3, [r7, #8]
        {
          pllclk = pllclk / 2;
        }
#else
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
        pllclk = (uint32_t)((HSE_VALUE  * pllmul) / prediv);
 80017e6:	687b      	ldr	r3, [r7, #4]
 80017e8:	4a0d      	ldr	r2, [pc, #52]	@ (8001820 <HAL_RCC_GetSysClockFreq+0x98>)
 80017ea:	fb03 f202 	mul.w	r2, r3, r2
 80017ee:	68bb      	ldr	r3, [r7, #8]
 80017f0:	fbb2 f3f3 	udiv	r3, r2, r3
 80017f4:	617b      	str	r3, [r7, #20]
 80017f6:	e004      	b.n	8001802 <HAL_RCC_GetSysClockFreq+0x7a>
#endif /*RCC_CFGR2_PREDIV1SRC*/
      }
      else
      {
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((HSI_VALUE >> 1) * pllmul);
 80017f8:	687b      	ldr	r3, [r7, #4]
 80017fa:	4a0c      	ldr	r2, [pc, #48]	@ (800182c <HAL_RCC_GetSysClockFreq+0xa4>)
 80017fc:	fb02 f303 	mul.w	r3, r2, r3
 8001800:	617b      	str	r3, [r7, #20]
      }
      sysclockfreq = pllclk;
 8001802:	697b      	ldr	r3, [r7, #20]
 8001804:	613b      	str	r3, [r7, #16]
      break;
 8001806:	e002      	b.n	800180e <HAL_RCC_GetSysClockFreq+0x86>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 8001808:	4b05      	ldr	r3, [pc, #20]	@ (8001820 <HAL_RCC_GetSysClockFreq+0x98>)
 800180a:	613b      	str	r3, [r7, #16]
      break;
 800180c:	bf00      	nop
    }
  }
  return sysclockfreq;
 800180e:	693b      	ldr	r3, [r7, #16]
}
 8001810:	4618      	mov	r0, r3
 8001812:	371c      	adds	r7, #28
 8001814:	46bd      	mov	sp, r7
 8001816:	bc80      	pop	{r7}
 8001818:	4770      	bx	lr
 800181a:	bf00      	nop
 800181c:	40021000 	.word	0x40021000
 8001820:	007a1200 	.word	0x007a1200
 8001824:	0800c0bc 	.word	0x0800c0bc
 8001828:	0800c0cc 	.word	0x0800c0cc
 800182c:	003d0900 	.word	0x003d0900

08001830 <RCC_Delay>:
  * @brief  This function provides delay (in milliseconds) based on CPU cycles method.
  * @param  mdelay: specifies the delay time length, in milliseconds.
  * @retval None
  */
static void RCC_Delay(uint32_t mdelay)
{
 8001830:	b480      	push	{r7}
 8001832:	b085      	sub	sp, #20
 8001834:	af00      	add	r7, sp, #0
 8001836:	6078      	str	r0, [r7, #4]
  __IO uint32_t Delay = mdelay * (SystemCoreClock / 8U / 1000U);
 8001838:	4b0a      	ldr	r3, [pc, #40]	@ (8001864 <RCC_Delay+0x34>)
 800183a:	681b      	ldr	r3, [r3, #0]
 800183c:	4a0a      	ldr	r2, [pc, #40]	@ (8001868 <RCC_Delay+0x38>)
 800183e:	fba2 2303 	umull	r2, r3, r2, r3
 8001842:	0a5b      	lsrs	r3, r3, #9
 8001844:	687a      	ldr	r2, [r7, #4]
 8001846:	fb02 f303 	mul.w	r3, r2, r3
 800184a:	60fb      	str	r3, [r7, #12]
  do
  {
    __NOP();
 800184c:	bf00      	nop
  }
  while (Delay --);
 800184e:	68fb      	ldr	r3, [r7, #12]
 8001850:	1e5a      	subs	r2, r3, #1
 8001852:	60fa      	str	r2, [r7, #12]
 8001854:	2b00      	cmp	r3, #0
 8001856:	d1f9      	bne.n	800184c <RCC_Delay+0x1c>
}
 8001858:	bf00      	nop
 800185a:	bf00      	nop
 800185c:	3714      	adds	r7, #20
 800185e:	46bd      	mov	sp, r7
 8001860:	bc80      	pop	{r7}
 8001862:	4770      	bx	lr
 8001864:	200000b8 	.word	0x200000b8
 8001868:	10624dd3 	.word	0x10624dd3

0800186c <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 800186c:	b580      	push	{r7, lr}
 800186e:	b082      	sub	sp, #8
 8001870:	af00      	add	r7, sp, #0
 8001872:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8001874:	687b      	ldr	r3, [r7, #4]
 8001876:	2b00      	cmp	r3, #0
 8001878:	d101      	bne.n	800187e <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 800187a:	2301      	movs	r3, #1
 800187c:	e076      	b.n	800196c <HAL_SPI_Init+0x100>
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  /* TI mode is not supported on this device.
     TIMode parameter is mandatory equal to SPI_TIMODE_DISABLE */
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800187e:	687b      	ldr	r3, [r7, #4]
 8001880:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001882:	2b00      	cmp	r3, #0
 8001884:	d108      	bne.n	8001898 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	685b      	ldr	r3, [r3, #4]
 800188a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800188e:	d009      	beq.n	80018a4 <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8001890:	687b      	ldr	r3, [r7, #4]
 8001892:	2200      	movs	r2, #0
 8001894:	61da      	str	r2, [r3, #28]
 8001896:	e005      	b.n	80018a4 <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8001898:	687b      	ldr	r3, [r7, #4]
 800189a:	2200      	movs	r2, #0
 800189c:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800189e:	687b      	ldr	r3, [r7, #4]
 80018a0:	2200      	movs	r2, #0
 80018a2:	615a      	str	r2, [r3, #20]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80018a4:	687b      	ldr	r3, [r7, #4]
 80018a6:	2200      	movs	r2, #0
 80018a8:	629a      	str	r2, [r3, #40]	@ 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 80018aa:	687b      	ldr	r3, [r7, #4]
 80018ac:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80018b0:	b2db      	uxtb	r3, r3
 80018b2:	2b00      	cmp	r3, #0
 80018b4:	d106      	bne.n	80018c4 <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 80018b6:	687b      	ldr	r3, [r7, #4]
 80018b8:	2200      	movs	r2, #0
 80018ba:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 80018be:	6878      	ldr	r0, [r7, #4]
 80018c0:	f7ff f832 	bl	8000928 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 80018c4:	687b      	ldr	r3, [r7, #4]
 80018c6:	2202      	movs	r2, #2
 80018c8:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 80018cc:	687b      	ldr	r3, [r7, #4]
 80018ce:	681b      	ldr	r3, [r3, #0]
 80018d0:	681a      	ldr	r2, [r3, #0]
 80018d2:	687b      	ldr	r3, [r7, #4]
 80018d4:	681b      	ldr	r3, [r3, #0]
 80018d6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80018da:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80018dc:	687b      	ldr	r3, [r7, #4]
 80018de:	685b      	ldr	r3, [r3, #4]
 80018e0:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 80018e4:	687b      	ldr	r3, [r7, #4]
 80018e6:	689b      	ldr	r3, [r3, #8]
 80018e8:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 80018ec:	431a      	orrs	r2, r3
 80018ee:	687b      	ldr	r3, [r7, #4]
 80018f0:	68db      	ldr	r3, [r3, #12]
 80018f2:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80018f6:	431a      	orrs	r2, r3
 80018f8:	687b      	ldr	r3, [r7, #4]
 80018fa:	691b      	ldr	r3, [r3, #16]
 80018fc:	f003 0302 	and.w	r3, r3, #2
 8001900:	431a      	orrs	r2, r3
 8001902:	687b      	ldr	r3, [r7, #4]
 8001904:	695b      	ldr	r3, [r3, #20]
 8001906:	f003 0301 	and.w	r3, r3, #1
 800190a:	431a      	orrs	r2, r3
 800190c:	687b      	ldr	r3, [r7, #4]
 800190e:	699b      	ldr	r3, [r3, #24]
 8001910:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8001914:	431a      	orrs	r2, r3
 8001916:	687b      	ldr	r3, [r7, #4]
 8001918:	69db      	ldr	r3, [r3, #28]
 800191a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800191e:	431a      	orrs	r2, r3
 8001920:	687b      	ldr	r3, [r7, #4]
 8001922:	6a1b      	ldr	r3, [r3, #32]
 8001924:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001928:	ea42 0103 	orr.w	r1, r2, r3
 800192c:	687b      	ldr	r3, [r7, #4]
 800192e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001930:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8001934:	687b      	ldr	r3, [r7, #4]
 8001936:	681b      	ldr	r3, [r3, #0]
 8001938:	430a      	orrs	r2, r1
 800193a:	601a      	str	r2, [r3, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management */
  WRITE_REG(hspi->Instance->CR2, ((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE));
 800193c:	687b      	ldr	r3, [r7, #4]
 800193e:	699b      	ldr	r3, [r3, #24]
 8001940:	0c1a      	lsrs	r2, r3, #16
 8001942:	687b      	ldr	r3, [r7, #4]
 8001944:	681b      	ldr	r3, [r3, #0]
 8001946:	f002 0204 	and.w	r2, r2, #4
 800194a:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800194c:	687b      	ldr	r3, [r7, #4]
 800194e:	681b      	ldr	r3, [r3, #0]
 8001950:	69da      	ldr	r2, [r3, #28]
 8001952:	687b      	ldr	r3, [r7, #4]
 8001954:	681b      	ldr	r3, [r3, #0]
 8001956:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800195a:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800195c:	687b      	ldr	r3, [r7, #4]
 800195e:	2200      	movs	r2, #0
 8001960:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8001962:	687b      	ldr	r3, [r7, #4]
 8001964:	2201      	movs	r2, #1
 8001966:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

  return HAL_OK;
 800196a:	2300      	movs	r3, #0
}
 800196c:	4618      	mov	r0, r3
 800196e:	3708      	adds	r7, #8
 8001970:	46bd      	mov	sp, r7
 8001972:	bd80      	pop	{r7, pc}

08001974 <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8001974:	b580      	push	{r7, lr}
 8001976:	b088      	sub	sp, #32
 8001978:	af00      	add	r7, sp, #0
 800197a:	60f8      	str	r0, [r7, #12]
 800197c:	60b9      	str	r1, [r7, #8]
 800197e:	603b      	str	r3, [r7, #0]
 8001980:	4613      	mov	r3, r2
 8001982:	80fb      	strh	r3, [r7, #6]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8001984:	f7ff f8ca 	bl	8000b1c <HAL_GetTick>
 8001988:	61f8      	str	r0, [r7, #28]
  initial_TxXferCount = Size;
 800198a:	88fb      	ldrh	r3, [r7, #6]
 800198c:	837b      	strh	r3, [r7, #26]

  if (hspi->State != HAL_SPI_STATE_READY)
 800198e:	68fb      	ldr	r3, [r7, #12]
 8001990:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8001994:	b2db      	uxtb	r3, r3
 8001996:	2b01      	cmp	r3, #1
 8001998:	d001      	beq.n	800199e <HAL_SPI_Transmit+0x2a>
  {
    return HAL_BUSY;
 800199a:	2302      	movs	r3, #2
 800199c:	e12a      	b.n	8001bf4 <HAL_SPI_Transmit+0x280>
  }

  if ((pData == NULL) || (Size == 0U))
 800199e:	68bb      	ldr	r3, [r7, #8]
 80019a0:	2b00      	cmp	r3, #0
 80019a2:	d002      	beq.n	80019aa <HAL_SPI_Transmit+0x36>
 80019a4:	88fb      	ldrh	r3, [r7, #6]
 80019a6:	2b00      	cmp	r3, #0
 80019a8:	d101      	bne.n	80019ae <HAL_SPI_Transmit+0x3a>
  {
    return HAL_ERROR;
 80019aa:	2301      	movs	r3, #1
 80019ac:	e122      	b.n	8001bf4 <HAL_SPI_Transmit+0x280>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 80019ae:	68fb      	ldr	r3, [r7, #12]
 80019b0:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80019b4:	2b01      	cmp	r3, #1
 80019b6:	d101      	bne.n	80019bc <HAL_SPI_Transmit+0x48>
 80019b8:	2302      	movs	r3, #2
 80019ba:	e11b      	b.n	8001bf4 <HAL_SPI_Transmit+0x280>
 80019bc:	68fb      	ldr	r3, [r7, #12]
 80019be:	2201      	movs	r2, #1
 80019c0:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80019c4:	68fb      	ldr	r3, [r7, #12]
 80019c6:	2203      	movs	r2, #3
 80019c8:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80019cc:	68fb      	ldr	r3, [r7, #12]
 80019ce:	2200      	movs	r2, #0
 80019d0:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 80019d2:	68fb      	ldr	r3, [r7, #12]
 80019d4:	68ba      	ldr	r2, [r7, #8]
 80019d6:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 80019d8:	68fb      	ldr	r3, [r7, #12]
 80019da:	88fa      	ldrh	r2, [r7, #6]
 80019dc:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = Size;
 80019de:	68fb      	ldr	r3, [r7, #12]
 80019e0:	88fa      	ldrh	r2, [r7, #6]
 80019e2:	86da      	strh	r2, [r3, #54]	@ 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80019e4:	68fb      	ldr	r3, [r7, #12]
 80019e6:	2200      	movs	r2, #0
 80019e8:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 80019ea:	68fb      	ldr	r3, [r7, #12]
 80019ec:	2200      	movs	r2, #0
 80019ee:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 80019f0:	68fb      	ldr	r3, [r7, #12]
 80019f2:	2200      	movs	r2, #0
 80019f4:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->TxISR       = NULL;
 80019f6:	68fb      	ldr	r3, [r7, #12]
 80019f8:	2200      	movs	r2, #0
 80019fa:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi->RxISR       = NULL;
 80019fc:	68fb      	ldr	r3, [r7, #12]
 80019fe:	2200      	movs	r2, #0
 8001a00:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8001a02:	68fb      	ldr	r3, [r7, #12]
 8001a04:	689b      	ldr	r3, [r3, #8]
 8001a06:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8001a0a:	d10f      	bne.n	8001a2c <HAL_SPI_Transmit+0xb8>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8001a0c:	68fb      	ldr	r3, [r7, #12]
 8001a0e:	681b      	ldr	r3, [r3, #0]
 8001a10:	681a      	ldr	r2, [r3, #0]
 8001a12:	68fb      	ldr	r3, [r7, #12]
 8001a14:	681b      	ldr	r3, [r3, #0]
 8001a16:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8001a1a:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8001a1c:	68fb      	ldr	r3, [r7, #12]
 8001a1e:	681b      	ldr	r3, [r3, #0]
 8001a20:	681a      	ldr	r2, [r3, #0]
 8001a22:	68fb      	ldr	r3, [r7, #12]
 8001a24:	681b      	ldr	r3, [r3, #0]
 8001a26:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8001a2a:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8001a2c:	68fb      	ldr	r3, [r7, #12]
 8001a2e:	681b      	ldr	r3, [r3, #0]
 8001a30:	681b      	ldr	r3, [r3, #0]
 8001a32:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001a36:	2b40      	cmp	r3, #64	@ 0x40
 8001a38:	d007      	beq.n	8001a4a <HAL_SPI_Transmit+0xd6>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8001a3a:	68fb      	ldr	r3, [r7, #12]
 8001a3c:	681b      	ldr	r3, [r3, #0]
 8001a3e:	681a      	ldr	r2, [r3, #0]
 8001a40:	68fb      	ldr	r3, [r7, #12]
 8001a42:	681b      	ldr	r3, [r3, #0]
 8001a44:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8001a48:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8001a4a:	68fb      	ldr	r3, [r7, #12]
 8001a4c:	68db      	ldr	r3, [r3, #12]
 8001a4e:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8001a52:	d152      	bne.n	8001afa <HAL_SPI_Transmit+0x186>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8001a54:	68fb      	ldr	r3, [r7, #12]
 8001a56:	685b      	ldr	r3, [r3, #4]
 8001a58:	2b00      	cmp	r3, #0
 8001a5a:	d002      	beq.n	8001a62 <HAL_SPI_Transmit+0xee>
 8001a5c:	8b7b      	ldrh	r3, [r7, #26]
 8001a5e:	2b01      	cmp	r3, #1
 8001a60:	d145      	bne.n	8001aee <HAL_SPI_Transmit+0x17a>
    {
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8001a62:	68fb      	ldr	r3, [r7, #12]
 8001a64:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a66:	881a      	ldrh	r2, [r3, #0]
 8001a68:	68fb      	ldr	r3, [r7, #12]
 8001a6a:	681b      	ldr	r3, [r3, #0]
 8001a6c:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8001a6e:	68fb      	ldr	r3, [r7, #12]
 8001a70:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a72:	1c9a      	adds	r2, r3, #2
 8001a74:	68fb      	ldr	r3, [r7, #12]
 8001a76:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 8001a78:	68fb      	ldr	r3, [r7, #12]
 8001a7a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8001a7c:	b29b      	uxth	r3, r3
 8001a7e:	3b01      	subs	r3, #1
 8001a80:	b29a      	uxth	r2, r3
 8001a82:	68fb      	ldr	r3, [r7, #12]
 8001a84:	86da      	strh	r2, [r3, #54]	@ 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8001a86:	e032      	b.n	8001aee <HAL_SPI_Transmit+0x17a>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8001a88:	68fb      	ldr	r3, [r7, #12]
 8001a8a:	681b      	ldr	r3, [r3, #0]
 8001a8c:	689b      	ldr	r3, [r3, #8]
 8001a8e:	f003 0302 	and.w	r3, r3, #2
 8001a92:	2b02      	cmp	r3, #2
 8001a94:	d112      	bne.n	8001abc <HAL_SPI_Transmit+0x148>
      {
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8001a96:	68fb      	ldr	r3, [r7, #12]
 8001a98:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a9a:	881a      	ldrh	r2, [r3, #0]
 8001a9c:	68fb      	ldr	r3, [r7, #12]
 8001a9e:	681b      	ldr	r3, [r3, #0]
 8001aa0:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8001aa2:	68fb      	ldr	r3, [r7, #12]
 8001aa4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001aa6:	1c9a      	adds	r2, r3, #2
 8001aa8:	68fb      	ldr	r3, [r7, #12]
 8001aaa:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 8001aac:	68fb      	ldr	r3, [r7, #12]
 8001aae:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8001ab0:	b29b      	uxth	r3, r3
 8001ab2:	3b01      	subs	r3, #1
 8001ab4:	b29a      	uxth	r2, r3
 8001ab6:	68fb      	ldr	r3, [r7, #12]
 8001ab8:	86da      	strh	r2, [r3, #54]	@ 0x36
 8001aba:	e018      	b.n	8001aee <HAL_SPI_Transmit+0x17a>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8001abc:	f7ff f82e 	bl	8000b1c <HAL_GetTick>
 8001ac0:	4602      	mov	r2, r0
 8001ac2:	69fb      	ldr	r3, [r7, #28]
 8001ac4:	1ad3      	subs	r3, r2, r3
 8001ac6:	683a      	ldr	r2, [r7, #0]
 8001ac8:	429a      	cmp	r2, r3
 8001aca:	d803      	bhi.n	8001ad4 <HAL_SPI_Transmit+0x160>
 8001acc:	683b      	ldr	r3, [r7, #0]
 8001ace:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001ad2:	d102      	bne.n	8001ada <HAL_SPI_Transmit+0x166>
 8001ad4:	683b      	ldr	r3, [r7, #0]
 8001ad6:	2b00      	cmp	r3, #0
 8001ad8:	d109      	bne.n	8001aee <HAL_SPI_Transmit+0x17a>
        {
          hspi->State = HAL_SPI_STATE_READY;
 8001ada:	68fb      	ldr	r3, [r7, #12]
 8001adc:	2201      	movs	r2, #1
 8001ade:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8001ae2:	68fb      	ldr	r3, [r7, #12]
 8001ae4:	2200      	movs	r2, #0
 8001ae6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 8001aea:	2303      	movs	r3, #3
 8001aec:	e082      	b.n	8001bf4 <HAL_SPI_Transmit+0x280>
    while (hspi->TxXferCount > 0U)
 8001aee:	68fb      	ldr	r3, [r7, #12]
 8001af0:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8001af2:	b29b      	uxth	r3, r3
 8001af4:	2b00      	cmp	r3, #0
 8001af6:	d1c7      	bne.n	8001a88 <HAL_SPI_Transmit+0x114>
 8001af8:	e053      	b.n	8001ba2 <HAL_SPI_Transmit+0x22e>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8001afa:	68fb      	ldr	r3, [r7, #12]
 8001afc:	685b      	ldr	r3, [r3, #4]
 8001afe:	2b00      	cmp	r3, #0
 8001b00:	d002      	beq.n	8001b08 <HAL_SPI_Transmit+0x194>
 8001b02:	8b7b      	ldrh	r3, [r7, #26]
 8001b04:	2b01      	cmp	r3, #1
 8001b06:	d147      	bne.n	8001b98 <HAL_SPI_Transmit+0x224>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8001b08:	68fb      	ldr	r3, [r7, #12]
 8001b0a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b0c:	68fb      	ldr	r3, [r7, #12]
 8001b0e:	681b      	ldr	r3, [r3, #0]
 8001b10:	330c      	adds	r3, #12
 8001b12:	7812      	ldrb	r2, [r2, #0]
 8001b14:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8001b16:	68fb      	ldr	r3, [r7, #12]
 8001b18:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b1a:	1c5a      	adds	r2, r3, #1
 8001b1c:	68fb      	ldr	r3, [r7, #12]
 8001b1e:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 8001b20:	68fb      	ldr	r3, [r7, #12]
 8001b22:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8001b24:	b29b      	uxth	r3, r3
 8001b26:	3b01      	subs	r3, #1
 8001b28:	b29a      	uxth	r2, r3
 8001b2a:	68fb      	ldr	r3, [r7, #12]
 8001b2c:	86da      	strh	r2, [r3, #54]	@ 0x36
    }
    while (hspi->TxXferCount > 0U)
 8001b2e:	e033      	b.n	8001b98 <HAL_SPI_Transmit+0x224>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8001b30:	68fb      	ldr	r3, [r7, #12]
 8001b32:	681b      	ldr	r3, [r3, #0]
 8001b34:	689b      	ldr	r3, [r3, #8]
 8001b36:	f003 0302 	and.w	r3, r3, #2
 8001b3a:	2b02      	cmp	r3, #2
 8001b3c:	d113      	bne.n	8001b66 <HAL_SPI_Transmit+0x1f2>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8001b3e:	68fb      	ldr	r3, [r7, #12]
 8001b40:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b42:	68fb      	ldr	r3, [r7, #12]
 8001b44:	681b      	ldr	r3, [r3, #0]
 8001b46:	330c      	adds	r3, #12
 8001b48:	7812      	ldrb	r2, [r2, #0]
 8001b4a:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8001b4c:	68fb      	ldr	r3, [r7, #12]
 8001b4e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b50:	1c5a      	adds	r2, r3, #1
 8001b52:	68fb      	ldr	r3, [r7, #12]
 8001b54:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 8001b56:	68fb      	ldr	r3, [r7, #12]
 8001b58:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8001b5a:	b29b      	uxth	r3, r3
 8001b5c:	3b01      	subs	r3, #1
 8001b5e:	b29a      	uxth	r2, r3
 8001b60:	68fb      	ldr	r3, [r7, #12]
 8001b62:	86da      	strh	r2, [r3, #54]	@ 0x36
 8001b64:	e018      	b.n	8001b98 <HAL_SPI_Transmit+0x224>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8001b66:	f7fe ffd9 	bl	8000b1c <HAL_GetTick>
 8001b6a:	4602      	mov	r2, r0
 8001b6c:	69fb      	ldr	r3, [r7, #28]
 8001b6e:	1ad3      	subs	r3, r2, r3
 8001b70:	683a      	ldr	r2, [r7, #0]
 8001b72:	429a      	cmp	r2, r3
 8001b74:	d803      	bhi.n	8001b7e <HAL_SPI_Transmit+0x20a>
 8001b76:	683b      	ldr	r3, [r7, #0]
 8001b78:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001b7c:	d102      	bne.n	8001b84 <HAL_SPI_Transmit+0x210>
 8001b7e:	683b      	ldr	r3, [r7, #0]
 8001b80:	2b00      	cmp	r3, #0
 8001b82:	d109      	bne.n	8001b98 <HAL_SPI_Transmit+0x224>
        {
          hspi->State = HAL_SPI_STATE_READY;
 8001b84:	68fb      	ldr	r3, [r7, #12]
 8001b86:	2201      	movs	r2, #1
 8001b88:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8001b8c:	68fb      	ldr	r3, [r7, #12]
 8001b8e:	2200      	movs	r2, #0
 8001b90:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 8001b94:	2303      	movs	r3, #3
 8001b96:	e02d      	b.n	8001bf4 <HAL_SPI_Transmit+0x280>
    while (hspi->TxXferCount > 0U)
 8001b98:	68fb      	ldr	r3, [r7, #12]
 8001b9a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8001b9c:	b29b      	uxth	r3, r3
 8001b9e:	2b00      	cmp	r3, #0
 8001ba0:	d1c6      	bne.n	8001b30 <HAL_SPI_Transmit+0x1bc>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8001ba2:	69fa      	ldr	r2, [r7, #28]
 8001ba4:	6839      	ldr	r1, [r7, #0]
 8001ba6:	68f8      	ldr	r0, [r7, #12]
 8001ba8:	f000 f8b0 	bl	8001d0c <SPI_EndRxTxTransaction>
 8001bac:	4603      	mov	r3, r0
 8001bae:	2b00      	cmp	r3, #0
 8001bb0:	d002      	beq.n	8001bb8 <HAL_SPI_Transmit+0x244>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8001bb2:	68fb      	ldr	r3, [r7, #12]
 8001bb4:	2220      	movs	r2, #32
 8001bb6:	655a      	str	r2, [r3, #84]	@ 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8001bb8:	68fb      	ldr	r3, [r7, #12]
 8001bba:	689b      	ldr	r3, [r3, #8]
 8001bbc:	2b00      	cmp	r3, #0
 8001bbe:	d10a      	bne.n	8001bd6 <HAL_SPI_Transmit+0x262>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8001bc0:	2300      	movs	r3, #0
 8001bc2:	617b      	str	r3, [r7, #20]
 8001bc4:	68fb      	ldr	r3, [r7, #12]
 8001bc6:	681b      	ldr	r3, [r3, #0]
 8001bc8:	68db      	ldr	r3, [r3, #12]
 8001bca:	617b      	str	r3, [r7, #20]
 8001bcc:	68fb      	ldr	r3, [r7, #12]
 8001bce:	681b      	ldr	r3, [r3, #0]
 8001bd0:	689b      	ldr	r3, [r3, #8]
 8001bd2:	617b      	str	r3, [r7, #20]
 8001bd4:	697b      	ldr	r3, [r7, #20]
  }

  hspi->State = HAL_SPI_STATE_READY;
 8001bd6:	68fb      	ldr	r3, [r7, #12]
 8001bd8:	2201      	movs	r2, #1
 8001bda:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8001bde:	68fb      	ldr	r3, [r7, #12]
 8001be0:	2200      	movs	r2, #0
 8001be2:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8001be6:	68fb      	ldr	r3, [r7, #12]
 8001be8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8001bea:	2b00      	cmp	r3, #0
 8001bec:	d001      	beq.n	8001bf2 <HAL_SPI_Transmit+0x27e>
  {
    return HAL_ERROR;
 8001bee:	2301      	movs	r3, #1
 8001bf0:	e000      	b.n	8001bf4 <HAL_SPI_Transmit+0x280>
  }
  else
  {
    return HAL_OK;
 8001bf2:	2300      	movs	r3, #0
  }
}
 8001bf4:	4618      	mov	r0, r3
 8001bf6:	3720      	adds	r7, #32
 8001bf8:	46bd      	mov	sp, r7
 8001bfa:	bd80      	pop	{r7, pc}

08001bfc <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8001bfc:	b580      	push	{r7, lr}
 8001bfe:	b088      	sub	sp, #32
 8001c00:	af00      	add	r7, sp, #0
 8001c02:	60f8      	str	r0, [r7, #12]
 8001c04:	60b9      	str	r1, [r7, #8]
 8001c06:	603b      	str	r3, [r7, #0]
 8001c08:	4613      	mov	r3, r2
 8001c0a:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8001c0c:	f7fe ff86 	bl	8000b1c <HAL_GetTick>
 8001c10:	4602      	mov	r2, r0
 8001c12:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001c14:	1a9b      	subs	r3, r3, r2
 8001c16:	683a      	ldr	r2, [r7, #0]
 8001c18:	4413      	add	r3, r2
 8001c1a:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8001c1c:	f7fe ff7e 	bl	8000b1c <HAL_GetTick>
 8001c20:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8001c22:	4b39      	ldr	r3, [pc, #228]	@ (8001d08 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8001c24:	681b      	ldr	r3, [r3, #0]
 8001c26:	015b      	lsls	r3, r3, #5
 8001c28:	0d1b      	lsrs	r3, r3, #20
 8001c2a:	69fa      	ldr	r2, [r7, #28]
 8001c2c:	fb02 f303 	mul.w	r3, r2, r3
 8001c30:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8001c32:	e054      	b.n	8001cde <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 8001c34:	683b      	ldr	r3, [r7, #0]
 8001c36:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001c3a:	d050      	beq.n	8001cde <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8001c3c:	f7fe ff6e 	bl	8000b1c <HAL_GetTick>
 8001c40:	4602      	mov	r2, r0
 8001c42:	69bb      	ldr	r3, [r7, #24]
 8001c44:	1ad3      	subs	r3, r2, r3
 8001c46:	69fa      	ldr	r2, [r7, #28]
 8001c48:	429a      	cmp	r2, r3
 8001c4a:	d902      	bls.n	8001c52 <SPI_WaitFlagStateUntilTimeout+0x56>
 8001c4c:	69fb      	ldr	r3, [r7, #28]
 8001c4e:	2b00      	cmp	r3, #0
 8001c50:	d13d      	bne.n	8001cce <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8001c52:	68fb      	ldr	r3, [r7, #12]
 8001c54:	681b      	ldr	r3, [r3, #0]
 8001c56:	685a      	ldr	r2, [r3, #4]
 8001c58:	68fb      	ldr	r3, [r7, #12]
 8001c5a:	681b      	ldr	r3, [r3, #0]
 8001c5c:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8001c60:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8001c62:	68fb      	ldr	r3, [r7, #12]
 8001c64:	685b      	ldr	r3, [r3, #4]
 8001c66:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8001c6a:	d111      	bne.n	8001c90 <SPI_WaitFlagStateUntilTimeout+0x94>
 8001c6c:	68fb      	ldr	r3, [r7, #12]
 8001c6e:	689b      	ldr	r3, [r3, #8]
 8001c70:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8001c74:	d004      	beq.n	8001c80 <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8001c76:	68fb      	ldr	r3, [r7, #12]
 8001c78:	689b      	ldr	r3, [r3, #8]
 8001c7a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001c7e:	d107      	bne.n	8001c90 <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8001c80:	68fb      	ldr	r3, [r7, #12]
 8001c82:	681b      	ldr	r3, [r3, #0]
 8001c84:	681a      	ldr	r2, [r3, #0]
 8001c86:	68fb      	ldr	r3, [r7, #12]
 8001c88:	681b      	ldr	r3, [r3, #0]
 8001c8a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8001c8e:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8001c90:	68fb      	ldr	r3, [r7, #12]
 8001c92:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001c94:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8001c98:	d10f      	bne.n	8001cba <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 8001c9a:	68fb      	ldr	r3, [r7, #12]
 8001c9c:	681b      	ldr	r3, [r3, #0]
 8001c9e:	681a      	ldr	r2, [r3, #0]
 8001ca0:	68fb      	ldr	r3, [r7, #12]
 8001ca2:	681b      	ldr	r3, [r3, #0]
 8001ca4:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8001ca8:	601a      	str	r2, [r3, #0]
 8001caa:	68fb      	ldr	r3, [r7, #12]
 8001cac:	681b      	ldr	r3, [r3, #0]
 8001cae:	681a      	ldr	r2, [r3, #0]
 8001cb0:	68fb      	ldr	r3, [r7, #12]
 8001cb2:	681b      	ldr	r3, [r3, #0]
 8001cb4:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8001cb8:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8001cba:	68fb      	ldr	r3, [r7, #12]
 8001cbc:	2201      	movs	r2, #1
 8001cbe:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8001cc2:	68fb      	ldr	r3, [r7, #12]
 8001cc4:	2200      	movs	r2, #0
 8001cc6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

        return HAL_TIMEOUT;
 8001cca:	2303      	movs	r3, #3
 8001ccc:	e017      	b.n	8001cfe <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8001cce:	697b      	ldr	r3, [r7, #20]
 8001cd0:	2b00      	cmp	r3, #0
 8001cd2:	d101      	bne.n	8001cd8 <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 8001cd4:	2300      	movs	r3, #0
 8001cd6:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8001cd8:	697b      	ldr	r3, [r7, #20]
 8001cda:	3b01      	subs	r3, #1
 8001cdc:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8001cde:	68fb      	ldr	r3, [r7, #12]
 8001ce0:	681b      	ldr	r3, [r3, #0]
 8001ce2:	689a      	ldr	r2, [r3, #8]
 8001ce4:	68bb      	ldr	r3, [r7, #8]
 8001ce6:	4013      	ands	r3, r2
 8001ce8:	68ba      	ldr	r2, [r7, #8]
 8001cea:	429a      	cmp	r2, r3
 8001cec:	bf0c      	ite	eq
 8001cee:	2301      	moveq	r3, #1
 8001cf0:	2300      	movne	r3, #0
 8001cf2:	b2db      	uxtb	r3, r3
 8001cf4:	461a      	mov	r2, r3
 8001cf6:	79fb      	ldrb	r3, [r7, #7]
 8001cf8:	429a      	cmp	r2, r3
 8001cfa:	d19b      	bne.n	8001c34 <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 8001cfc:	2300      	movs	r3, #0
}
 8001cfe:	4618      	mov	r0, r3
 8001d00:	3720      	adds	r7, #32
 8001d02:	46bd      	mov	sp, r7
 8001d04:	bd80      	pop	{r7, pc}
 8001d06:	bf00      	nop
 8001d08:	200000b8 	.word	0x200000b8

08001d0c <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8001d0c:	b580      	push	{r7, lr}
 8001d0e:	b086      	sub	sp, #24
 8001d10:	af02      	add	r7, sp, #8
 8001d12:	60f8      	str	r0, [r7, #12]
 8001d14:	60b9      	str	r1, [r7, #8]
 8001d16:	607a      	str	r2, [r7, #4]
  /* Wait until TXE flag */
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8001d18:	687b      	ldr	r3, [r7, #4]
 8001d1a:	9300      	str	r3, [sp, #0]
 8001d1c:	68bb      	ldr	r3, [r7, #8]
 8001d1e:	2201      	movs	r2, #1
 8001d20:	2102      	movs	r1, #2
 8001d22:	68f8      	ldr	r0, [r7, #12]
 8001d24:	f7ff ff6a 	bl	8001bfc <SPI_WaitFlagStateUntilTimeout>
 8001d28:	4603      	mov	r3, r0
 8001d2a:	2b00      	cmp	r3, #0
 8001d2c:	d007      	beq.n	8001d3e <SPI_EndRxTxTransaction+0x32>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8001d2e:	68fb      	ldr	r3, [r7, #12]
 8001d30:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8001d32:	f043 0220 	orr.w	r2, r3, #32
 8001d36:	68fb      	ldr	r3, [r7, #12]
 8001d38:	655a      	str	r2, [r3, #84]	@ 0x54
    return HAL_TIMEOUT;
 8001d3a:	2303      	movs	r3, #3
 8001d3c:	e013      	b.n	8001d66 <SPI_EndRxTxTransaction+0x5a>
  }

  /* Control the BSY flag */
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8001d3e:	687b      	ldr	r3, [r7, #4]
 8001d40:	9300      	str	r3, [sp, #0]
 8001d42:	68bb      	ldr	r3, [r7, #8]
 8001d44:	2200      	movs	r2, #0
 8001d46:	2180      	movs	r1, #128	@ 0x80
 8001d48:	68f8      	ldr	r0, [r7, #12]
 8001d4a:	f7ff ff57 	bl	8001bfc <SPI_WaitFlagStateUntilTimeout>
 8001d4e:	4603      	mov	r3, r0
 8001d50:	2b00      	cmp	r3, #0
 8001d52:	d007      	beq.n	8001d64 <SPI_EndRxTxTransaction+0x58>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8001d54:	68fb      	ldr	r3, [r7, #12]
 8001d56:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8001d58:	f043 0220 	orr.w	r2, r3, #32
 8001d5c:	68fb      	ldr	r3, [r7, #12]
 8001d5e:	655a      	str	r2, [r3, #84]	@ 0x54
    return HAL_TIMEOUT;
 8001d60:	2303      	movs	r3, #3
 8001d62:	e000      	b.n	8001d66 <SPI_EndRxTxTransaction+0x5a>
  }
  return HAL_OK;
 8001d64:	2300      	movs	r3, #0
}
 8001d66:	4618      	mov	r0, r3
 8001d68:	3710      	adds	r7, #16
 8001d6a:	46bd      	mov	sp, r7
 8001d6c:	bd80      	pop	{r7, pc}
	...

08001d70 <LCD_Index2Color_M565>:
 8001d70:	4a07      	ldr	r2, [pc, #28]	@ (8001d90 <LCD_Index2Color_M565+0x20>)
 8001d72:	f000 011f 	and.w	r1, r0, #31
 8001d76:	f3c0 23c4 	ubfx	r3, r0, #11, #5
 8001d7a:	5cd3      	ldrb	r3, [r2, r3]
 8001d7c:	5c52      	ldrb	r2, [r2, r1]
 8001d7e:	f3c0 1045 	ubfx	r0, r0, #5, #6
 8001d82:	eb03 4302 	add.w	r3, r3, r2, lsl #16
 8001d86:	4a03      	ldr	r2, [pc, #12]	@ (8001d94 <LCD_Index2Color_M565+0x24>)
 8001d88:	5c10      	ldrb	r0, [r2, r0]
 8001d8a:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8001d8e:	4770      	bx	lr
 8001d90:	0800b618 	.word	0x0800b618
 8001d94:	0800b5d8 	.word	0x0800b5d8

08001d98 <_Color2Index_M565>:
 8001d98:	4a07      	ldr	r2, [pc, #28]	@ (8001db8 <_Color2Index_M565+0x20>)
 8001d9a:	b2c1      	uxtb	r1, r0
 8001d9c:	f3c0 4307 	ubfx	r3, r0, #16, #8
 8001da0:	5cd3      	ldrb	r3, [r2, r3]
 8001da2:	5c52      	ldrb	r2, [r2, r1]
 8001da4:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8001da8:	eb03 23c2 	add.w	r3, r3, r2, lsl #11
 8001dac:	4a03      	ldr	r2, [pc, #12]	@ (8001dbc <_Color2Index_M565+0x24>)
 8001dae:	5c10      	ldrb	r0, [r2, r0]
 8001db0:	eb03 1040 	add.w	r0, r3, r0, lsl #5
 8001db4:	4770      	bx	lr
 8001db6:	bf00      	nop
 8001db8:	0800b3d8 	.word	0x0800b3d8
 8001dbc:	0800b2d8 	.word	0x0800b2d8

08001dc0 <_GetIndexMask_M565>:
 8001dc0:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8001dc4:	4770      	bx	lr
	...

08001dc8 <_Color2IndexBulk>:
 8001dc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001dca:	f8df e054 	ldr.w	lr, [pc, #84]	@ 8001e20 <_Color2IndexBulk+0x58>
 8001dce:	4606      	mov	r6, r0
 8001dd0:	f8de e000 	ldr.w	lr, [lr]
 8001dd4:	460d      	mov	r5, r1
 8001dd6:	4614      	mov	r4, r2
 8001dd8:	461f      	mov	r7, r3
 8001dda:	f1be 0f00 	cmp.w	lr, #0
 8001dde:	d003      	beq.n	8001de8 <_Color2IndexBulk+0x20>
 8001de0:	46f4      	mov	ip, lr
 8001de2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8001de6:	4760      	bx	ip
 8001de8:	490b      	ldr	r1, [pc, #44]	@ (8001e18 <_Color2IndexBulk+0x50>)
 8001dea:	480c      	ldr	r0, [pc, #48]	@ (8001e1c <_Color2IndexBulk+0x54>)
 8001dec:	f856 2b04 	ldr.w	r2, [r6], #4
 8001df0:	3c01      	subs	r4, #1
 8001df2:	f3c2 4307 	ubfx	r3, r2, #16, #8
 8001df6:	fa5f fe82 	uxtb.w	lr, r2
 8001dfa:	5ccb      	ldrb	r3, [r1, r3]
 8001dfc:	f811 e00e 	ldrb.w	lr, [r1, lr]
 8001e00:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8001e04:	5c82      	ldrb	r2, [r0, r2]
 8001e06:	eb03 23ce 	add.w	r3, r3, lr, lsl #11
 8001e0a:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 8001e0e:	802b      	strh	r3, [r5, #0]
 8001e10:	443d      	add	r5, r7
 8001e12:	d1eb      	bne.n	8001dec <_Color2IndexBulk+0x24>
 8001e14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e16:	bf00      	nop
 8001e18:	0800b3d8 	.word	0x0800b3d8
 8001e1c:	0800b2d8 	.word	0x0800b2d8
 8001e20:	200000e0 	.word	0x200000e0

08001e24 <_Index2ColorBulk>:
 8001e24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001e26:	4e15      	ldr	r6, [pc, #84]	@ (8001e7c <_Index2ColorBulk+0x58>)
 8001e28:	4686      	mov	lr, r0
 8001e2a:	6876      	ldr	r6, [r6, #4]
 8001e2c:	460f      	mov	r7, r1
 8001e2e:	4614      	mov	r4, r2
 8001e30:	461d      	mov	r5, r3
 8001e32:	b11e      	cbz	r6, 8001e3c <_Index2ColorBulk+0x18>
 8001e34:	46b4      	mov	ip, r6
 8001e36:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8001e3a:	4760      	bx	ip
 8001e3c:	1e50      	subs	r0, r2, #1
 8001e3e:	f102 4180 	add.w	r1, r2, #1073741824	@ 0x40000000
 8001e42:	fb03 e000 	mla	r0, r3, r0, lr
 8001e46:	3901      	subs	r1, #1
 8001e48:	eb07 0181 	add.w	r1, r7, r1, lsl #2
 8001e4c:	4e0c      	ldr	r6, [pc, #48]	@ (8001e80 <_Index2ColorBulk+0x5c>)
 8001e4e:	4f0d      	ldr	r7, [pc, #52]	@ (8001e84 <_Index2ColorBulk+0x60>)
 8001e50:	8802      	ldrh	r2, [r0, #0]
 8001e52:	3c01      	subs	r4, #1
 8001e54:	f002 031f 	and.w	r3, r2, #31
 8001e58:	f816 e003 	ldrb.w	lr, [r6, r3]
 8001e5c:	ea4f 23d2 	mov.w	r3, r2, lsr #11
 8001e60:	5cf3      	ldrb	r3, [r6, r3]
 8001e62:	f3c2 1245 	ubfx	r2, r2, #5, #6
 8001e66:	5cba      	ldrb	r2, [r7, r2]
 8001e68:	eb03 430e 	add.w	r3, r3, lr, lsl #16
 8001e6c:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8001e70:	f841 3904 	str.w	r3, [r1], #-4
 8001e74:	eba0 0005 	sub.w	r0, r0, r5
 8001e78:	d1ea      	bne.n	8001e50 <_Index2ColorBulk+0x2c>
 8001e7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e7c:	200000e0 	.word	0x200000e0
 8001e80:	0800b618 	.word	0x0800b618
 8001e84:	0800b5d8 	.word	0x0800b5d8

08001e88 <_PushFreeBlock>:
 8001e88:	4b07      	ldr	r3, [pc, #28]	@ (8001ea8 <_PushFreeBlock+0x20>)
 8001e8a:	b510      	push	{r4, lr}
 8001e8c:	685a      	ldr	r2, [r3, #4]
 8001e8e:	6a5c      	ldr	r4, [r3, #36]	@ 0x24
 8001e90:	3201      	adds	r2, #1
 8001e92:	605a      	str	r2, [r3, #4]
 8001e94:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8001e96:	eb02 01c0 	add.w	r1, r2, r0, lsl #3
 8001e9a:	604c      	str	r4, [r1, #4]
 8001e9c:	2100      	movs	r1, #0
 8001e9e:	f802 1030 	strb.w	r1, [r2, r0, lsl #3]
 8001ea2:	6258      	str	r0, [r3, #36]	@ 0x24
 8001ea4:	bd10      	pop	{r4, pc}
 8001ea6:	bf00      	nop
 8001ea8:	20002b28 	.word	0x20002b28

08001eac <_RemoveFreeBlock>:
 8001eac:	b510      	push	{r4, lr}
 8001eae:	490e      	ldr	r1, [pc, #56]	@ (8001ee8 <_RemoveFreeBlock+0x3c>)
 8001eb0:	6844      	ldr	r4, [r0, #4]
 8001eb2:	230f      	movs	r3, #15
 8001eb4:	eb01 02c3 	add.w	r2, r1, r3, lsl #3
 8001eb8:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 8001eba:	4294      	cmp	r4, r2
 8001ebc:	4a0a      	ldr	r2, [pc, #40]	@ (8001ee8 <_RemoveFreeBlock+0x3c>)
 8001ebe:	d203      	bcs.n	8001ec8 <_RemoveFreeBlock+0x1c>
 8001ec0:	f113 33ff 	adds.w	r3, r3, #4294967295
 8001ec4:	d2f6      	bcs.n	8001eb4 <_RemoveFreeBlock+0x8>
 8001ec6:	bd10      	pop	{r4, pc}
 8001ec8:	2b0f      	cmp	r3, #15
 8001eca:	d80c      	bhi.n	8001ee6 <_RemoveFreeBlock+0x3a>
 8001ecc:	6811      	ldr	r1, [r2, #0]
 8001ece:	1b09      	subs	r1, r1, r4
 8001ed0:	6011      	str	r1, [r2, #0]
 8001ed2:	6881      	ldr	r1, [r0, #8]
 8001ed4:	68c0      	ldr	r0, [r0, #12]
 8001ed6:	b101      	cbz	r1, 8001eda <_RemoveFreeBlock+0x2e>
 8001ed8:	6048      	str	r0, [r1, #4]
 8001eda:	b108      	cbz	r0, 8001ee0 <_RemoveFreeBlock+0x34>
 8001edc:	6001      	str	r1, [r0, #0]
 8001ede:	bd10      	pop	{r4, pc}
 8001ee0:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8001ee4:	6459      	str	r1, [r3, #68]	@ 0x44
 8001ee6:	bd10      	pop	{r4, pc}
 8001ee8:	20002b28 	.word	0x20002b28

08001eec <_AddFreeMemory>:
 8001eec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001eee:	4e27      	ldr	r6, [pc, #156]	@ (8001f8c <_AddFreeMemory+0xa0>)
 8001ef0:	4605      	mov	r5, r0
 8001ef2:	68f3      	ldr	r3, [r6, #12]
 8001ef4:	6bb2      	ldr	r2, [r6, #56]	@ 0x38
 8001ef6:	3b01      	subs	r3, #1
 8001ef8:	1808      	adds	r0, r1, r0
 8001efa:	4413      	add	r3, r2
 8001efc:	4283      	cmp	r3, r0
 8001efe:	460c      	mov	r4, r1
 8001f00:	d305      	bcc.n	8001f0e <_AddFreeMemory+0x22>
 8001f02:	594b      	ldr	r3, [r1, r5]
 8001f04:	b91b      	cbnz	r3, 8001f0e <_AddFreeMemory+0x22>
 8001f06:	6843      	ldr	r3, [r0, #4]
 8001f08:	441d      	add	r5, r3
 8001f0a:	f7ff ffcf 	bl	8001eac <_RemoveFreeBlock>
 8001f0e:	6bb3      	ldr	r3, [r6, #56]	@ 0x38
 8001f10:	429c      	cmp	r4, r3
 8001f12:	d90a      	bls.n	8001f2a <_AddFreeMemory+0x3e>
 8001f14:	f854 7c04 	ldr.w	r7, [r4, #-4]
 8001f18:	1be7      	subs	r7, r4, r7
 8001f1a:	683b      	ldr	r3, [r7, #0]
 8001f1c:	b92b      	cbnz	r3, 8001f2a <_AddFreeMemory+0x3e>
 8001f1e:	687b      	ldr	r3, [r7, #4]
 8001f20:	4638      	mov	r0, r7
 8001f22:	441d      	add	r5, r3
 8001f24:	463c      	mov	r4, r7
 8001f26:	f7ff ffc1 	bl	8001eac <_RemoveFreeBlock>
 8001f2a:	230f      	movs	r3, #15
 8001f2c:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8001f30:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 8001f32:	4295      	cmp	r5, r2
 8001f34:	d203      	bcs.n	8001f3e <_AddFreeMemory+0x52>
 8001f36:	f113 33ff 	adds.w	r3, r3, #4294967295
 8001f3a:	d2f7      	bcs.n	8001f2c <_AddFreeMemory+0x40>
 8001f3c:	e023      	b.n	8001f86 <_AddFreeMemory+0x9a>
 8001f3e:	2b0f      	cmp	r3, #15
 8001f40:	d821      	bhi.n	8001f86 <_AddFreeMemory+0x9a>
 8001f42:	3308      	adds	r3, #8
 8001f44:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8001f48:	6851      	ldr	r1, [r2, #4]
 8001f4a:	1960      	adds	r0, r4, r5
 8001f4c:	2200      	movs	r2, #0
 8001f4e:	e884 0024 	stmia.w	r4, {r2, r5}
 8001f52:	60a1      	str	r1, [r4, #8]
 8001f54:	6124      	str	r4, [r4, #16]
 8001f56:	f840 5c04 	str.w	r5, [r0, #-4]
 8001f5a:	f104 0008 	add.w	r0, r4, #8
 8001f5e:	b101      	cbz	r1, 8001f62 <_AddFreeMemory+0x76>
 8001f60:	6048      	str	r0, [r1, #4]
 8001f62:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8001f66:	60a1      	str	r1, [r4, #8]
 8001f68:	60e2      	str	r2, [r4, #12]
 8001f6a:	6058      	str	r0, [r3, #4]
 8001f6c:	6833      	ldr	r3, [r6, #0]
 8001f6e:	4907      	ldr	r1, [pc, #28]	@ (8001f8c <_AddFreeMemory+0xa0>)
 8001f70:	18ea      	adds	r2, r5, r3
 8001f72:	f896 3029 	ldrb.w	r3, [r6, #41]	@ 0x29
 8001f76:	6032      	str	r2, [r6, #0]
 8001f78:	b92b      	cbnz	r3, 8001f86 <_AddFreeMemory+0x9a>
 8001f7a:	68cb      	ldr	r3, [r1, #12]
 8001f7c:	1a9b      	subs	r3, r3, r2
 8001f7e:	688a      	ldr	r2, [r1, #8]
 8001f80:	4293      	cmp	r3, r2
 8001f82:	bf88      	it	hi
 8001f84:	608b      	strhi	r3, [r1, #8]
 8001f86:	4628      	mov	r0, r5
 8001f88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001f8a:	bf00      	nop
 8001f8c:	20002b28 	.word	0x20002b28

08001f90 <_RemoveHoles>:
 8001f90:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001f94:	4f23      	ldr	r7, [pc, #140]	@ (8002024 <_RemoveHoles+0x94>)
 8001f96:	4683      	mov	fp, r0
 8001f98:	46b8      	mov	r8, r7
 8001f9a:	68fe      	ldr	r6, [r7, #12]
 8001f9c:	6bbc      	ldr	r4, [r7, #56]	@ 0x38
 8001f9e:	3e01      	subs	r6, #1
 8001fa0:	4426      	add	r6, r4
 8001fa2:	e894 0028 	ldmia.w	r4, {r3, r5}
 8001fa6:	bba3      	cbnz	r3, 8002012 <_RemoveHoles+0x82>
 8001fa8:	1961      	adds	r1, r4, r5
 8001faa:	428e      	cmp	r6, r1
 8001fac:	d931      	bls.n	8002012 <_RemoveHoles+0x82>
 8001fae:	f854 a005 	ldr.w	sl, [r4, r5]
 8001fb2:	f1ba 0f00 	cmp.w	sl, #0
 8001fb6:	d02c      	beq.n	8002012 <_RemoveHoles+0x82>
 8001fb8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001fba:	f813 303a 	ldrb.w	r3, [r3, sl, lsl #3]
 8001fbe:	2b01      	cmp	r3, #1
 8001fc0:	d127      	bne.n	8002012 <_RemoveHoles+0x82>
 8001fc2:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
 8001fc6:	4620      	mov	r0, r4
 8001fc8:	f8d1 9004 	ldr.w	r9, [r1, #4]
 8001fcc:	9300      	str	r3, [sp, #0]
 8001fce:	9101      	str	r1, [sp, #4]
 8001fd0:	f7ff ff6c 	bl	8001eac <_RemoveFreeBlock>
 8001fd4:	9901      	ldr	r1, [sp, #4]
 8001fd6:	f8d8 2034 	ldr.w	r2, [r8, #52]	@ 0x34
 8001fda:	6808      	ldr	r0, [r1, #0]
 8001fdc:	eb02 02c0 	add.w	r2, r2, r0, lsl #3
 8001fe0:	6054      	str	r4, [r2, #4]
 8001fe2:	4620      	mov	r0, r4
 8001fe4:	464a      	mov	r2, r9
 8001fe6:	f009 f8d3 	bl	800b190 <memmove>
 8001fea:	9b00      	ldr	r3, [sp, #0]
 8001fec:	eb04 0109 	add.w	r1, r4, r9
 8001ff0:	459a      	cmp	sl, r3
 8001ff2:	bf08      	it	eq
 8001ff4:	f8d8 3034 	ldreq.w	r3, [r8, #52]	@ 0x34
 8001ff8:	4628      	mov	r0, r5
 8001ffa:	bf04      	itt	eq
 8001ffc:	1b5b      	subeq	r3, r3, r5
 8001ffe:	f8c8 3034 	streq.w	r3, [r8, #52]	@ 0x34
 8002002:	f7ff ff73 	bl	8001eec <_AddFreeMemory>
 8002006:	f1bb 0f00 	cmp.w	fp, #0
 800200a:	d001      	beq.n	8002010 <_RemoveHoles+0x80>
 800200c:	4558      	cmp	r0, fp
 800200e:	d205      	bcs.n	800201c <_RemoveHoles+0x8c>
 8002010:	464d      	mov	r5, r9
 8002012:	442c      	add	r4, r5
 8002014:	42a6      	cmp	r6, r4
 8002016:	d8c4      	bhi.n	8001fa2 <_RemoveHoles+0x12>
 8002018:	2001      	movs	r0, #1
 800201a:	e000      	b.n	800201e <_RemoveHoles+0x8e>
 800201c:	2000      	movs	r0, #0
 800201e:	b003      	add	sp, #12
 8002020:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002024:	20002b28 	.word	0x20002b28

08002028 <GUI_ALLOC_FreeFixedBlock>:
 8002028:	b128      	cbz	r0, 8002036 <GUI_ALLOC_FreeFixedBlock+0xe>
 800202a:	4b03      	ldr	r3, [pc, #12]	@ (8002038 <GUI_ALLOC_FreeFixedBlock+0x10>)
 800202c:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800202e:	6002      	str	r2, [r0, #0]
 8002030:	b102      	cbz	r2, 8002034 <GUI_ALLOC_FreeFixedBlock+0xc>
 8002032:	6050      	str	r0, [r2, #4]
 8002034:	63d8      	str	r0, [r3, #60]	@ 0x3c
 8002036:	4770      	bx	lr
 8002038:	20002b28 	.word	0x20002b28

0800203c <GUI_ALLOC_h2p>:
 800203c:	4b03      	ldr	r3, [pc, #12]	@ (800204c <GUI_ALLOC_h2p+0x10>)
 800203e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002040:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 8002044:	6840      	ldr	r0, [r0, #4]
 8002046:	3008      	adds	r0, #8
 8002048:	4770      	bx	lr
 800204a:	bf00      	nop
 800204c:	20002b28 	.word	0x20002b28

08002050 <GUI_ALLOC_LockH>:
 8002050:	4b05      	ldr	r3, [pc, #20]	@ (8002068 <GUI_ALLOC_LockH+0x18>)
 8002052:	69da      	ldr	r2, [r3, #28]
 8002054:	3201      	adds	r2, #1
 8002056:	61da      	str	r2, [r3, #28]
 8002058:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800205a:	f812 3030 	ldrb.w	r3, [r2, r0, lsl #3]
 800205e:	3301      	adds	r3, #1
 8002060:	f802 3030 	strb.w	r3, [r2, r0, lsl #3]
 8002064:	f7ff bfea 	b.w	800203c <GUI_ALLOC_h2p>
 8002068:	20002b28 	.word	0x20002b28

0800206c <GUI_ALLOC_UnlockH>:
 800206c:	b530      	push	{r4, r5, lr}
 800206e:	6803      	ldr	r3, [r0, #0]
 8002070:	4909      	ldr	r1, [pc, #36]	@ (8002098 <GUI_ALLOC_UnlockH+0x2c>)
 8002072:	f853 5c08 	ldr.w	r5, [r3, #-8]
 8002076:	6b4c      	ldr	r4, [r1, #52]	@ 0x34
 8002078:	f814 3035 	ldrb.w	r3, [r4, r5, lsl #3]
 800207c:	2b01      	cmp	r3, #1
 800207e:	d903      	bls.n	8002088 <GUI_ALLOC_UnlockH+0x1c>
 8002080:	69ca      	ldr	r2, [r1, #28]
 8002082:	b10a      	cbz	r2, 8002088 <GUI_ALLOC_UnlockH+0x1c>
 8002084:	3a01      	subs	r2, #1
 8002086:	61ca      	str	r2, [r1, #28]
 8002088:	3b01      	subs	r3, #1
 800208a:	f804 3035 	strb.w	r3, [r4, r5, lsl #3]
 800208e:	2300      	movs	r3, #0
 8002090:	6003      	str	r3, [r0, #0]
 8002092:	4618      	mov	r0, r3
 8002094:	bd30      	pop	{r4, r5, pc}
 8002096:	bf00      	nop
 8002098:	20002b28 	.word	0x20002b28

0800209c <GUI_ALLOC_AssignMemory>:
 800209c:	4b02      	ldr	r3, [pc, #8]	@ (80020a8 <GUI_ALLOC_AssignMemory+0xc>)
 800209e:	f021 0103 	bic.w	r1, r1, #3
 80020a2:	6018      	str	r0, [r3, #0]
 80020a4:	6059      	str	r1, [r3, #4]
 80020a6:	4770      	bx	lr
 80020a8:	200000e8 	.word	0x200000e8

080020ac <GUI_ALLOC_GetSize>:
 80020ac:	b130      	cbz	r0, 80020bc <GUI_ALLOC_GetSize+0x10>
 80020ae:	4b04      	ldr	r3, [pc, #16]	@ (80020c0 <GUI_ALLOC_GetSize+0x14>)
 80020b0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80020b2:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 80020b6:	6843      	ldr	r3, [r0, #4]
 80020b8:	6858      	ldr	r0, [r3, #4]
 80020ba:	380c      	subs	r0, #12
 80020bc:	4770      	bx	lr
 80020be:	bf00      	nop
 80020c0:	20002b28 	.word	0x20002b28

080020c4 <GUI_ALLOC_Free>:
 80020c4:	b510      	push	{r4, lr}
 80020c6:	4604      	mov	r4, r0
 80020c8:	b160      	cbz	r0, 80020e4 <GUI_ALLOC_Free+0x20>
 80020ca:	4b07      	ldr	r3, [pc, #28]	@ (80020e8 <GUI_ALLOC_Free+0x24>)
 80020cc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80020ce:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
 80020d2:	6859      	ldr	r1, [r3, #4]
 80020d4:	6848      	ldr	r0, [r1, #4]
 80020d6:	f7ff ff09 	bl	8001eec <_AddFreeMemory>
 80020da:	4620      	mov	r0, r4
 80020dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80020e0:	f7ff bed2 	b.w	8001e88 <_PushFreeBlock>
 80020e4:	bd10      	pop	{r4, pc}
 80020e6:	bf00      	nop
 80020e8:	20002b28 	.word	0x20002b28

080020ec <_EnlargeBlocks>:
 80020ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80020f0:	4c22      	ldr	r4, [pc, #136]	@ (800217c <_EnlargeBlocks+0x90>)
 80020f2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80020f4:	b93b      	cbnz	r3, 8002106 <_EnlargeBlocks+0x1a>
 80020f6:	4b22      	ldr	r3, [pc, #136]	@ (8002180 <_EnlargeBlocks+0x94>)
 80020f8:	689d      	ldr	r5, [r3, #8]
 80020fa:	685b      	ldr	r3, [r3, #4]
 80020fc:	3508      	adds	r5, #8
 80020fe:	fbb3 f5f5 	udiv	r5, r3, r5
 8002102:	3502      	adds	r5, #2
 8002104:	e003      	b.n	800210e <_EnlargeBlocks+0x22>
 8002106:	6923      	ldr	r3, [r4, #16]
 8002108:	1d1d      	adds	r5, r3, #4
 800210a:	eb05 05d3 	add.w	r5, r5, r3, lsr #3
 800210e:	00e8      	lsls	r0, r5, #3
 8002110:	f000 f8f4 	bl	80022fc <_Alloc>
 8002114:	4680      	mov	r8, r0
 8002116:	b360      	cbz	r0, 8002172 <_EnlargeBlocks+0x86>
 8002118:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800211a:	6922      	ldr	r2, [r4, #16]
 800211c:	eb01 03c0 	add.w	r3, r1, r0, lsl #3
 8002120:	685e      	ldr	r6, [r3, #4]
 8002122:	4b18      	ldr	r3, [pc, #96]	@ (8002184 <_EnlargeBlocks+0x98>)
 8002124:	3608      	adds	r6, #8
 8002126:	681b      	ldr	r3, [r3, #0]
 8002128:	00d2      	lsls	r2, r2, #3
 800212a:	4630      	mov	r0, r6
 800212c:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800212e:	4798      	blx	r3
 8002130:	6922      	ldr	r2, [r4, #16]
 8002132:	6366      	str	r6, [r4, #52]	@ 0x34
 8002134:	4613      	mov	r3, r2
 8002136:	f8c4 802c 	str.w	r8, [r4, #44]	@ 0x2c
 800213a:	1e69      	subs	r1, r5, #1
 800213c:	428b      	cmp	r3, r1
 800213e:	d205      	bcs.n	800214c <_EnlargeBlocks+0x60>
 8002140:	3301      	adds	r3, #1
 8002142:	eb06 00c3 	add.w	r0, r6, r3, lsl #3
 8002146:	f840 3c04 	str.w	r3, [r0, #-4]
 800214a:	e7f7      	b.n	800213c <_EnlargeBlocks+0x50>
 800214c:	eb06 06c3 	add.w	r6, r6, r3, lsl #3
 8002150:	f04f 0800 	mov.w	r8, #0
 8002154:	f8c6 8004 	str.w	r8, [r6, #4]
 8002158:	6863      	ldr	r3, [r4, #4]
 800215a:	6262      	str	r2, [r4, #36]	@ 0x24
 800215c:	1a9b      	subs	r3, r3, r2
 800215e:	442b      	add	r3, r5
 8002160:	6063      	str	r3, [r4, #4]
 8002162:	6125      	str	r5, [r4, #16]
 8002164:	4638      	mov	r0, r7
 8002166:	b13f      	cbz	r7, 8002178 <_EnlargeBlocks+0x8c>
 8002168:	f7ff ffac 	bl	80020c4 <GUI_ALLOC_Free>
 800216c:	4640      	mov	r0, r8
 800216e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002172:	2001      	movs	r0, #1
 8002174:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002178:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800217c:	20002b28 	.word	0x20002b28
 8002180:	200000e8 	.word	0x200000e8
 8002184:	20000020 	.word	0x20000020

08002188 <_InitOnce>:
 8002188:	b570      	push	{r4, r5, r6, lr}
 800218a:	4a17      	ldr	r2, [pc, #92]	@ (80021e8 <_InitOnce+0x60>)
 800218c:	f892 3028 	ldrb.w	r3, [r2, #40]	@ 0x28
 8002190:	bb43      	cbnz	r3, 80021e4 <_InitOnce+0x5c>
 8002192:	2301      	movs	r3, #1
 8002194:	f882 3028 	strb.w	r3, [r2, #40]	@ 0x28
 8002198:	4b14      	ldr	r3, [pc, #80]	@ (80021ec <_InitOnce+0x64>)
 800219a:	6899      	ldr	r1, [r3, #8]
 800219c:	b911      	cbnz	r1, 80021a4 <_InitOnce+0x1c>
 800219e:	6859      	ldr	r1, [r3, #4]
 80021a0:	0889      	lsrs	r1, r1, #2
 80021a2:	6099      	str	r1, [r3, #8]
 80021a4:	215a      	movs	r1, #90	@ 0x5a
 80021a6:	6211      	str	r1, [r2, #32]
 80021a8:	2610      	movs	r6, #16
 80021aa:	2100      	movs	r1, #0
 80021ac:	eb02 00c1 	add.w	r0, r2, r1, lsl #3
 80021b0:	fa06 f501 	lsl.w	r5, r6, r1
 80021b4:	3101      	adds	r1, #1
 80021b6:	2910      	cmp	r1, #16
 80021b8:	4c0b      	ldr	r4, [pc, #44]	@ (80021e8 <_InitOnce+0x60>)
 80021ba:	6405      	str	r5, [r0, #64]	@ 0x40
 80021bc:	d1f6      	bne.n	80021ac <_InitOnce+0x24>
 80021be:	6858      	ldr	r0, [r3, #4]
 80021c0:	6819      	ldr	r1, [r3, #0]
 80021c2:	2302      	movs	r3, #2
 80021c4:	6123      	str	r3, [r4, #16]
 80021c6:	f1a0 0314 	sub.w	r3, r0, #20
 80021ca:	440b      	add	r3, r1
 80021cc:	2501      	movs	r5, #1
 80021ce:	6363      	str	r3, [r4, #52]	@ 0x34
 80021d0:	63a1      	str	r1, [r4, #56]	@ 0x38
 80021d2:	60e0      	str	r0, [r4, #12]
 80021d4:	605d      	str	r5, [r3, #4]
 80021d6:	6265      	str	r5, [r4, #36]	@ 0x24
 80021d8:	6065      	str	r5, [r4, #4]
 80021da:	f7ff fe87 	bl	8001eec <_AddFreeMemory>
 80021de:	f7ff ff85 	bl	80020ec <_EnlargeBlocks>
 80021e2:	6325      	str	r5, [r4, #48]	@ 0x30
 80021e4:	bd70      	pop	{r4, r5, r6, pc}
 80021e6:	bf00      	nop
 80021e8:	20002b28 	.word	0x20002b28
 80021ec:	200000e8 	.word	0x200000e8

080021f0 <GUI_ALLOC_GetFixedBlock>:
 80021f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80021f4:	4607      	mov	r7, r0
 80021f6:	4e26      	ldr	r6, [pc, #152]	@ (8002290 <GUI_ALLOC_GetFixedBlock+0xa0>)
 80021f8:	3703      	adds	r7, #3
 80021fa:	f7ff ffc5 	bl	8002188 <_InitOnce>
 80021fe:	f027 0703 	bic.w	r7, r7, #3
 8002202:	6c30      	ldr	r0, [r6, #64]	@ 0x40
 8002204:	3704      	adds	r7, #4
 8002206:	6bf2      	ldr	r2, [r6, #60]	@ 0x3c
 8002208:	4287      	cmp	r7, r0
 800220a:	bf38      	it	cc
 800220c:	4607      	movcc	r7, r0
 800220e:	4614      	mov	r4, r2
 8002210:	b134      	cbz	r4, 8002220 <GUI_ALLOC_GetFixedBlock+0x30>
 8002212:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8002216:	429f      	cmp	r7, r3
 8002218:	6823      	ldr	r3, [r4, #0]
 800221a:	d02c      	beq.n	8002276 <GUI_ALLOC_GetFixedBlock+0x86>
 800221c:	461c      	mov	r4, r3
 800221e:	e7f7      	b.n	8002210 <GUI_ALLOC_GetFixedBlock+0x20>
 8002220:	68f3      	ldr	r3, [r6, #12]
 8002222:	6bb2      	ldr	r2, [r6, #56]	@ 0x38
 8002224:	eb02 0803 	add.w	r8, r2, r3
 8002228:	f858 5c04 	ldr.w	r5, [r8, #-4]
 800222c:	ebc5 0508 	rsb	r5, r5, r8
 8002230:	682b      	ldr	r3, [r5, #0]
 8002232:	b133      	cbz	r3, 8002242 <GUI_ALLOC_GetFixedBlock+0x52>
 8002234:	4620      	mov	r0, r4
 8002236:	f7ff feab 	bl	8001f90 <_RemoveHoles>
 800223a:	f858 5c04 	ldr.w	r5, [r8, #-4]
 800223e:	ebc5 0508 	rsb	r5, r5, r8
 8002242:	682b      	ldr	r3, [r5, #0]
 8002244:	bb0b      	cbnz	r3, 800228a <GUI_ALLOC_GetFixedBlock+0x9a>
 8002246:	686b      	ldr	r3, [r5, #4]
 8002248:	429f      	cmp	r7, r3
 800224a:	dc1e      	bgt.n	800228a <GUI_ALLOC_GetFixedBlock+0x9a>
 800224c:	4628      	mov	r0, r5
 800224e:	1d1c      	adds	r4, r3, #4
 8002250:	f7ff fe2c 	bl	8001eac <_RemoveFreeBlock>
 8002254:	68f3      	ldr	r3, [r6, #12]
 8002256:	6868      	ldr	r0, [r5, #4]
 8002258:	1bdb      	subs	r3, r3, r7
 800225a:	60f3      	str	r3, [r6, #12]
 800225c:	6973      	ldr	r3, [r6, #20]
 800225e:	1be4      	subs	r4, r4, r7
 8002260:	443b      	add	r3, r7
 8002262:	1bc0      	subs	r0, r0, r7
 8002264:	442c      	add	r4, r5
 8002266:	6173      	str	r3, [r6, #20]
 8002268:	d002      	beq.n	8002270 <GUI_ALLOC_GetFixedBlock+0x80>
 800226a:	4629      	mov	r1, r5
 800226c:	f7ff fe3e 	bl	8001eec <_AddFreeMemory>
 8002270:	f844 7c04 	str.w	r7, [r4, #-4]
 8002274:	e009      	b.n	800228a <GUI_ALLOC_GetFixedBlock+0x9a>
 8002276:	b10b      	cbz	r3, 800227c <GUI_ALLOC_GetFixedBlock+0x8c>
 8002278:	6861      	ldr	r1, [r4, #4]
 800227a:	6059      	str	r1, [r3, #4]
 800227c:	6861      	ldr	r1, [r4, #4]
 800227e:	b101      	cbz	r1, 8002282 <GUI_ALLOC_GetFixedBlock+0x92>
 8002280:	600b      	str	r3, [r1, #0]
 8002282:	42a2      	cmp	r2, r4
 8002284:	d101      	bne.n	800228a <GUI_ALLOC_GetFixedBlock+0x9a>
 8002286:	6823      	ldr	r3, [r4, #0]
 8002288:	63f3      	str	r3, [r6, #60]	@ 0x3c
 800228a:	4620      	mov	r0, r4
 800228c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002290:	20002b28 	.word	0x20002b28

08002294 <GUI_ALLOC_GetMaxSize>:
 8002294:	b508      	push	{r3, lr}
 8002296:	f7ff ff77 	bl	8002188 <_InitOnce>
 800229a:	4a0c      	ldr	r2, [pc, #48]	@ (80022cc <GUI_ALLOC_GetMaxSize+0x38>)
 800229c:	2300      	movs	r3, #0
 800229e:	1899      	adds	r1, r3, r2
 80022a0:	f8d1 00bc 	ldr.w	r0, [r1, #188]	@ 0xbc
 80022a4:	b110      	cbz	r0, 80022ac <GUI_ALLOC_GetMaxSize+0x18>
 80022a6:	6883      	ldr	r3, [r0, #8]
 80022a8:	2000      	movs	r0, #0
 80022aa:	e00b      	b.n	80022c4 <GUI_ALLOC_GetMaxSize+0x30>
 80022ac:	3b08      	subs	r3, #8
 80022ae:	f113 0f80 	cmn.w	r3, #128	@ 0x80
 80022b2:	d1f4      	bne.n	800229e <GUI_ALLOC_GetMaxSize+0xa>
 80022b4:	e008      	b.n	80022c8 <GUI_ALLOC_GetMaxSize+0x34>
 80022b6:	685a      	ldr	r2, [r3, #4]
 80022b8:	689b      	ldr	r3, [r3, #8]
 80022ba:	4290      	cmp	r0, r2
 80022bc:	bf38      	it	cc
 80022be:	4610      	movcc	r0, r2
 80022c0:	b113      	cbz	r3, 80022c8 <GUI_ALLOC_GetMaxSize+0x34>
 80022c2:	689b      	ldr	r3, [r3, #8]
 80022c4:	2b00      	cmp	r3, #0
 80022c6:	d1f6      	bne.n	80022b6 <GUI_ALLOC_GetMaxSize+0x22>
 80022c8:	380c      	subs	r0, #12
 80022ca:	bd08      	pop	{r3, pc}
 80022cc:	20002b28 	.word	0x20002b28

080022d0 <GUI_ALLOC_RequestSize>:
 80022d0:	b508      	push	{r3, lr}
 80022d2:	f7ff ffdf 	bl	8002294 <GUI_ALLOC_GetMaxSize>
 80022d6:	2264      	movs	r2, #100	@ 0x64
 80022d8:	f5b0 0f80 	cmp.w	r0, #4194304	@ 0x400000
 80022dc:	bf88      	it	hi
 80022de:	fb90 f0f2 	sdivhi	r0, r0, r2
 80022e2:	4b05      	ldr	r3, [pc, #20]	@ (80022f8 <GUI_ALLOC_RequestSize+0x28>)
 80022e4:	bf8b      	itete	hi
 80022e6:	6a1b      	ldrhi	r3, [r3, #32]
 80022e8:	6a1b      	ldrls	r3, [r3, #32]
 80022ea:	4358      	mulhi	r0, r3
 80022ec:	4358      	mulls	r0, r3
 80022ee:	bf98      	it	ls
 80022f0:	fbb0 f0f2 	udivls	r0, r0, r2
 80022f4:	bd08      	pop	{r3, pc}
 80022f6:	bf00      	nop
 80022f8:	20002b28 	.word	0x20002b28

080022fc <_Alloc>:
 80022fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002300:	4604      	mov	r4, r0
 8002302:	4e39      	ldr	r6, [pc, #228]	@ (80023e8 <_Alloc+0xec>)
 8002304:	f7ff ff40 	bl	8002188 <_InitOnce>
 8002308:	6c35      	ldr	r5, [r6, #64]	@ 0x40
 800230a:	6833      	ldr	r3, [r6, #0]
 800230c:	42ac      	cmp	r4, r5
 800230e:	bf24      	itt	cs
 8002310:	3403      	addcs	r4, #3
 8002312:	f024 0503 	biccs.w	r5, r4, #3
 8002316:	350c      	adds	r5, #12
 8002318:	42ab      	cmp	r3, r5
 800231a:	4c33      	ldr	r4, [pc, #204]	@ (80023e8 <_Alloc+0xec>)
 800231c:	d33e      	bcc.n	800239c <_Alloc+0xa0>
 800231e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002320:	6862      	ldr	r2, [r4, #4]
 8002322:	429a      	cmp	r2, r3
 8002324:	d90f      	bls.n	8002346 <_Alloc+0x4a>
 8002326:	6873      	ldr	r3, [r6, #4]
 8002328:	6a77      	ldr	r7, [r6, #36]	@ 0x24
 800232a:	3b01      	subs	r3, #1
 800232c:	6073      	str	r3, [r6, #4]
 800232e:	6b73      	ldr	r3, [r6, #52]	@ 0x34
 8002330:	ea4f 08c7 	mov.w	r8, r7, lsl #3
 8002334:	eb03 0208 	add.w	r2, r3, r8
 8002338:	6852      	ldr	r2, [r2, #4]
 800233a:	6272      	str	r2, [r6, #36]	@ 0x24
 800233c:	2201      	movs	r2, #1
 800233e:	f803 2037 	strb.w	r2, [r3, r7, lsl #3]
 8002342:	b957      	cbnz	r7, 800235a <_Alloc+0x5e>
 8002344:	e02a      	b.n	800239c <_Alloc+0xa0>
 8002346:	3b01      	subs	r3, #1
 8002348:	6323      	str	r3, [r4, #48]	@ 0x30
 800234a:	f7ff fecf 	bl	80020ec <_EnlargeBlocks>
 800234e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002350:	3301      	adds	r3, #1
 8002352:	6323      	str	r3, [r4, #48]	@ 0x30
 8002354:	2800      	cmp	r0, #0
 8002356:	d0e6      	beq.n	8002326 <_Alloc+0x2a>
 8002358:	e020      	b.n	800239c <_Alloc+0xa0>
 800235a:	230f      	movs	r3, #15
 800235c:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8002360:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 8002362:	4295      	cmp	r5, r2
 8002364:	d20c      	bcs.n	8002380 <_Alloc+0x84>
 8002366:	f113 33ff 	adds.w	r3, r3, #4294967295
 800236a:	d2f7      	bcs.n	800235c <_Alloc+0x60>
 800236c:	e008      	b.n	8002380 <_Alloc+0x84>
 800236e:	6894      	ldr	r4, [r2, #8]
 8002370:	b12c      	cbz	r4, 800237e <_Alloc+0x82>
 8002372:	6862      	ldr	r2, [r4, #4]
 8002374:	4295      	cmp	r5, r2
 8002376:	d914      	bls.n	80023a2 <_Alloc+0xa6>
 8002378:	68a2      	ldr	r2, [r4, #8]
 800237a:	2a00      	cmp	r2, #0
 800237c:	d1f7      	bne.n	800236e <_Alloc+0x72>
 800237e:	3301      	adds	r3, #1
 8002380:	2b0f      	cmp	r3, #15
 8002382:	d803      	bhi.n	800238c <_Alloc+0x90>
 8002384:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8002388:	6c52      	ldr	r2, [r2, #68]	@ 0x44
 800238a:	e7f6      	b.n	800237a <_Alloc+0x7e>
 800238c:	4628      	mov	r0, r5
 800238e:	f7ff fdff 	bl	8001f90 <_RemoveHoles>
 8002392:	2800      	cmp	r0, #0
 8002394:	d0e1      	beq.n	800235a <_Alloc+0x5e>
 8002396:	4638      	mov	r0, r7
 8002398:	f7ff fd76 	bl	8001e88 <_PushFreeBlock>
 800239c:	2000      	movs	r0, #0
 800239e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80023a2:	f8d4 9004 	ldr.w	r9, [r4, #4]
 80023a6:	6c33      	ldr	r3, [r6, #64]	@ 0x40
 80023a8:	ebc5 0209 	rsb	r2, r5, r9
 80023ac:	330c      	adds	r3, #12
 80023ae:	429a      	cmp	r2, r3
 80023b0:	bf38      	it	cc
 80023b2:	464d      	movcc	r5, r9
 80023b4:	4620      	mov	r0, r4
 80023b6:	f7ff fd79 	bl	8001eac <_RemoveFreeBlock>
 80023ba:	6b73      	ldr	r3, [r6, #52]	@ 0x34
 80023bc:	1961      	adds	r1, r4, r5
 80023be:	4498      	add	r8, r3
 80023c0:	454d      	cmp	r5, r9
 80023c2:	f04f 0300 	mov.w	r3, #0
 80023c6:	f8c8 4004 	str.w	r4, [r8, #4]
 80023ca:	6027      	str	r7, [r4, #0]
 80023cc:	6065      	str	r5, [r4, #4]
 80023ce:	60a3      	str	r3, [r4, #8]
 80023d0:	6124      	str	r4, [r4, #16]
 80023d2:	f841 5c04 	str.w	r5, [r1, #-4]
 80023d6:	da03      	bge.n	80023e0 <_Alloc+0xe4>
 80023d8:	ebc5 0009 	rsb	r0, r5, r9
 80023dc:	f7ff fd86 	bl	8001eec <_AddFreeMemory>
 80023e0:	4638      	mov	r0, r7
 80023e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80023e6:	bf00      	nop
 80023e8:	20002b28 	.word	0x20002b28

080023ec <GUI_ALLOC_AllocNoInit>:
 80023ec:	b108      	cbz	r0, 80023f2 <GUI_ALLOC_AllocNoInit+0x6>
 80023ee:	f7ff bf85 	b.w	80022fc <_Alloc>
 80023f2:	4770      	bx	lr

080023f4 <GUI_ALLOC_FreePtr>:
 80023f4:	b510      	push	{r4, lr}
 80023f6:	4604      	mov	r4, r0
 80023f8:	6800      	ldr	r0, [r0, #0]
 80023fa:	f7ff fe63 	bl	80020c4 <GUI_ALLOC_Free>
 80023fe:	2300      	movs	r3, #0
 8002400:	6023      	str	r3, [r4, #0]
 8002402:	bd10      	pop	{r4, pc}

08002404 <GUI_ALLOC_AllocZero>:
 8002404:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8002406:	4606      	mov	r6, r0
 8002408:	f7ff fff0 	bl	80023ec <GUI_ALLOC_AllocNoInit>
 800240c:	4605      	mov	r5, r0
 800240e:	b160      	cbz	r0, 800242a <GUI_ALLOC_AllocZero+0x26>
 8002410:	f7ff fe1e 	bl	8002050 <GUI_ALLOC_LockH>
 8002414:	4b06      	ldr	r3, [pc, #24]	@ (8002430 <GUI_ALLOC_AllocZero+0x2c>)
 8002416:	ac02      	add	r4, sp, #8
 8002418:	f844 0d04 	str.w	r0, [r4, #-4]!
 800241c:	681b      	ldr	r3, [r3, #0]
 800241e:	4632      	mov	r2, r6
 8002420:	2100      	movs	r1, #0
 8002422:	4798      	blx	r3
 8002424:	4620      	mov	r0, r4
 8002426:	f7ff fe21 	bl	800206c <GUI_ALLOC_UnlockH>
 800242a:	4628      	mov	r0, r5
 800242c:	b002      	add	sp, #8
 800242e:	bd70      	pop	{r4, r5, r6, pc}
 8002430:	20000024 	.word	0x20000024

08002434 <GUI_ALLOC_Realloc>:
 8002434:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8002436:	4604      	mov	r4, r0
 8002438:	4608      	mov	r0, r1
 800243a:	460d      	mov	r5, r1
 800243c:	f7ff ffd6 	bl	80023ec <GUI_ALLOC_AllocNoInit>
 8002440:	4606      	mov	r6, r0
 8002442:	b1f8      	cbz	r0, 8002484 <GUI_ALLOC_Realloc+0x50>
 8002444:	b1f4      	cbz	r4, 8002484 <GUI_ALLOC_Realloc+0x50>
 8002446:	4620      	mov	r0, r4
 8002448:	f7ff fe30 	bl	80020ac <GUI_ALLOC_GetSize>
 800244c:	4285      	cmp	r5, r0
 800244e:	bfa8      	it	ge
 8002450:	4605      	movge	r5, r0
 8002452:	4630      	mov	r0, r6
 8002454:	f7ff fdfc 	bl	8002050 <GUI_ALLOC_LockH>
 8002458:	9000      	str	r0, [sp, #0]
 800245a:	4620      	mov	r0, r4
 800245c:	f7ff fdf8 	bl	8002050 <GUI_ALLOC_LockH>
 8002460:	462a      	mov	r2, r5
 8002462:	4b0a      	ldr	r3, [pc, #40]	@ (800248c <GUI_ALLOC_Realloc+0x58>)
 8002464:	ad02      	add	r5, sp, #8
 8002466:	4601      	mov	r1, r0
 8002468:	9001      	str	r0, [sp, #4]
 800246a:	f855 0d08 	ldr.w	r0, [r5, #-8]!
 800246e:	681b      	ldr	r3, [r3, #0]
 8002470:	4798      	blx	r3
 8002472:	4628      	mov	r0, r5
 8002474:	f7ff fdfa 	bl	800206c <GUI_ALLOC_UnlockH>
 8002478:	a801      	add	r0, sp, #4
 800247a:	f7ff fdf7 	bl	800206c <GUI_ALLOC_UnlockH>
 800247e:	4620      	mov	r0, r4
 8002480:	f7ff fe20 	bl	80020c4 <GUI_ALLOC_Free>
 8002484:	4630      	mov	r0, r6
 8002486:	b002      	add	sp, #8
 8002488:	bd70      	pop	{r4, r5, r6, pc}
 800248a:	bf00      	nop
 800248c:	20000020 	.word	0x20000020

08002490 <GUI__GetFontSizeY>:
 8002490:	4b03      	ldr	r3, [pc, #12]	@ (80024a0 <GUI__GetFontSizeY+0x10>)
 8002492:	681b      	ldr	r3, [r3, #0]
 8002494:	69db      	ldr	r3, [r3, #28]
 8002496:	7e1a      	ldrb	r2, [r3, #24]
 8002498:	7ed8      	ldrb	r0, [r3, #27]
 800249a:	4350      	muls	r0, r2
 800249c:	4770      	bx	lr
 800249e:	bf00      	nop
 80024a0:	20000014 	.word	0x20000014

080024a4 <GUI_Long2Len>:
 80024a4:	b530      	push	{r4, r5, lr}
 80024a6:	ea80 71e0 	eor.w	r1, r0, r0, asr #31
 80024aa:	4c09      	ldr	r4, [pc, #36]	@ (80024d0 <GUI_Long2Len+0x2c>)
 80024ac:	eba1 71e0 	sub.w	r1, r1, r0, asr #31
 80024b0:	2200      	movs	r2, #0
 80024b2:	1c53      	adds	r3, r2, #1
 80024b4:	2b0a      	cmp	r3, #10
 80024b6:	d005      	beq.n	80024c4 <GUI_Long2Len+0x20>
 80024b8:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
 80024bc:	428d      	cmp	r5, r1
 80024be:	d801      	bhi.n	80024c4 <GUI_Long2Len+0x20>
 80024c0:	461a      	mov	r2, r3
 80024c2:	e7f6      	b.n	80024b2 <GUI_Long2Len+0xe>
 80024c4:	2800      	cmp	r0, #0
 80024c6:	bfb8      	it	lt
 80024c8:	1c93      	addlt	r3, r2, #2
 80024ca:	4618      	mov	r0, r3
 80024cc:	bd30      	pop	{r4, r5, pc}
 80024ce:	bf00      	nop
 80024d0:	0800b278 	.word	0x0800b278

080024d4 <GUI_AddDecShift>:
 80024d4:	f1b0 4f00 	cmp.w	r0, #2147483648	@ 0x80000000
 80024d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80024da:	681c      	ldr	r4, [r3, #0]
 80024dc:	d109      	bne.n	80024f2 <GUI_AddDecShift+0x1e>
 80024de:	1c60      	adds	r0, r4, #1
 80024e0:	6018      	str	r0, [r3, #0]
 80024e2:	3901      	subs	r1, #1
 80024e4:	202d      	movs	r0, #45	@ 0x2d
 80024e6:	7020      	strb	r0, [r4, #0]
 80024e8:	b2c9      	uxtb	r1, r1
 80024ea:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 80024ee:	2601      	movs	r6, #1
 80024f0:	e00e      	b.n	8002510 <GUI_AddDecShift+0x3c>
 80024f2:	2800      	cmp	r0, #0
 80024f4:	bfbf      	itttt	lt
 80024f6:	1c65      	addlt	r5, r4, #1
 80024f8:	601d      	strlt	r5, [r3, #0]
 80024fa:	252d      	movlt	r5, #45	@ 0x2d
 80024fc:	7025      	strblt	r5, [r4, #0]
 80024fe:	bfac      	ite	ge
 8002500:	2400      	movge	r4, #0
 8002502:	2401      	movlt	r4, #1
 8002504:	eba1 0104 	sub.w	r1, r1, r4
 8002508:	bfb8      	it	lt
 800250a:	4240      	neglt	r0, r0
 800250c:	b2c9      	uxtb	r1, r1
 800250e:	2600      	movs	r6, #0
 8002510:	b10a      	cbz	r2, 8002516 <GUI_AddDecShift+0x42>
 8002512:	3901      	subs	r1, #1
 8002514:	b2c9      	uxtb	r1, r1
 8002516:	f8df e058 	ldr.w	lr, [pc, #88]	@ 8002570 <GUI_AddDecShift+0x9c>
 800251a:	f8df c058 	ldr.w	ip, [pc, #88]	@ 8002574 <GUI_AddDecShift+0xa0>
 800251e:	b181      	cbz	r1, 8002542 <GUI_AddDecShift+0x6e>
 8002520:	1e4d      	subs	r5, r1, #1
 8002522:	4291      	cmp	r1, r2
 8002524:	b2ed      	uxtb	r5, r5
 8002526:	d105      	bne.n	8002534 <GUI_AddDecShift+0x60>
 8002528:	681c      	ldr	r4, [r3, #0]
 800252a:	1c67      	adds	r7, r4, #1
 800252c:	601f      	str	r7, [r3, #0]
 800252e:	f89e 7000 	ldrb.w	r7, [lr]
 8002532:	7027      	strb	r7, [r4, #0]
 8002534:	f85c 7025 	ldr.w	r7, [ip, r5, lsl #2]
 8002538:	fb90 f4f7 	sdiv	r4, r0, r7
 800253c:	b2e4      	uxtb	r4, r4
 800253e:	2c0a      	cmp	r4, #10
 8002540:	d903      	bls.n	800254a <GUI_AddDecShift+0x76>
 8002542:	681b      	ldr	r3, [r3, #0]
 8002544:	2200      	movs	r2, #0
 8002546:	701a      	strb	r2, [r3, #0]
 8002548:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800254a:	fb07 0014 	mls	r0, r7, r4, r0
 800254e:	b915      	cbnz	r5, 8002556 <GUI_AddDecShift+0x82>
 8002550:	b10e      	cbz	r6, 8002556 <GUI_AddDecShift+0x82>
 8002552:	3401      	adds	r4, #1
 8002554:	b2e4      	uxtb	r4, r4
 8002556:	2c0a      	cmp	r4, #10
 8002558:	bf08      	it	eq
 800255a:	460d      	moveq	r5, r1
 800255c:	6819      	ldr	r1, [r3, #0]
 800255e:	bf08      	it	eq
 8002560:	2401      	moveq	r4, #1
 8002562:	1c4f      	adds	r7, r1, #1
 8002564:	3430      	adds	r4, #48	@ 0x30
 8002566:	601f      	str	r7, [r3, #0]
 8002568:	700c      	strb	r4, [r1, #0]
 800256a:	4629      	mov	r1, r5
 800256c:	e7d7      	b.n	800251e <GUI_AddDecShift+0x4a>
 800256e:	bf00      	nop
 8002570:	20002bf0 	.word	0x20002bf0
 8002574:	0800b278 	.word	0x0800b278

08002578 <GUI_CalcColorDist>:
 8002578:	b2c3      	uxtb	r3, r0
 800257a:	b2ca      	uxtb	r2, r1
 800257c:	1a9a      	subs	r2, r3, r2
 800257e:	b292      	uxth	r2, r2
 8002580:	b510      	push	{r4, lr}
 8002582:	b214      	sxth	r4, r2
 8002584:	2c00      	cmp	r4, #0
 8002586:	bfbc      	itt	lt
 8002588:	4252      	neglt	r2, r2
 800258a:	b214      	sxthlt	r4, r2
 800258c:	fb04 f204 	mul.w	r2, r4, r4
 8002590:	f3c0 2307 	ubfx	r3, r0, #8, #8
 8002594:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8002598:	1b1b      	subs	r3, r3, r4
 800259a:	b29b      	uxth	r3, r3
 800259c:	b21c      	sxth	r4, r3
 800259e:	0c09      	lsrs	r1, r1, #16
 80025a0:	2c00      	cmp	r4, #0
 80025a2:	ebc1 4110 	rsb	r1, r1, r0, lsr #16
 80025a6:	bfb8      	it	lt
 80025a8:	425b      	neglt	r3, r3
 80025aa:	b289      	uxth	r1, r1
 80025ac:	b208      	sxth	r0, r1
 80025ae:	bfb8      	it	lt
 80025b0:	b21c      	sxthlt	r4, r3
 80025b2:	fb04 2304 	mla	r3, r4, r4, r2
 80025b6:	2800      	cmp	r0, #0
 80025b8:	bfbc      	itt	lt
 80025ba:	4249      	neglt	r1, r1
 80025bc:	b208      	sxthlt	r0, r1
 80025be:	b280      	uxth	r0, r0
 80025c0:	fb00 3000 	mla	r0, r0, r0, r3
 80025c4:	bd10      	pop	{r4, pc}

080025c6 <GUI_GetColor>:
 80025c6:	b508      	push	{r3, lr}
 80025c8:	f001 f924 	bl	8003814 <LCD_GetColorIndex>
 80025cc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80025d0:	f001 b826 	b.w	8003620 <LCD_Index2Color>

080025d4 <GUI_GetFontSizeY>:
 80025d4:	f7ff bf5c 	b.w	8002490 <GUI__GetFontSizeY>

080025d8 <GUI_GetOrg>:
 80025d8:	4b04      	ldr	r3, [pc, #16]	@ (80025ec <GUI_GetOrg+0x14>)
 80025da:	f9b3 3000 	ldrsh.w	r3, [r3]
 80025de:	6003      	str	r3, [r0, #0]
 80025e0:	4b03      	ldr	r3, [pc, #12]	@ (80025f0 <GUI_GetOrg+0x18>)
 80025e2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80025e6:	600b      	str	r3, [r1, #0]
 80025e8:	4770      	bx	lr
 80025ea:	bf00      	nop
 80025ec:	20002c10 	.word	0x20002c10
 80025f0:	20002c00 	.word	0x20002c00

080025f4 <GUI_GetVersionString>:
 80025f4:	4804      	ldr	r0, [pc, #16]	@ (8002608 <GUI_GetVersionString+0x14>)
 80025f6:	2335      	movs	r3, #53	@ 0x35
 80025f8:	7003      	strb	r3, [r0, #0]
 80025fa:	2334      	movs	r3, #52	@ 0x34
 80025fc:	7083      	strb	r3, [r0, #2]
 80025fe:	70c3      	strb	r3, [r0, #3]
 8002600:	2361      	movs	r3, #97	@ 0x61
 8002602:	7103      	strb	r3, [r0, #4]
 8002604:	4770      	bx	lr
 8002606:	bf00      	nop
 8002608:	20000000 	.word	0x20000000

0800260c <GUI_MergeRect>:
 800260c:	b510      	push	{r4, lr}
 800260e:	b338      	cbz	r0, 8002660 <GUI_MergeRect+0x54>
 8002610:	b309      	cbz	r1, 8002656 <GUI_MergeRect+0x4a>
 8002612:	b30a      	cbz	r2, 8002658 <GUI_MergeRect+0x4c>
 8002614:	f9b2 4000 	ldrsh.w	r4, [r2]
 8002618:	f9b1 3000 	ldrsh.w	r3, [r1]
 800261c:	42a3      	cmp	r3, r4
 800261e:	bfa8      	it	ge
 8002620:	4623      	movge	r3, r4
 8002622:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8002626:	8003      	strh	r3, [r0, #0]
 8002628:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800262c:	42a3      	cmp	r3, r4
 800262e:	bfa8      	it	ge
 8002630:	4623      	movge	r3, r4
 8002632:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 8002636:	8043      	strh	r3, [r0, #2]
 8002638:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800263c:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8002640:	42a3      	cmp	r3, r4
 8002642:	bfb8      	it	lt
 8002644:	4623      	movlt	r3, r4
 8002646:	8083      	strh	r3, [r0, #4]
 8002648:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800264c:	4293      	cmp	r3, r2
 800264e:	bfb8      	it	lt
 8002650:	4613      	movlt	r3, r2
 8002652:	80c3      	strh	r3, [r0, #6]
 8002654:	bd10      	pop	{r4, pc}
 8002656:	4611      	mov	r1, r2
 8002658:	680b      	ldr	r3, [r1, #0]
 800265a:	6003      	str	r3, [r0, #0]
 800265c:	684b      	ldr	r3, [r1, #4]
 800265e:	6043      	str	r3, [r0, #4]
 8002660:	bd10      	pop	{r4, pc}

08002662 <GUI_MoveRect>:
 8002662:	b168      	cbz	r0, 8002680 <GUI_MoveRect+0x1e>
 8002664:	8803      	ldrh	r3, [r0, #0]
 8002666:	b289      	uxth	r1, r1
 8002668:	440b      	add	r3, r1
 800266a:	8003      	strh	r3, [r0, #0]
 800266c:	8883      	ldrh	r3, [r0, #4]
 800266e:	b292      	uxth	r2, r2
 8002670:	4419      	add	r1, r3
 8002672:	8843      	ldrh	r3, [r0, #2]
 8002674:	8081      	strh	r1, [r0, #4]
 8002676:	4413      	add	r3, r2
 8002678:	8043      	strh	r3, [r0, #2]
 800267a:	88c3      	ldrh	r3, [r0, #6]
 800267c:	441a      	add	r2, r3
 800267e:	80c2      	strh	r2, [r0, #6]
 8002680:	4770      	bx	lr
	...

08002684 <GUI_Exec1>:
 8002684:	4b0c      	ldr	r3, [pc, #48]	@ (80026b8 <GUI_Exec1+0x34>)
 8002686:	b510      	push	{r4, lr}
 8002688:	681c      	ldr	r4, [r3, #0]
 800268a:	b11c      	cbz	r4, 8002694 <GUI_Exec1+0x10>
 800268c:	47a0      	blx	r4
 800268e:	1c04      	adds	r4, r0, #0
 8002690:	bf18      	it	ne
 8002692:	2401      	movne	r4, #1
 8002694:	f004 fc80 	bl	8006f98 <WM_Exec>
 8002698:	4b08      	ldr	r3, [pc, #32]	@ (80026bc <GUI_Exec1+0x38>)
 800269a:	2800      	cmp	r0, #0
 800269c:	681b      	ldr	r3, [r3, #0]
 800269e:	bf18      	it	ne
 80026a0:	2401      	movne	r4, #1
 80026a2:	b11b      	cbz	r3, 80026ac <GUI_Exec1+0x28>
 80026a4:	4798      	blx	r3
 80026a6:	2800      	cmp	r0, #0
 80026a8:	bf18      	it	ne
 80026aa:	2401      	movne	r4, #1
 80026ac:	4b04      	ldr	r3, [pc, #16]	@ (80026c0 <GUI_Exec1+0x3c>)
 80026ae:	681b      	ldr	r3, [r3, #0]
 80026b0:	b103      	cbz	r3, 80026b4 <GUI_Exec1+0x30>
 80026b2:	4798      	blx	r3
 80026b4:	4620      	mov	r0, r4
 80026b6:	bd10      	pop	{r4, pc}
 80026b8:	20002c0c 	.word	0x20002c0c
 80026bc:	20002c34 	.word	0x20002c34
 80026c0:	20002c2c 	.word	0x20002c2c

080026c4 <GUI_Exec>:
 80026c4:	b510      	push	{r4, lr}
 80026c6:	2400      	movs	r4, #0
 80026c8:	f7ff ffdc 	bl	8002684 <GUI_Exec1>
 80026cc:	b108      	cbz	r0, 80026d2 <GUI_Exec+0xe>
 80026ce:	2401      	movs	r4, #1
 80026d0:	e7fa      	b.n	80026c8 <GUI_Exec+0x4>
 80026d2:	4620      	mov	r0, r4
 80026d4:	bd10      	pop	{r4, pc}
	...

080026d8 <GUI_GotoXY>:
 80026d8:	4b02      	ldr	r3, [pc, #8]	@ (80026e4 <GUI_GotoXY+0xc>)
 80026da:	681b      	ldr	r3, [r3, #0]
 80026dc:	8458      	strh	r0, [r3, #34]	@ 0x22
 80026de:	8499      	strh	r1, [r3, #36]	@ 0x24
 80026e0:	2000      	movs	r0, #0
 80026e2:	4770      	bx	lr
 80026e4:	20000014 	.word	0x20000014

080026e8 <GUI_SetPenSize>:
 80026e8:	4b02      	ldr	r3, [pc, #8]	@ (80026f4 <GUI_SetPenSize+0xc>)
 80026ea:	681b      	ldr	r3, [r3, #0]
 80026ec:	7e1a      	ldrb	r2, [r3, #24]
 80026ee:	7618      	strb	r0, [r3, #24]
 80026f0:	4610      	mov	r0, r2
 80026f2:	4770      	bx	lr
 80026f4:	20000014 	.word	0x20000014

080026f8 <GUI_RectsIntersect>:
 80026f8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80026fc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8002700:	429a      	cmp	r2, r3
 8002702:	dc14      	bgt.n	800272e <GUI_RectsIntersect+0x36>
 8002704:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 8002708:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800270c:	429a      	cmp	r2, r3
 800270e:	dc0e      	bgt.n	800272e <GUI_RectsIntersect+0x36>
 8002710:	f9b0 2000 	ldrsh.w	r2, [r0]
 8002714:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8002718:	429a      	cmp	r2, r3
 800271a:	dc08      	bgt.n	800272e <GUI_RectsIntersect+0x36>
 800271c:	f9b0 0004 	ldrsh.w	r0, [r0, #4]
 8002720:	f9b1 3000 	ldrsh.w	r3, [r1]
 8002724:	4283      	cmp	r3, r0
 8002726:	bfcc      	ite	gt
 8002728:	2000      	movgt	r0, #0
 800272a:	2001      	movle	r0, #1
 800272c:	4770      	bx	lr
 800272e:	2000      	movs	r0, #0
 8002730:	4770      	bx	lr
	...

08002734 <GUI_SaveContext_W>:
 8002734:	b508      	push	{r3, lr}
 8002736:	4b03      	ldr	r3, [pc, #12]	@ (8002744 <GUI_SaveContext_W+0x10>)
 8002738:	2274      	movs	r2, #116	@ 0x74
 800273a:	6819      	ldr	r1, [r3, #0]
 800273c:	f008 fd6e 	bl	800b21c <memcpy>
 8002740:	bd08      	pop	{r3, pc}
 8002742:	bf00      	nop
 8002744:	20000014 	.word	0x20000014

08002748 <GUI_RestoreContext>:
 8002748:	b508      	push	{r3, lr}
 800274a:	4b03      	ldr	r3, [pc, #12]	@ (8002758 <GUI_RestoreContext+0x10>)
 800274c:	4601      	mov	r1, r0
 800274e:	2274      	movs	r2, #116	@ 0x74
 8002750:	6818      	ldr	r0, [r3, #0]
 8002752:	f008 fd63 	bl	800b21c <memcpy>
 8002756:	bd08      	pop	{r3, pc}
 8002758:	20000014 	.word	0x20000014

0800275c <GUI_SelectLCD>:
 800275c:	b508      	push	{r3, lr}
 800275e:	f001 f959 	bl	8003a14 <LCD_SelectLCD>
 8002762:	f001 f9bf 	bl	8003ae4 <LCD_UpdateColorIndices>
 8002766:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800276a:	f004 bc51 	b.w	8007010 <WM_Activate>

0800276e <GUI_SetBkColor>:
 800276e:	f000 bf9d 	b.w	80036ac <LCD_SetBkColor>

08002772 <GUI_SetColor>:
 8002772:	f000 bfa1 	b.w	80036b8 <LCD_SetColor>

08002776 <GUI_SetDrawMode>:
 8002776:	f000 bc33 	b.w	8002fe0 <LCD_SetDrawMode>
	...

0800277c <GUI_SetFont>:
 800277c:	4b03      	ldr	r3, [pc, #12]	@ (800278c <GUI_SetFont+0x10>)
 800277e:	681b      	ldr	r3, [r3, #0]
 8002780:	69da      	ldr	r2, [r3, #28]
 8002782:	b100      	cbz	r0, 8002786 <GUI_SetFont+0xa>
 8002784:	61d8      	str	r0, [r3, #28]
 8002786:	4610      	mov	r0, r2
 8002788:	4770      	bx	lr
 800278a:	bf00      	nop
 800278c:	20000014 	.word	0x20000014

08002790 <GUI_SetLineStyle>:
 8002790:	4b02      	ldr	r3, [pc, #8]	@ (800279c <GUI_SetLineStyle+0xc>)
 8002792:	681b      	ldr	r3, [r3, #0]
 8002794:	7e9a      	ldrb	r2, [r3, #26]
 8002796:	7698      	strb	r0, [r3, #26]
 8002798:	4610      	mov	r0, r2
 800279a:	4770      	bx	lr
 800279c:	20000014 	.word	0x20000014

080027a0 <GUI_SetOrg>:
 80027a0:	4b09      	ldr	r3, [pc, #36]	@ (80027c8 <GUI_SetOrg+0x28>)
 80027a2:	b410      	push	{r4}
 80027a4:	8018      	strh	r0, [r3, #0]
 80027a6:	4b09      	ldr	r3, [pc, #36]	@ (80027cc <GUI_SetOrg+0x2c>)
 80027a8:	460a      	mov	r2, r1
 80027aa:	8019      	strh	r1, [r3, #0]
 80027ac:	4b08      	ldr	r3, [pc, #32]	@ (80027d0 <GUI_SetOrg+0x30>)
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	7c59      	ldrb	r1, [r3, #17]
 80027b2:	4b08      	ldr	r3, [pc, #32]	@ (80027d4 <GUI_SetOrg+0x34>)
 80027b4:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80027b8:	68d9      	ldr	r1, [r3, #12]
 80027ba:	6a0c      	ldr	r4, [r1, #32]
 80027bc:	4601      	mov	r1, r0
 80027be:	4618      	mov	r0, r3
 80027c0:	4623      	mov	r3, r4
 80027c2:	bc10      	pop	{r4}
 80027c4:	4718      	bx	r3
 80027c6:	bf00      	nop
 80027c8:	20002c10 	.word	0x20002c10
 80027cc:	20002c00 	.word	0x20002c00
 80027d0:	20000014 	.word	0x20000014
 80027d4:	20002c38 	.word	0x20002c38

080027d8 <GUI_SetTextAlign>:
 80027d8:	4b03      	ldr	r3, [pc, #12]	@ (80027e8 <GUI_SetTextAlign+0x10>)
 80027da:	681b      	ldr	r3, [r3, #0]
 80027dc:	f9b3 202c 	ldrsh.w	r2, [r3, #44]	@ 0x2c
 80027e0:	8598      	strh	r0, [r3, #44]	@ 0x2c
 80027e2:	4610      	mov	r0, r2
 80027e4:	4770      	bx	lr
 80027e6:	bf00      	nop
 80027e8:	20000014 	.word	0x20000014

080027ec <GUI_SetTextMode>:
 80027ec:	4b03      	ldr	r3, [pc, #12]	@ (80027fc <GUI_SetTextMode+0x10>)
 80027ee:	681b      	ldr	r3, [r3, #0]
 80027f0:	f9b3 202a 	ldrsh.w	r2, [r3, #42]	@ 0x2a
 80027f4:	8558      	strh	r0, [r3, #42]	@ 0x2a
 80027f6:	4610      	mov	r0, r2
 80027f8:	4770      	bx	lr
 80027fa:	bf00      	nop
 80027fc:	20000014 	.word	0x20000014

08002800 <GL_SetDefault>:
 8002800:	b508      	push	{r3, lr}
 8002802:	4b0e      	ldr	r3, [pc, #56]	@ (800283c <GL_SetDefault+0x3c>)
 8002804:	6818      	ldr	r0, [r3, #0]
 8002806:	f000 ff51 	bl	80036ac <LCD_SetBkColor>
 800280a:	4b0d      	ldr	r3, [pc, #52]	@ (8002840 <GL_SetDefault+0x40>)
 800280c:	6818      	ldr	r0, [r3, #0]
 800280e:	f000 ff53 	bl	80036b8 <LCD_SetColor>
 8002812:	2001      	movs	r0, #1
 8002814:	f7ff ff68 	bl	80026e8 <GUI_SetPenSize>
 8002818:	2000      	movs	r0, #0
 800281a:	f7ff ffdd 	bl	80027d8 <GUI_SetTextAlign>
 800281e:	2000      	movs	r0, #0
 8002820:	f7ff ffe4 	bl	80027ec <GUI_SetTextMode>
 8002824:	2000      	movs	r0, #0
 8002826:	f7ff ffa6 	bl	8002776 <GUI_SetDrawMode>
 800282a:	4b06      	ldr	r3, [pc, #24]	@ (8002844 <GL_SetDefault+0x44>)
 800282c:	6818      	ldr	r0, [r3, #0]
 800282e:	f7ff ffa5 	bl	800277c <GUI_SetFont>
 8002832:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002836:	2000      	movs	r0, #0
 8002838:	f7ff bfaa 	b.w	8002790 <GUI_SetLineStyle>
 800283c:	200000fc 	.word	0x200000fc
 8002840:	20000010 	.word	0x20000010
 8002844:	2000000c 	.word	0x2000000c

08002848 <_InitContext>:
 8002848:	b570      	push	{r4, r5, r6, lr}
 800284a:	4604      	mov	r4, r0
 800284c:	4e19      	ldr	r6, [pc, #100]	@ (80028b4 <_InitContext+0x6c>)
 800284e:	4d1a      	ldr	r5, [pc, #104]	@ (80028b8 <_InitContext+0x70>)
 8002850:	f106 0384 	add.w	r3, r6, #132	@ 0x84
 8002854:	6703      	str	r3, [r0, #112]	@ 0x70
 8002856:	68eb      	ldr	r3, [r5, #12]
 8002858:	f104 0108 	add.w	r1, r4, #8
 800285c:	1d1a      	adds	r2, r3, #4
 800285e:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002860:	f103 0208 	add.w	r2, r3, #8
 8002864:	639b      	str	r3, [r3, #56]	@ 0x38
 8002866:	641b      	str	r3, [r3, #64]	@ 0x40
 8002868:	6142      	str	r2, [r0, #20]
 800286a:	7c5a      	ldrb	r2, [r3, #17]
 800286c:	4b13      	ldr	r3, [pc, #76]	@ (80028bc <_InitContext+0x74>)
 800286e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002872:	68c3      	ldr	r3, [r0, #12]
 8002874:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002876:	4798      	blx	r3
 8002878:	4b11      	ldr	r3, [pc, #68]	@ (80028c0 <_InitContext+0x78>)
 800287a:	6663      	str	r3, [r4, #100]	@ 0x64
 800287c:	686b      	ldr	r3, [r5, #4]
 800287e:	61e3      	str	r3, [r4, #28]
 8002880:	68eb      	ldr	r3, [r5, #12]
 8002882:	3308      	adds	r3, #8
 8002884:	6163      	str	r3, [r4, #20]
 8002886:	2301      	movs	r3, #1
 8002888:	7623      	strb	r3, [r4, #24]
 800288a:	76e3      	strb	r3, [r4, #27]
 800288c:	f004 fcc2 	bl	8007214 <WM_GetDesktopWindow>
 8002890:	2303      	movs	r3, #3
 8002892:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 8002896:	f06f 4370 	mvn.w	r3, #4026531840	@ 0xf0000000
 800289a:	6323      	str	r3, [r4, #48]	@ 0x30
 800289c:	6363      	str	r3, [r4, #52]	@ 0x34
 800289e:	64a0      	str	r0, [r4, #72]	@ 0x48
 80028a0:	6830      	ldr	r0, [r6, #0]
 80028a2:	f000 ff03 	bl	80036ac <LCD_SetBkColor>
 80028a6:	68a8      	ldr	r0, [r5, #8]
 80028a8:	f000 ff06 	bl	80036b8 <LCD_SetColor>
 80028ac:	4a05      	ldr	r2, [pc, #20]	@ (80028c4 <_InitContext+0x7c>)
 80028ae:	4b06      	ldr	r3, [pc, #24]	@ (80028c8 <_InitContext+0x80>)
 80028b0:	601a      	str	r2, [r3, #0]
 80028b2:	bd70      	pop	{r4, r5, r6, pc}
 80028b4:	200000fc 	.word	0x200000fc
 80028b8:	20000008 	.word	0x20000008
 80028bc:	20002c38 	.word	0x20002c38
 80028c0:	0800b2b0 	.word	0x0800b2b0
 80028c4:	0800b2c8 	.word	0x0800b2c8
 80028c8:	20002c30 	.word	0x20002c30

080028cc <_OnExit>:
 80028cc:	b570      	push	{r4, r5, r6, lr}
 80028ce:	4d0b      	ldr	r5, [pc, #44]	@ (80028fc <_OnExit+0x30>)
 80028d0:	2400      	movs	r4, #0
 80028d2:	4e0b      	ldr	r6, [pc, #44]	@ (8002900 <_OnExit+0x34>)
 80028d4:	f8c5 4080 	str.w	r4, [r5, #128]	@ 0x80
 80028d8:	3504      	adds	r5, #4
 80028da:	6833      	ldr	r3, [r6, #0]
 80028dc:	2274      	movs	r2, #116	@ 0x74
 80028de:	4621      	mov	r1, r4
 80028e0:	4628      	mov	r0, r5
 80028e2:	4798      	blx	r3
 80028e4:	6833      	ldr	r3, [r6, #0]
 80028e6:	2208      	movs	r2, #8
 80028e8:	4621      	mov	r1, r4
 80028ea:	4806      	ldr	r0, [pc, #24]	@ (8002904 <_OnExit+0x38>)
 80028ec:	4798      	blx	r3
 80028ee:	4b06      	ldr	r3, [pc, #24]	@ (8002908 <_OnExit+0x3c>)
 80028f0:	60dd      	str	r5, [r3, #12]
 80028f2:	4b06      	ldr	r3, [pc, #24]	@ (800290c <_OnExit+0x40>)
 80028f4:	701c      	strb	r4, [r3, #0]
 80028f6:	4b06      	ldr	r3, [pc, #24]	@ (8002910 <_OnExit+0x44>)
 80028f8:	601c      	str	r4, [r3, #0]
 80028fa:	bd70      	pop	{r4, r5, r6, pc}
 80028fc:	200000fc 	.word	0x200000fc
 8002900:	20000024 	.word	0x20000024
 8002904:	20002c38 	.word	0x20002c38
 8002908:	20000008 	.word	0x20000008
 800290c:	20002c20 	.word	0x20002c20
 8002910:	20002bfc 	.word	0x20002bfc

08002914 <GUI_SetDefaultFont>:
 8002914:	4b01      	ldr	r3, [pc, #4]	@ (800291c <GUI_SetDefaultFont+0x8>)
 8002916:	6058      	str	r0, [r3, #4]
 8002918:	4770      	bx	lr
 800291a:	bf00      	nop
 800291c:	20000008 	.word	0x20000008

08002920 <GUI_ClearRect>:
 8002920:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8002924:	4604      	mov	r4, r0
 8002926:	2004      	movs	r0, #4
 8002928:	4616      	mov	r6, r2
 800292a:	461f      	mov	r7, r3
 800292c:	460d      	mov	r5, r1
 800292e:	f000 fb57 	bl	8002fe0 <LCD_SetDrawMode>
 8002932:	4b13      	ldr	r3, [pc, #76]	@ (8002980 <GUI_ClearRect+0x60>)
 8002934:	4680      	mov	r8, r0
 8002936:	68db      	ldr	r3, [r3, #12]
 8002938:	4668      	mov	r0, sp
 800293a:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 800293c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800293e:	4414      	add	r4, r2
 8002940:	441d      	add	r5, r3
 8002942:	4416      	add	r6, r2
 8002944:	441f      	add	r7, r3
 8002946:	f8ad 4000 	strh.w	r4, [sp]
 800294a:	f8ad 6004 	strh.w	r6, [sp, #4]
 800294e:	f8ad 5002 	strh.w	r5, [sp, #2]
 8002952:	f8ad 7006 	strh.w	r7, [sp, #6]
 8002956:	f004 f9ab 	bl	8006cb0 <WM__InitIVRSearch>
 800295a:	b928      	cbnz	r0, 8002968 <GUI_ClearRect+0x48>
 800295c:	4640      	mov	r0, r8
 800295e:	f000 fb3f 	bl	8002fe0 <LCD_SetDrawMode>
 8002962:	b002      	add	sp, #8
 8002964:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002968:	463b      	mov	r3, r7
 800296a:	4632      	mov	r2, r6
 800296c:	4629      	mov	r1, r5
 800296e:	4620      	mov	r0, r4
 8002970:	f000 fbbe 	bl	80030f0 <LCD_FillRect>
 8002974:	f004 f8da 	bl	8006b2c <WM__GetNextIVR>
 8002978:	2800      	cmp	r0, #0
 800297a:	d1f5      	bne.n	8002968 <GUI_ClearRect+0x48>
 800297c:	e7ee      	b.n	800295c <GUI_ClearRect+0x3c>
 800297e:	bf00      	nop
 8002980:	20000008 	.word	0x20000008

08002984 <GUI_Clear>:
 8002984:	2100      	movs	r1, #0
 8002986:	b510      	push	{r4, lr}
 8002988:	4608      	mov	r0, r1
 800298a:	f7ff fea5 	bl	80026d8 <GUI_GotoXY>
 800298e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002992:	f643 73ff 	movw	r3, #16383	@ 0x3fff
 8002996:	4902      	ldr	r1, [pc, #8]	@ (80029a0 <GUI_Clear+0x1c>)
 8002998:	461a      	mov	r2, r3
 800299a:	4608      	mov	r0, r1
 800299c:	f7ff bfc0 	b.w	8002920 <GUI_ClearRect>
 80029a0:	ffffc001 	.word	0xffffc001

080029a4 <GUI__Config>:
 80029a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80029a6:	4d1f      	ldr	r5, [pc, #124]	@ (8002a24 <GUI__Config+0x80>)
 80029a8:	b085      	sub	sp, #20
 80029aa:	f8d5 3080 	ldr.w	r3, [r5, #128]	@ 0x80
 80029ae:	2b00      	cmp	r3, #0
 80029b0:	d136      	bne.n	8002a20 <GUI__Config+0x7c>
 80029b2:	466a      	mov	r2, sp
 80029b4:	466e      	mov	r6, sp
 80029b6:	2301      	movs	r3, #1
 80029b8:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 80029bc:	4b1a      	ldr	r3, [pc, #104]	@ (8002a28 <GUI__Config+0x84>)
 80029be:	f103 0708 	add.w	r7, r3, #8
 80029c2:	4614      	mov	r4, r2
 80029c4:	6818      	ldr	r0, [r3, #0]
 80029c6:	6859      	ldr	r1, [r3, #4]
 80029c8:	3308      	adds	r3, #8
 80029ca:	c403      	stmia	r4!, {r0, r1}
 80029cc:	42bb      	cmp	r3, r7
 80029ce:	4622      	mov	r2, r4
 80029d0:	d1f7      	bne.n	80029c2 <GUI__Config+0x1e>
 80029d2:	6818      	ldr	r0, [r3, #0]
 80029d4:	8899      	ldrh	r1, [r3, #4]
 80029d6:	799b      	ldrb	r3, [r3, #6]
 80029d8:	6020      	str	r0, [r4, #0]
 80029da:	71a3      	strb	r3, [r4, #6]
 80029dc:	4633      	mov	r3, r6
 80029de:	80a1      	strh	r1, [r4, #4]
 80029e0:	4c12      	ldr	r4, [pc, #72]	@ (8002a2c <GUI__Config+0x88>)
 80029e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80029e6:	f804 2b01 	strb.w	r2, [r4], #1
 80029ea:	781a      	ldrb	r2, [r3, #0]
 80029ec:	2a00      	cmp	r2, #0
 80029ee:	d1f8      	bne.n	80029e2 <GUI__Config+0x3e>
 80029f0:	f7ff fe00 	bl	80025f4 <GUI_GetVersionString>
 80029f4:	f810 3b01 	ldrb.w	r3, [r0], #1
 80029f8:	4622      	mov	r2, r4
 80029fa:	f804 3b01 	strb.w	r3, [r4], #1
 80029fe:	7803      	ldrb	r3, [r0, #0]
 8002a00:	2b00      	cmp	r3, #0
 8002a02:	d1f7      	bne.n	80029f4 <GUI__Config+0x50>
 8002a04:	7053      	strb	r3, [r2, #1]
 8002a06:	f7fd fba1 	bl	800014c <GUI_X_Config>
 8002a0a:	f7fd fd7d 	bl	8000508 <LCD_X_Config>
 8002a0e:	4b08      	ldr	r3, [pc, #32]	@ (8002a30 <GUI__Config+0x8c>)
 8002a10:	4808      	ldr	r0, [pc, #32]	@ (8002a34 <GUI__Config+0x90>)
 8002a12:	f8c5 3098 	str.w	r3, [r5, #152]	@ 0x98
 8002a16:	b005      	add	sp, #20
 8002a18:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8002a1c:	f000 b888 	b.w	8002b30 <GUI__RegisterExit>
 8002a20:	b005      	add	sp, #20
 8002a22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002a24:	200000fc 	.word	0x200000fc
 8002a28:	0800b2b8 	.word	0x0800b2b8
 8002a2c:	20000180 	.word	0x20000180
 8002a30:	080028cd 	.word	0x080028cd
 8002a34:	20000194 	.word	0x20000194

08002a38 <GUI_Init>:
 8002a38:	b590      	push	{r4, r7, lr}
 8002a3a:	b083      	sub	sp, #12
 8002a3c:	af00      	add	r7, sp, #0
 8002a3e:	4a33      	ldr	r2, [pc, #204]	@ (8002b0c <GUI_Init+0xd4>)
 8002a40:	4b32      	ldr	r3, [pc, #200]	@ (8002b0c <GUI_Init+0xd4>)
 8002a42:	681b      	ldr	r3, [r3, #0]
 8002a44:	f023 0301 	bic.w	r3, r3, #1
 8002a48:	6013      	str	r3, [r2, #0]
 8002a4a:	4b31      	ldr	r3, [pc, #196]	@ (8002b10 <GUI_Init+0xd8>)
 8002a4c:	2201      	movs	r2, #1
 8002a4e:	601a      	str	r2, [r3, #0]
 8002a50:	bf00      	nop
 8002a52:	4b2f      	ldr	r3, [pc, #188]	@ (8002b10 <GUI_Init+0xd8>)
 8002a54:	681b      	ldr	r3, [r3, #0]
 8002a56:	2b00      	cmp	r3, #0
 8002a58:	d1fb      	bne.n	8002a52 <GUI_Init+0x1a>
 8002a5a:	4b2e      	ldr	r3, [pc, #184]	@ (8002b14 <GUI_Init+0xdc>)
 8002a5c:	4a2e      	ldr	r2, [pc, #184]	@ (8002b18 <GUI_Init+0xe0>)
 8002a5e:	601a      	str	r2, [r3, #0]
 8002a60:	4b2c      	ldr	r3, [pc, #176]	@ (8002b14 <GUI_Init+0xdc>)
 8002a62:	681b      	ldr	r3, [r3, #0]
 8002a64:	4a2d      	ldr	r2, [pc, #180]	@ (8002b1c <GUI_Init+0xe4>)
 8002a66:	4293      	cmp	r3, r2
 8002a68:	d000      	beq.n	8002a6c <GUI_Init+0x34>
 8002a6a:	e7fe      	b.n	8002a6a <GUI_Init+0x32>
 8002a6c:	f7ff ff9a 	bl	80029a4 <GUI__Config>
 8002a70:	4b2b      	ldr	r3, [pc, #172]	@ (8002b20 <GUI_Init+0xe8>)
 8002a72:	222e      	movs	r2, #46	@ 0x2e
 8002a74:	701a      	strb	r2, [r3, #0]
 8002a76:	f7fd fb79 	bl	800016c <GUI_X_Init>
 8002a7a:	482a      	ldr	r0, [pc, #168]	@ (8002b24 <GUI_Init+0xec>)
 8002a7c:	f7ff fee4 	bl	8002848 <_InitContext>
 8002a80:	f000 fd6e 	bl	8003560 <emWin_LCD_Init>
 8002a84:	6078      	str	r0, [r7, #4]
 8002a86:	f000 ff55 	bl	8003934 <LCD_GetXSizeDisplay>
 8002a8a:	4603      	mov	r3, r0
 8002a8c:	2b00      	cmp	r3, #0
 8002a8e:	bf0c      	ite	eq
 8002a90:	2301      	moveq	r3, #1
 8002a92:	2300      	movne	r3, #0
 8002a94:	b2dc      	uxtb	r4, r3
 8002a96:	f000 ff53 	bl	8003940 <LCD_GetYSizeDisplay>
 8002a9a:	4603      	mov	r3, r0
 8002a9c:	2b00      	cmp	r3, #0
 8002a9e:	bf0c      	ite	eq
 8002aa0:	2301      	moveq	r3, #1
 8002aa2:	2300      	movne	r3, #0
 8002aa4:	b2db      	uxtb	r3, r3
 8002aa6:	4323      	orrs	r3, r4
 8002aa8:	b2db      	uxtb	r3, r3
 8002aaa:	2b00      	cmp	r3, #0
 8002aac:	d009      	beq.n	8002ac2 <GUI_Init+0x8a>
 8002aae:	f000 ff31 	bl	8003914 <LCD_GetXSizeMax>
 8002ab2:	4604      	mov	r4, r0
 8002ab4:	f000 ff31 	bl	800391a <LCD_GetYSizeMax>
 8002ab8:	4603      	mov	r3, r0
 8002aba:	4619      	mov	r1, r3
 8002abc:	4620      	mov	r0, r4
 8002abe:	f000 ff33 	bl	8003928 <LCD_SetDisplaySize>
 8002ac2:	2100      	movs	r1, #0
 8002ac4:	2000      	movs	r0, #0
 8002ac6:	f7ff fe6b 	bl	80027a0 <GUI_SetOrg>
 8002aca:	f004 fb0b 	bl	80070e4 <WM_Init>
 8002ace:	4b16      	ldr	r3, [pc, #88]	@ (8002b28 <GUI_Init+0xf0>)
 8002ad0:	681b      	ldr	r3, [r3, #0]
 8002ad2:	2b00      	cmp	r3, #0
 8002ad4:	d012      	beq.n	8002afc <GUI_Init+0xc4>
 8002ad6:	e00d      	b.n	8002af4 <GUI_Init+0xbc>
 8002ad8:	4b13      	ldr	r3, [pc, #76]	@ (8002b28 <GUI_Init+0xf0>)
 8002ada:	681b      	ldr	r3, [r3, #0]
 8002adc:	681b      	ldr	r3, [r3, #0]
 8002ade:	2b00      	cmp	r3, #0
 8002ae0:	d003      	beq.n	8002aea <GUI_Init+0xb2>
 8002ae2:	4b11      	ldr	r3, [pc, #68]	@ (8002b28 <GUI_Init+0xf0>)
 8002ae4:	681b      	ldr	r3, [r3, #0]
 8002ae6:	681b      	ldr	r3, [r3, #0]
 8002ae8:	4798      	blx	r3
 8002aea:	4b0f      	ldr	r3, [pc, #60]	@ (8002b28 <GUI_Init+0xf0>)
 8002aec:	681b      	ldr	r3, [r3, #0]
 8002aee:	685b      	ldr	r3, [r3, #4]
 8002af0:	4a0d      	ldr	r2, [pc, #52]	@ (8002b28 <GUI_Init+0xf0>)
 8002af2:	6013      	str	r3, [r2, #0]
 8002af4:	4b0c      	ldr	r3, [pc, #48]	@ (8002b28 <GUI_Init+0xf0>)
 8002af6:	681b      	ldr	r3, [r3, #0]
 8002af8:	2b00      	cmp	r3, #0
 8002afa:	d1ed      	bne.n	8002ad8 <GUI_Init+0xa0>
 8002afc:	4b0b      	ldr	r3, [pc, #44]	@ (8002b2c <GUI_Init+0xf4>)
 8002afe:	2201      	movs	r2, #1
 8002b00:	701a      	strb	r2, [r3, #0]
 8002b02:	687b      	ldr	r3, [r7, #4]
 8002b04:	4618      	mov	r0, r3
 8002b06:	370c      	adds	r7, #12
 8002b08:	46bd      	mov	sp, r7
 8002b0a:	bd90      	pop	{r4, r7, pc}
 8002b0c:	e0002000 	.word	0xe0002000
 8002b10:	40023008 	.word	0x40023008
 8002b14:	40023000 	.word	0x40023000
 8002b18:	f407a5c2 	.word	0xf407a5c2
 8002b1c:	b5e8b5cd 	.word	0xb5e8b5cd
 8002b20:	20002bf0 	.word	0x20002bf0
 8002b24:	20000100 	.word	0x20000100
 8002b28:	20000178 	.word	0x20000178
 8002b2c:	20002c18 	.word	0x20002c18

08002b30 <GUI__RegisterExit>:
 8002b30:	b480      	push	{r7}
 8002b32:	b083      	sub	sp, #12
 8002b34:	af00      	add	r7, sp, #0
 8002b36:	6078      	str	r0, [r7, #4]
 8002b38:	4b05      	ldr	r3, [pc, #20]	@ (8002b50 <GUI__RegisterExit+0x20>)
 8002b3a:	681a      	ldr	r2, [r3, #0]
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	605a      	str	r2, [r3, #4]
 8002b40:	4a03      	ldr	r2, [pc, #12]	@ (8002b50 <GUI__RegisterExit+0x20>)
 8002b42:	687b      	ldr	r3, [r7, #4]
 8002b44:	6013      	str	r3, [r2, #0]
 8002b46:	bf00      	nop
 8002b48:	370c      	adds	r7, #12
 8002b4a:	46bd      	mov	sp, r7
 8002b4c:	bc80      	pop	{r7}
 8002b4e:	4770      	bx	lr
 8002b50:	20000174 	.word	0x20000174

08002b54 <GUI_DEVICE__GetpDriver>:
 8002b54:	2801      	cmp	r0, #1
 8002b56:	dc09      	bgt.n	8002b6c <GUI_DEVICE__GetpDriver+0x18>
 8002b58:	4b05      	ldr	r3, [pc, #20]	@ (8002b70 <GUI_DEVICE__GetpDriver+0x1c>)
 8002b5a:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8002b5e:	b120      	cbz	r0, 8002b6a <GUI_DEVICE__GetpDriver+0x16>
 8002b60:	68c3      	ldr	r3, [r0, #12]
 8002b62:	681b      	ldr	r3, [r3, #0]
 8002b64:	b11b      	cbz	r3, 8002b6e <GUI_DEVICE__GetpDriver+0x1a>
 8002b66:	6800      	ldr	r0, [r0, #0]
 8002b68:	e7f9      	b.n	8002b5e <GUI_DEVICE__GetpDriver+0xa>
 8002b6a:	4770      	bx	lr
 8002b6c:	2000      	movs	r0, #0
 8002b6e:	4770      	bx	lr
 8002b70:	20002c38 	.word	0x20002c38

08002b74 <GUI_DEVICE_Delete>:
 8002b74:	f7ff ba58 	b.w	8002028 <GUI_ALLOC_FreeFixedBlock>

08002b78 <GUI_DEVICE_Create>:
 8002b78:	2b01      	cmp	r3, #1
 8002b7a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002b7c:	4606      	mov	r6, r0
 8002b7e:	460d      	mov	r5, r1
 8002b80:	4617      	mov	r7, r2
 8002b82:	461c      	mov	r4, r3
 8002b84:	dd01      	ble.n	8002b8a <GUI_DEVICE_Create+0x12>
 8002b86:	2000      	movs	r0, #0
 8002b88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002b8a:	201c      	movs	r0, #28
 8002b8c:	f7ff fb30 	bl	80021f0 <GUI_ALLOC_GetFixedBlock>
 8002b90:	2800      	cmp	r0, #0
 8002b92:	d0f8      	beq.n	8002b86 <GUI_DEVICE_Create+0xe>
 8002b94:	b10d      	cbz	r5, 8002b9a <GUI_DEVICE_Create+0x22>
 8002b96:	6105      	str	r5, [r0, #16]
 8002b98:	e009      	b.n	8002bae <GUI_DEVICE_Create+0x36>
 8002b9a:	4b09      	ldr	r3, [pc, #36]	@ (8002bc0 <GUI_DEVICE_Create+0x48>)
 8002b9c:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 8002ba0:	b129      	cbz	r1, 8002bae <GUI_DEVICE_Create+0x36>
 8002ba2:	680b      	ldr	r3, [r1, #0]
 8002ba4:	b10b      	cbz	r3, 8002baa <GUI_DEVICE_Create+0x32>
 8002ba6:	4619      	mov	r1, r3
 8002ba8:	e7fb      	b.n	8002ba2 <GUI_DEVICE_Create+0x2a>
 8002baa:	690b      	ldr	r3, [r1, #16]
 8002bac:	6103      	str	r3, [r0, #16]
 8002bae:	2300      	movs	r3, #0
 8002bb0:	6083      	str	r3, [r0, #8]
 8002bb2:	6184      	str	r4, [r0, #24]
 8002bb4:	8287      	strh	r7, [r0, #20]
 8002bb6:	60c6      	str	r6, [r0, #12]
 8002bb8:	6003      	str	r3, [r0, #0]
 8002bba:	6043      	str	r3, [r0, #4]
 8002bbc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002bbe:	bf00      	nop
 8002bc0:	20002c38 	.word	0x20002c38

08002bc4 <GUI_DEVICE_Unlink>:
 8002bc4:	6981      	ldr	r1, [r0, #24]
 8002bc6:	4a0a      	ldr	r2, [pc, #40]	@ (8002bf0 <GUI_DEVICE_Unlink+0x2c>)
 8002bc8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8002bcc:	4298      	cmp	r0, r3
 8002bce:	6803      	ldr	r3, [r0, #0]
 8002bd0:	d104      	bne.n	8002bdc <GUI_DEVICE_Unlink+0x18>
 8002bd2:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8002bd6:	b10b      	cbz	r3, 8002bdc <GUI_DEVICE_Unlink+0x18>
 8002bd8:	2200      	movs	r2, #0
 8002bda:	605a      	str	r2, [r3, #4]
 8002bdc:	6842      	ldr	r2, [r0, #4]
 8002bde:	b102      	cbz	r2, 8002be2 <GUI_DEVICE_Unlink+0x1e>
 8002be0:	6013      	str	r3, [r2, #0]
 8002be2:	6803      	ldr	r3, [r0, #0]
 8002be4:	b103      	cbz	r3, 8002be8 <GUI_DEVICE_Unlink+0x24>
 8002be6:	605a      	str	r2, [r3, #4]
 8002be8:	2300      	movs	r3, #0
 8002bea:	6003      	str	r3, [r0, #0]
 8002bec:	6043      	str	r3, [r0, #4]
 8002bee:	4770      	bx	lr
 8002bf0:	20002c38 	.word	0x20002c38

08002bf4 <GUI_DEVICE_Link>:
 8002bf4:	b530      	push	{r4, r5, lr}
 8002bf6:	b908      	cbnz	r0, 8002bfc <GUI_DEVICE_Link+0x8>
 8002bf8:	2001      	movs	r0, #1
 8002bfa:	bd30      	pop	{r4, r5, pc}
 8002bfc:	6984      	ldr	r4, [r0, #24]
 8002bfe:	2c01      	cmp	r4, #1
 8002c00:	dcfa      	bgt.n	8002bf8 <GUI_DEVICE_Link+0x4>
 8002c02:	4b1b      	ldr	r3, [pc, #108]	@ (8002c70 <GUI_DEVICE_Link+0x7c>)
 8002c04:	781a      	ldrb	r2, [r3, #0]
 8002c06:	4294      	cmp	r4, r2
 8002c08:	bfa4      	itt	ge
 8002c0a:	1c62      	addge	r2, r4, #1
 8002c0c:	701a      	strbge	r2, [r3, #0]
 8002c0e:	4a19      	ldr	r2, [pc, #100]	@ (8002c74 <GUI_DEVICE_Link+0x80>)
 8002c10:	f852 3024 	ldr.w	r3, [r2, r4, lsl #2]
 8002c14:	4615      	mov	r5, r2
 8002c16:	b91b      	cbnz	r3, 8002c20 <GUI_DEVICE_Link+0x2c>
 8002c18:	f842 0024 	str.w	r0, [r2, r4, lsl #2]
 8002c1c:	4618      	mov	r0, r3
 8002c1e:	bd30      	pop	{r4, r5, pc}
 8002c20:	685a      	ldr	r2, [r3, #4]
 8002c22:	b10a      	cbz	r2, 8002c28 <GUI_DEVICE_Link+0x34>
 8002c24:	4613      	mov	r3, r2
 8002c26:	e7fb      	b.n	8002c20 <GUI_DEVICE_Link+0x2c>
 8002c28:	68c2      	ldr	r2, [r0, #12]
 8002c2a:	6812      	ldr	r2, [r2, #0]
 8002c2c:	68d9      	ldr	r1, [r3, #12]
 8002c2e:	6809      	ldr	r1, [r1, #0]
 8002c30:	4291      	cmp	r1, r2
 8002c32:	dd03      	ble.n	8002c3c <GUI_DEVICE_Link+0x48>
 8002c34:	681b      	ldr	r3, [r3, #0]
 8002c36:	2b00      	cmp	r3, #0
 8002c38:	d1f8      	bne.n	8002c2c <GUI_DEVICE_Link+0x38>
 8002c3a:	e7dd      	b.n	8002bf8 <GUI_DEVICE_Link+0x4>
 8002c3c:	d109      	bne.n	8002c52 <GUI_DEVICE_Link+0x5e>
 8002c3e:	8a81      	ldrh	r1, [r0, #20]
 8002c40:	2901      	cmp	r1, #1
 8002c42:	d106      	bne.n	8002c52 <GUI_DEVICE_Link+0x5e>
 8002c44:	6819      	ldr	r1, [r3, #0]
 8002c46:	b121      	cbz	r1, 8002c52 <GUI_DEVICE_Link+0x5e>
 8002c48:	460b      	mov	r3, r1
 8002c4a:	68c9      	ldr	r1, [r1, #12]
 8002c4c:	6809      	ldr	r1, [r1, #0]
 8002c4e:	428a      	cmp	r2, r1
 8002c50:	ddf8      	ble.n	8002c44 <GUI_DEVICE_Link+0x50>
 8002c52:	685a      	ldr	r2, [r3, #4]
 8002c54:	b112      	cbz	r2, 8002c5c <GUI_DEVICE_Link+0x68>
 8002c56:	6010      	str	r0, [r2, #0]
 8002c58:	6042      	str	r2, [r0, #4]
 8002c5a:	e001      	b.n	8002c60 <GUI_DEVICE_Link+0x6c>
 8002c5c:	f845 0024 	str.w	r0, [r5, r4, lsl #2]
 8002c60:	6058      	str	r0, [r3, #4]
 8002c62:	4298      	cmp	r0, r3
 8002c64:	bf08      	it	eq
 8002c66:	2300      	moveq	r3, #0
 8002c68:	6003      	str	r3, [r0, #0]
 8002c6a:	2000      	movs	r0, #0
 8002c6c:	bd30      	pop	{r4, r5, pc}
 8002c6e:	bf00      	nop
 8002c70:	20002bea 	.word	0x20002bea
 8002c74:	20002c38 	.word	0x20002c38

08002c78 <GUI_DEVICE_CreateAndLink>:
 8002c78:	b538      	push	{r3, r4, r5, lr}
 8002c7a:	461d      	mov	r5, r3
 8002c7c:	f7ff ff7c 	bl	8002b78 <GUI_DEVICE_Create>
 8002c80:	4604      	mov	r4, r0
 8002c82:	b148      	cbz	r0, 8002c98 <GUI_DEVICE_CreateAndLink+0x20>
 8002c84:	f7ff ffb6 	bl	8002bf4 <GUI_DEVICE_Link>
 8002c88:	68e3      	ldr	r3, [r4, #12]
 8002c8a:	681b      	ldr	r3, [r3, #0]
 8002c8c:	b923      	cbnz	r3, 8002c98 <GUI_DEVICE_CreateAndLink+0x20>
 8002c8e:	4b03      	ldr	r3, [pc, #12]	@ (8002c9c <GUI_DEVICE_CreateAndLink+0x24>)
 8002c90:	3516      	adds	r5, #22
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	f843 4025 	str.w	r4, [r3, r5, lsl #2]
 8002c98:	4620      	mov	r0, r4
 8002c9a:	bd38      	pop	{r3, r4, r5, pc}
 8002c9c:	20000014 	.word	0x20000014

08002ca0 <GUI_DispString>:
 8002ca0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ca4:	4605      	mov	r5, r0
 8002ca6:	b085      	sub	sp, #20
 8002ca8:	2800      	cmp	r0, #0
 8002caa:	d07f      	beq.n	8002dac <GUI_DispString+0x10c>
 8002cac:	f005 fd48 	bl	8008740 <GUI_GetFontDistY>
 8002cb0:	4c40      	ldr	r4, [pc, #256]	@ (8002db4 <GUI_DispString+0x114>)
 8002cb2:	4607      	mov	r7, r0
 8002cb4:	6823      	ldr	r3, [r4, #0]
 8002cb6:	46a1      	mov	r9, r4
 8002cb8:	f9b3 8022 	ldrsh.w	r8, [r3, #34]	@ 0x22
 8002cbc:	f005 fd28 	bl	8008710 <GUI_GetYAdjust>
 8002cc0:	6822      	ldr	r2, [r4, #0]
 8002cc2:	b286      	uxth	r6, r0
 8002cc4:	8c93      	ldrh	r3, [r2, #36]	@ 0x24
 8002cc6:	1b9b      	subs	r3, r3, r6
 8002cc8:	8493      	strh	r3, [r2, #36]	@ 0x24
 8002cca:	782b      	ldrb	r3, [r5, #0]
 8002ccc:	2b00      	cmp	r3, #0
 8002cce:	d061      	beq.n	8002d94 <GUI_DispString+0xf4>
 8002cd0:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 8002cd4:	4628      	mov	r0, r5
 8002cd6:	f005 fd9b 	bl	8008810 <GUI__GetLineNumChars>
 8002cda:	4601      	mov	r1, r0
 8002cdc:	4682      	mov	sl, r0
 8002cde:	4628      	mov	r0, r5
 8002ce0:	f005 fdc0 	bl	8008864 <GUI__GetLineDistX>
 8002ce4:	6822      	ldr	r2, [r4, #0]
 8002ce6:	8d93      	ldrh	r3, [r2, #44]	@ 0x2c
 8002ce8:	f003 0303 	and.w	r3, r3, #3
 8002cec:	2b01      	cmp	r3, #1
 8002cee:	d004      	beq.n	8002cfa <GUI_DispString+0x5a>
 8002cf0:	2b02      	cmp	r3, #2
 8002cf2:	d104      	bne.n	8002cfe <GUI_DispString+0x5e>
 8002cf4:	fb90 f3f3 	sdiv	r3, r0, r3
 8002cf8:	e002      	b.n	8002d00 <GUI_DispString+0x60>
 8002cfa:	4603      	mov	r3, r0
 8002cfc:	e000      	b.n	8002d00 <GUI_DispString+0x60>
 8002cfe:	2300      	movs	r3, #0
 8002d00:	8c51      	ldrh	r1, [r2, #34]	@ 0x22
 8002d02:	fa1f fb80 	uxth.w	fp, r0
 8002d06:	1acb      	subs	r3, r1, r3
 8002d08:	b29b      	uxth	r3, r3
 8002d0a:	b219      	sxth	r1, r3
 8002d0c:	8451      	strh	r1, [r2, #34]	@ 0x22
 8002d0e:	f8ad 1008 	strh.w	r1, [sp, #8]
 8002d12:	f9b2 2024 	ldrsh.w	r2, [r2, #36]	@ 0x24
 8002d16:	f10b 31ff 	add.w	r1, fp, #4294967295
 8002d1a:	440b      	add	r3, r1
 8002d1c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8002d20:	f8ad 200a 	strh.w	r2, [sp, #10]
 8002d24:	b2bb      	uxth	r3, r7
 8002d26:	3a01      	subs	r2, #1
 8002d28:	441a      	add	r2, r3
 8002d2a:	f8ad 200e 	strh.w	r2, [sp, #14]
 8002d2e:	4651      	mov	r1, sl
 8002d30:	aa02      	add	r2, sp, #8
 8002d32:	4628      	mov	r0, r5
 8002d34:	9301      	str	r3, [sp, #4]
 8002d36:	f005 fdc5 	bl	80088c4 <GUI__DispLine>
 8002d3a:	6822      	ldr	r2, [r4, #0]
 8002d3c:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8002d40:	4628      	mov	r0, r5
 8002d42:	8491      	strh	r1, [r2, #36]	@ 0x24
 8002d44:	4651      	mov	r1, sl
 8002d46:	f000 f87d 	bl	8002e44 <GUI_UC__NumChars2NumBytes>
 8002d4a:	5c2a      	ldrb	r2, [r5, r0]
 8002d4c:	eb05 0e00 	add.w	lr, r5, r0
 8002d50:	2a0a      	cmp	r2, #10
 8002d52:	9b01      	ldr	r3, [sp, #4]
 8002d54:	d001      	beq.n	8002d5a <GUI_DispString+0xba>
 8002d56:	2a0d      	cmp	r2, #13
 8002d58:	d112      	bne.n	8002d80 <GUI_DispString+0xe0>
 8002d5a:	6822      	ldr	r2, [r4, #0]
 8002d5c:	8d91      	ldrh	r1, [r2, #44]	@ 0x2c
 8002d5e:	f001 0103 	and.w	r1, r1, #3
 8002d62:	3901      	subs	r1, #1
 8002d64:	2901      	cmp	r1, #1
 8002d66:	bf8a      	itet	hi
 8002d68:	8c11      	ldrhhi	r1, [r2, #32]
 8002d6a:	f8a2 8022 	strhls.w	r8, [r2, #34]	@ 0x22
 8002d6e:	8451      	strhhi	r1, [r2, #34]	@ 0x22
 8002d70:	f89e 1000 	ldrb.w	r1, [lr]
 8002d74:	290a      	cmp	r1, #10
 8002d76:	d10a      	bne.n	8002d8e <GUI_DispString+0xee>
 8002d78:	8c91      	ldrh	r1, [r2, #36]	@ 0x24
 8002d7a:	440b      	add	r3, r1
 8002d7c:	8493      	strh	r3, [r2, #36]	@ 0x24
 8002d7e:	e006      	b.n	8002d8e <GUI_DispString+0xee>
 8002d80:	f8bd 0008 	ldrh.w	r0, [sp, #8]
 8002d84:	f8d9 3000 	ldr.w	r3, [r9]
 8002d88:	4483      	add	fp, r0
 8002d8a:	f8a3 b022 	strh.w	fp, [r3, #34]	@ 0x22
 8002d8e:	f89e 3000 	ldrb.w	r3, [lr]
 8002d92:	b943      	cbnz	r3, 8002da6 <GUI_DispString+0x106>
 8002d94:	6823      	ldr	r3, [r4, #0]
 8002d96:	8c9a      	ldrh	r2, [r3, #36]	@ 0x24
 8002d98:	4416      	add	r6, r2
 8002d9a:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8002d9c:	849e      	strh	r6, [r3, #36]	@ 0x24
 8002d9e:	f022 0203 	bic.w	r2, r2, #3
 8002da2:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8002da4:	e002      	b.n	8002dac <GUI_DispString+0x10c>
 8002da6:	f10e 0501 	add.w	r5, lr, #1
 8002daa:	e78e      	b.n	8002cca <GUI_DispString+0x2a>
 8002dac:	b005      	add	sp, #20
 8002dae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002db2:	bf00      	nop
 8002db4:	20000014 	.word	0x20000014

08002db8 <GUI_DispStringAt>:
 8002db8:	4b02      	ldr	r3, [pc, #8]	@ (8002dc4 <GUI_DispStringAt+0xc>)
 8002dba:	681b      	ldr	r3, [r3, #0]
 8002dbc:	8459      	strh	r1, [r3, #34]	@ 0x22
 8002dbe:	849a      	strh	r2, [r3, #36]	@ 0x24
 8002dc0:	f7ff bf6e 	b.w	8002ca0 <GUI_DispString>
 8002dc4:	20000014 	.word	0x20000014

08002dc8 <GUI_GetStringDistX>:
 8002dc8:	b510      	push	{r4, lr}
 8002dca:	4604      	mov	r4, r0
 8002dcc:	f000 f84c 	bl	8002e68 <GUI__GetNumChars>
 8002dd0:	4601      	mov	r1, r0
 8002dd2:	4620      	mov	r0, r4
 8002dd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002dd8:	f005 bd44 	b.w	8008864 <GUI__GetLineDistX>

08002ddc <GUI_StoreKey>:
 8002ddc:	4b02      	ldr	r3, [pc, #8]	@ (8002de8 <GUI_StoreKey+0xc>)
 8002dde:	681a      	ldr	r2, [r3, #0]
 8002de0:	b902      	cbnz	r2, 8002de4 <GUI_StoreKey+0x8>
 8002de2:	6018      	str	r0, [r3, #0]
 8002de4:	f000 b858 	b.w	8002e98 <GUI_SignalEvent>
 8002de8:	2000019c 	.word	0x2000019c

08002dec <GUI_PollKeyMsg>:
 8002dec:	4a09      	ldr	r2, [pc, #36]	@ (8002e14 <GUI_PollKeyMsg+0x28>)
 8002dee:	b510      	push	{r4, lr}
 8002df0:	6813      	ldr	r3, [r2, #0]
 8002df2:	6851      	ldr	r1, [r2, #4]
 8002df4:	428b      	cmp	r3, r1
 8002df6:	d00b      	beq.n	8002e10 <GUI_PollKeyMsg+0x24>
 8002df8:	e893 0003 	ldmia.w	r3, {r0, r1}
 8002dfc:	4c06      	ldr	r4, [pc, #24]	@ (8002e18 <GUI_PollKeyMsg+0x2c>)
 8002dfe:	42a3      	cmp	r3, r4
 8002e00:	bf14      	ite	ne
 8002e02:	3308      	addne	r3, #8
 8002e04:	3b50      	subeq	r3, #80	@ 0x50
 8002e06:	6013      	str	r3, [r2, #0]
 8002e08:	f004 faf2 	bl	80073f0 <WM_OnKey>
 8002e0c:	2001      	movs	r0, #1
 8002e0e:	bd10      	pop	{r4, pc}
 8002e10:	2000      	movs	r0, #0
 8002e12:	bd10      	pop	{r4, pc}
 8002e14:	20000018 	.word	0x20000018
 8002e18:	200001f0 	.word	0x200001f0

08002e1c <GUI_UC__GetCharCodeInc>:
 8002e1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002e1e:	4e08      	ldr	r6, [pc, #32]	@ (8002e40 <GUI_UC__GetCharCodeInc+0x24>)
 8002e20:	6804      	ldr	r4, [r0, #0]
 8002e22:	6833      	ldr	r3, [r6, #0]
 8002e24:	4605      	mov	r5, r0
 8002e26:	681b      	ldr	r3, [r3, #0]
 8002e28:	4620      	mov	r0, r4
 8002e2a:	4798      	blx	r3
 8002e2c:	6833      	ldr	r3, [r6, #0]
 8002e2e:	4607      	mov	r7, r0
 8002e30:	685b      	ldr	r3, [r3, #4]
 8002e32:	4620      	mov	r0, r4
 8002e34:	4798      	blx	r3
 8002e36:	4420      	add	r0, r4
 8002e38:	6028      	str	r0, [r5, #0]
 8002e3a:	4638      	mov	r0, r7
 8002e3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002e3e:	bf00      	nop
 8002e40:	20002c30 	.word	0x20002c30

08002e44 <GUI_UC__NumChars2NumBytes>:
 8002e44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002e46:	4606      	mov	r6, r0
 8002e48:	460d      	mov	r5, r1
 8002e4a:	4f06      	ldr	r7, [pc, #24]	@ (8002e64 <GUI_UC__NumChars2NumBytes+0x20>)
 8002e4c:	2400      	movs	r4, #0
 8002e4e:	b13d      	cbz	r5, 8002e60 <GUI_UC__NumChars2NumBytes+0x1c>
 8002e50:	683b      	ldr	r3, [r7, #0]
 8002e52:	4630      	mov	r0, r6
 8002e54:	685b      	ldr	r3, [r3, #4]
 8002e56:	4798      	blx	r3
 8002e58:	3d01      	subs	r5, #1
 8002e5a:	4406      	add	r6, r0
 8002e5c:	4404      	add	r4, r0
 8002e5e:	e7f6      	b.n	8002e4e <GUI_UC__NumChars2NumBytes+0xa>
 8002e60:	4620      	mov	r0, r4
 8002e62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002e64:	20002c30 	.word	0x20002c30

08002e68 <GUI__GetNumChars>:
 8002e68:	b513      	push	{r0, r1, r4, lr}
 8002e6a:	9001      	str	r0, [sp, #4]
 8002e6c:	b130      	cbz	r0, 8002e7c <GUI__GetNumChars+0x14>
 8002e6e:	2400      	movs	r4, #0
 8002e70:	a801      	add	r0, sp, #4
 8002e72:	f7ff ffd3 	bl	8002e1c <GUI_UC__GetCharCodeInc>
 8002e76:	b110      	cbz	r0, 8002e7e <GUI__GetNumChars+0x16>
 8002e78:	3401      	adds	r4, #1
 8002e7a:	e7f9      	b.n	8002e70 <GUI__GetNumChars+0x8>
 8002e7c:	4604      	mov	r4, r0
 8002e7e:	4620      	mov	r0, r4
 8002e80:	b002      	add	sp, #8
 8002e82:	bd10      	pop	{r4, pc}

08002e84 <_GetCharCode>:
 8002e84:	7800      	ldrb	r0, [r0, #0]
 8002e86:	4770      	bx	lr

08002e88 <_GetCharSize>:
 8002e88:	2001      	movs	r0, #1
 8002e8a:	4770      	bx	lr

08002e8c <_CalcSizeOfChar>:
 8002e8c:	2001      	movs	r0, #1
 8002e8e:	4770      	bx	lr

08002e90 <_Encode>:
 8002e90:	7001      	strb	r1, [r0, #0]
 8002e92:	2001      	movs	r0, #1
 8002e94:	4770      	bx	lr
	...

08002e98 <GUI_SignalEvent>:
 8002e98:	4b02      	ldr	r3, [pc, #8]	@ (8002ea4 <GUI_SignalEvent+0xc>)
 8002e9a:	681b      	ldr	r3, [r3, #0]
 8002e9c:	b103      	cbz	r3, 8002ea0 <GUI_SignalEvent+0x8>
 8002e9e:	4718      	bx	r3
 8002ea0:	4770      	bx	lr
 8002ea2:	bf00      	nop
 8002ea4:	200001fc 	.word	0x200001fc

08002ea8 <GUI__IntersectRect>:
 8002ea8:	f9b1 3000 	ldrsh.w	r3, [r1]
 8002eac:	f9b0 2000 	ldrsh.w	r2, [r0]
 8002eb0:	429a      	cmp	r2, r3
 8002eb2:	bfb8      	it	lt
 8002eb4:	8003      	strhlt	r3, [r0, #0]
 8002eb6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8002eba:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8002ebe:	429a      	cmp	r2, r3
 8002ec0:	bfb8      	it	lt
 8002ec2:	8043      	strhlt	r3, [r0, #2]
 8002ec4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8002ec8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8002ecc:	429a      	cmp	r2, r3
 8002ece:	bfc8      	it	gt
 8002ed0:	8083      	strhgt	r3, [r0, #4]
 8002ed2:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8002ed6:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8002eda:	429a      	cmp	r2, r3
 8002edc:	bfc8      	it	gt
 8002ede:	80c3      	strhgt	r3, [r0, #6]
 8002ee0:	4770      	bx	lr

08002ee2 <GUI__IntersectRects>:
 8002ee2:	b570      	push	{r4, r5, r6, lr}
 8002ee4:	f9b1 3000 	ldrsh.w	r3, [r1]
 8002ee8:	f9b2 5000 	ldrsh.w	r5, [r2]
 8002eec:	4606      	mov	r6, r0
 8002eee:	429d      	cmp	r5, r3
 8002ef0:	bfb8      	it	lt
 8002ef2:	461d      	movlt	r5, r3
 8002ef4:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8002ef8:	8005      	strh	r5, [r0, #0]
 8002efa:	f9b2 0002 	ldrsh.w	r0, [r2, #2]
 8002efe:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 8002f02:	4283      	cmp	r3, r0
 8002f04:	bfb8      	it	lt
 8002f06:	4603      	movlt	r3, r0
 8002f08:	f9b2 0004 	ldrsh.w	r0, [r2, #4]
 8002f0c:	8073      	strh	r3, [r6, #2]
 8002f0e:	4284      	cmp	r4, r0
 8002f10:	bfa8      	it	ge
 8002f12:	4604      	movge	r4, r0
 8002f14:	f9b2 0006 	ldrsh.w	r0, [r2, #6]
 8002f18:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
 8002f1c:	80b4      	strh	r4, [r6, #4]
 8002f1e:	4282      	cmp	r2, r0
 8002f20:	bfa8      	it	ge
 8002f22:	4602      	movge	r2, r0
 8002f24:	42a5      	cmp	r5, r4
 8002f26:	80f2      	strh	r2, [r6, #6]
 8002f28:	dc04      	bgt.n	8002f34 <GUI__IntersectRects+0x52>
 8002f2a:	4293      	cmp	r3, r2
 8002f2c:	bfcc      	ite	gt
 8002f2e:	2000      	movgt	r0, #0
 8002f30:	2001      	movle	r0, #1
 8002f32:	bd70      	pop	{r4, r5, r6, pc}
 8002f34:	2000      	movs	r0, #0
 8002f36:	bd70      	pop	{r4, r5, r6, pc}

08002f38 <GUI__memset16>:
 8002f38:	b570      	push	{r4, r5, r6, lr}
 8002f3a:	0784      	lsls	r4, r0, #30
 8002f3c:	bf42      	ittt	mi
 8002f3e:	f102 32ff 	addmi.w	r2, r2, #4294967295
 8002f42:	8001      	strhmi	r1, [r0, #0]
 8002f44:	3002      	addmi	r0, #2
 8002f46:	0854      	lsrs	r4, r2, #1
 8002f48:	d024      	beq.n	8002f94 <GUI__memset16+0x5c>
 8002f4a:	2c03      	cmp	r4, #3
 8002f4c:	4623      	mov	r3, r4
 8002f4e:	eb01 4501 	add.w	r5, r1, r1, lsl #16
 8002f52:	d802      	bhi.n	8002f5a <GUI__memset16+0x22>
 8002f54:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8002f58:	e017      	b.n	8002f8a <GUI__memset16+0x52>
 8002f5a:	4626      	mov	r6, r4
 8002f5c:	f100 0310 	add.w	r3, r0, #16
 8002f60:	3e04      	subs	r6, #4
 8002f62:	2e03      	cmp	r6, #3
 8002f64:	f843 5c10 	str.w	r5, [r3, #-16]
 8002f68:	f843 5c0c 	str.w	r5, [r3, #-12]
 8002f6c:	f843 5c08 	str.w	r5, [r3, #-8]
 8002f70:	f843 5c04 	str.w	r5, [r3, #-4]
 8002f74:	f103 0310 	add.w	r3, r3, #16
 8002f78:	dcf2      	bgt.n	8002f60 <GUI__memset16+0x28>
 8002f7a:	3c04      	subs	r4, #4
 8002f7c:	08a3      	lsrs	r3, r4, #2
 8002f7e:	1c5e      	adds	r6, r3, #1
 8002f80:	eb00 1006 	add.w	r0, r0, r6, lsl #4
 8002f84:	eba4 0383 	sub.w	r3, r4, r3, lsl #2
 8002f88:	e7e4      	b.n	8002f54 <GUI__memset16+0x1c>
 8002f8a:	4298      	cmp	r0, r3
 8002f8c:	d002      	beq.n	8002f94 <GUI__memset16+0x5c>
 8002f8e:	f840 5b04 	str.w	r5, [r0], #4
 8002f92:	e7fa      	b.n	8002f8a <GUI__memset16+0x52>
 8002f94:	07d3      	lsls	r3, r2, #31
 8002f96:	bf48      	it	mi
 8002f98:	8001      	strhmi	r1, [r0, #0]
 8002f9a:	bd70      	pop	{r4, r5, r6, pc}

08002f9c <GUI__ReduceRect>:
 8002f9c:	880b      	ldrh	r3, [r1, #0]
 8002f9e:	b292      	uxth	r2, r2
 8002fa0:	4413      	add	r3, r2
 8002fa2:	8003      	strh	r3, [r0, #0]
 8002fa4:	888b      	ldrh	r3, [r1, #4]
 8002fa6:	1a9b      	subs	r3, r3, r2
 8002fa8:	8083      	strh	r3, [r0, #4]
 8002faa:	884b      	ldrh	r3, [r1, #2]
 8002fac:	4413      	add	r3, r2
 8002fae:	8043      	strh	r3, [r0, #2]
 8002fb0:	88cb      	ldrh	r3, [r1, #6]
 8002fb2:	1a9a      	subs	r2, r3, r2
 8002fb4:	80c2      	strh	r2, [r0, #6]
 8002fb6:	4770      	bx	lr

08002fb8 <_SetDrawMode>:
 8002fb8:	b570      	push	{r4, r5, r6, lr}
 8002fba:	4b08      	ldr	r3, [pc, #32]	@ (8002fdc <_SetDrawMode+0x24>)
 8002fbc:	681b      	ldr	r3, [r3, #0]
 8002fbe:	7c1a      	ldrb	r2, [r3, #16]
 8002fc0:	ea82 0100 	eor.w	r1, r2, r0
 8002fc4:	0749      	lsls	r1, r1, #29
 8002fc6:	d505      	bpl.n	8002fd4 <_SetDrawMode+0x1c>
 8002fc8:	6b9c      	ldr	r4, [r3, #56]	@ 0x38
 8002fca:	6bd9      	ldr	r1, [r3, #60]	@ 0x3c
 8002fcc:	6825      	ldr	r5, [r4, #0]
 8002fce:	680e      	ldr	r6, [r1, #0]
 8002fd0:	6026      	str	r6, [r4, #0]
 8002fd2:	600d      	str	r5, [r1, #0]
 8002fd4:	7418      	strb	r0, [r3, #16]
 8002fd6:	4610      	mov	r0, r2
 8002fd8:	bd70      	pop	{r4, r5, r6, pc}
 8002fda:	bf00      	nop
 8002fdc:	20000014 	.word	0x20000014

08002fe0 <LCD_SetDrawMode>:
 8002fe0:	4b01      	ldr	r3, [pc, #4]	@ (8002fe8 <LCD_SetDrawMode+0x8>)
 8002fe2:	681b      	ldr	r3, [r3, #0]
 8002fe4:	689b      	ldr	r3, [r3, #8]
 8002fe6:	4718      	bx	r3
 8002fe8:	20000028 	.word	0x20000028

08002fec <LCD_DrawPixel>:
 8002fec:	460a      	mov	r2, r1
 8002fee:	4b15      	ldr	r3, [pc, #84]	@ (8003044 <LCD_DrawPixel+0x58>)
 8002ff0:	b430      	push	{r4, r5}
 8002ff2:	681b      	ldr	r3, [r3, #0]
 8002ff4:	4604      	mov	r4, r0
 8002ff6:	f9b3 100a 	ldrsh.w	r1, [r3, #10]
 8002ffa:	4291      	cmp	r1, r2
 8002ffc:	dc20      	bgt.n	8003040 <LCD_DrawPixel+0x54>
 8002ffe:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8003002:	428a      	cmp	r2, r1
 8003004:	dc1c      	bgt.n	8003040 <LCD_DrawPixel+0x54>
 8003006:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 800300a:	4281      	cmp	r1, r0
 800300c:	dc18      	bgt.n	8003040 <LCD_DrawPixel+0x54>
 800300e:	f9b3 100c 	ldrsh.w	r1, [r3, #12]
 8003012:	4288      	cmp	r0, r1
 8003014:	dc14      	bgt.n	8003040 <LCD_DrawPixel+0x54>
 8003016:	7c19      	ldrb	r1, [r3, #16]
 8003018:	7c58      	ldrb	r0, [r3, #17]
 800301a:	f011 0f01 	tst.w	r1, #1
 800301e:	490a      	ldr	r1, [pc, #40]	@ (8003048 <LCD_DrawPixel+0x5c>)
 8003020:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 8003024:	d004      	beq.n	8003030 <LCD_DrawPixel+0x44>
 8003026:	68c3      	ldr	r3, [r0, #12]
 8003028:	4621      	mov	r1, r4
 800302a:	bc30      	pop	{r4, r5}
 800302c:	69db      	ldr	r3, [r3, #28]
 800302e:	4718      	bx	r3
 8003030:	68c1      	ldr	r1, [r0, #12]
 8003032:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003034:	698d      	ldr	r5, [r1, #24]
 8003036:	681b      	ldr	r3, [r3, #0]
 8003038:	4621      	mov	r1, r4
 800303a:	46ac      	mov	ip, r5
 800303c:	bc30      	pop	{r4, r5}
 800303e:	4760      	bx	ip
 8003040:	bc30      	pop	{r4, r5}
 8003042:	4770      	bx	lr
 8003044:	20000014 	.word	0x20000014
 8003048:	20002c38 	.word	0x20002c38

0800304c <LCD_DrawHLine>:
 800304c:	4b11      	ldr	r3, [pc, #68]	@ (8003094 <LCD_DrawHLine+0x48>)
 800304e:	b430      	push	{r4, r5}
 8003050:	681c      	ldr	r4, [r3, #0]
 8003052:	460d      	mov	r5, r1
 8003054:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8003058:	428b      	cmp	r3, r1
 800305a:	dc19      	bgt.n	8003090 <LCD_DrawHLine+0x44>
 800305c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8003060:	4299      	cmp	r1, r3
 8003062:	dc15      	bgt.n	8003090 <LCD_DrawHLine+0x44>
 8003064:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8003068:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800306c:	4281      	cmp	r1, r0
 800306e:	bfb8      	it	lt
 8003070:	4601      	movlt	r1, r0
 8003072:	4293      	cmp	r3, r2
 8003074:	bfa8      	it	ge
 8003076:	4613      	movge	r3, r2
 8003078:	4299      	cmp	r1, r3
 800307a:	dc09      	bgt.n	8003090 <LCD_DrawHLine+0x44>
 800307c:	7c60      	ldrb	r0, [r4, #17]
 800307e:	4a06      	ldr	r2, [pc, #24]	@ (8003098 <LCD_DrawHLine+0x4c>)
 8003080:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8003084:	68c2      	ldr	r2, [r0, #12]
 8003086:	6894      	ldr	r4, [r2, #8]
 8003088:	462a      	mov	r2, r5
 800308a:	46a4      	mov	ip, r4
 800308c:	bc30      	pop	{r4, r5}
 800308e:	4760      	bx	ip
 8003090:	bc30      	pop	{r4, r5}
 8003092:	4770      	bx	lr
 8003094:	20000014 	.word	0x20000014
 8003098:	20002c38 	.word	0x20002c38

0800309c <LCD_DrawVLine>:
 800309c:	4b12      	ldr	r3, [pc, #72]	@ (80030e8 <LCD_DrawVLine+0x4c>)
 800309e:	b430      	push	{r4, r5}
 80030a0:	681c      	ldr	r4, [r3, #0]
 80030a2:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 80030a6:	4283      	cmp	r3, r0
 80030a8:	dc1b      	bgt.n	80030e2 <LCD_DrawVLine+0x46>
 80030aa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80030ae:	4298      	cmp	r0, r3
 80030b0:	dc17      	bgt.n	80030e2 <LCD_DrawVLine+0x46>
 80030b2:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80030b6:	4299      	cmp	r1, r3
 80030b8:	bfb8      	it	lt
 80030ba:	4619      	movlt	r1, r3
 80030bc:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80030c0:	4293      	cmp	r3, r2
 80030c2:	bfa8      	it	ge
 80030c4:	4613      	movge	r3, r2
 80030c6:	4299      	cmp	r1, r3
 80030c8:	dc0b      	bgt.n	80030e2 <LCD_DrawVLine+0x46>
 80030ca:	4a08      	ldr	r2, [pc, #32]	@ (80030ec <LCD_DrawVLine+0x50>)
 80030cc:	7c64      	ldrb	r4, [r4, #17]
 80030ce:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80030d2:	68e2      	ldr	r2, [r4, #12]
 80030d4:	68d5      	ldr	r5, [r2, #12]
 80030d6:	460a      	mov	r2, r1
 80030d8:	46ac      	mov	ip, r5
 80030da:	4601      	mov	r1, r0
 80030dc:	4620      	mov	r0, r4
 80030de:	bc30      	pop	{r4, r5}
 80030e0:	4760      	bx	ip
 80030e2:	bc30      	pop	{r4, r5}
 80030e4:	4770      	bx	lr
 80030e6:	bf00      	nop
 80030e8:	20000014 	.word	0x20000014
 80030ec:	20002c38 	.word	0x20002c38

080030f0 <LCD_FillRect>:
 80030f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80030f2:	4c13      	ldr	r4, [pc, #76]	@ (8003140 <LCD_FillRect+0x50>)
 80030f4:	6824      	ldr	r4, [r4, #0]
 80030f6:	f9b4 5008 	ldrsh.w	r5, [r4, #8]
 80030fa:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 80030fe:	4285      	cmp	r5, r0
 8003100:	bfb8      	it	lt
 8003102:	4605      	movlt	r5, r0
 8003104:	4296      	cmp	r6, r2
 8003106:	bfa8      	it	ge
 8003108:	4616      	movge	r6, r2
 800310a:	42ae      	cmp	r6, r5
 800310c:	db15      	blt.n	800313a <LCD_FillRect+0x4a>
 800310e:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8003112:	428a      	cmp	r2, r1
 8003114:	bfb8      	it	lt
 8003116:	460a      	movlt	r2, r1
 8003118:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800311c:	428b      	cmp	r3, r1
 800311e:	bfa8      	it	ge
 8003120:	460b      	movge	r3, r1
 8003122:	429a      	cmp	r2, r3
 8003124:	dc09      	bgt.n	800313a <LCD_FillRect+0x4a>
 8003126:	7c60      	ldrb	r0, [r4, #17]
 8003128:	4906      	ldr	r1, [pc, #24]	@ (8003144 <LCD_FillRect+0x54>)
 800312a:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 800312e:	68c1      	ldr	r1, [r0, #12]
 8003130:	9300      	str	r3, [sp, #0]
 8003132:	690c      	ldr	r4, [r1, #16]
 8003134:	4633      	mov	r3, r6
 8003136:	4629      	mov	r1, r5
 8003138:	47a0      	blx	r4
 800313a:	b002      	add	sp, #8
 800313c:	bd70      	pop	{r4, r5, r6, pc}
 800313e:	bf00      	nop
 8003140:	20000014 	.word	0x20000014
 8003144:	20002c38 	.word	0x20002c38

08003148 <LCD__DrawBitmap_1bpp>:
 8003148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800314c:	b08f      	sub	sp, #60	@ 0x3c
 800314e:	9d18      	ldr	r5, [sp, #96]	@ 0x60
 8003150:	f8df e1c8 	ldr.w	lr, [pc, #456]	@ 800331c <LCD__DrawBitmap_1bpp+0x1d4>
 8003154:	9502      	str	r5, [sp, #8]
 8003156:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8003158:	f8de e000 	ldr.w	lr, [lr]
 800315c:	9508      	str	r5, [sp, #32]
 800315e:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 8003160:	9007      	str	r0, [sp, #28]
 8003162:	9503      	str	r5, [sp, #12]
 8003164:	460c      	mov	r4, r1
 8003166:	4617      	mov	r7, r2
 8003168:	9301      	str	r3, [sp, #4]
 800316a:	f8dd a068 	ldr.w	sl, [sp, #104]	@ 0x68
 800316e:	9e1c      	ldr	r6, [sp, #112]	@ 0x70
 8003170:	f8dd b074 	ldr.w	fp, [sp, #116]	@ 0x74
 8003174:	9d1e      	ldr	r5, [sp, #120]	@ 0x78
 8003176:	f1be 0f00 	cmp.w	lr, #0
 800317a:	d002      	beq.n	8003182 <LCD__DrawBitmap_1bpp+0x3a>
 800317c:	f8de 4000 	ldr.w	r4, [lr]
 8003180:	e054      	b.n	800322c <LCD__DrawBitmap_1bpp+0xe4>
 8003182:	9b02      	ldr	r3, [sp, #8]
 8003184:	9a08      	ldr	r2, [sp, #32]
 8003186:	4313      	orrs	r3, r2
 8003188:	2b01      	cmp	r3, #1
 800318a:	d154      	bne.n	8003236 <LCD__DrawBitmap_1bpp+0xee>
 800318c:	4b61      	ldr	r3, [pc, #388]	@ (8003314 <LCD__DrawBitmap_1bpp+0x1cc>)
 800318e:	6818      	ldr	r0, [r3, #0]
 8003190:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8003194:	1a53      	subs	r3, r2, r1
 8003196:	2b00      	cmp	r3, #0
 8003198:	dd0a      	ble.n	80031b0 <LCD__DrawBitmap_1bpp+0x68>
 800319a:	9901      	ldr	r1, [sp, #4]
 800319c:	ebc3 0e01 	rsb	lr, r3, r1
 80031a0:	f1be 0f00 	cmp.w	lr, #0
 80031a4:	f340 80b2 	ble.w	800330c <LCD__DrawBitmap_1bpp+0x1c4>
 80031a8:	9903      	ldr	r1, [sp, #12]
 80031aa:	fb01 6603 	mla	r6, r1, r3, r6
 80031ae:	e002      	b.n	80031b6 <LCD__DrawBitmap_1bpp+0x6e>
 80031b0:	460a      	mov	r2, r1
 80031b2:	f8dd e004 	ldr.w	lr, [sp, #4]
 80031b6:	9b01      	ldr	r3, [sp, #4]
 80031b8:	441c      	add	r4, r3
 80031ba:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 80031be:	3c01      	subs	r4, #1
 80031c0:	1ae4      	subs	r4, r4, r3
 80031c2:	2c00      	cmp	r4, #0
 80031c4:	dd05      	ble.n	80031d2 <LCD__DrawBitmap_1bpp+0x8a>
 80031c6:	ebc4 0e0e 	rsb	lr, r4, lr
 80031ca:	f1be 0f00 	cmp.w	lr, #0
 80031ce:	f340 809d 	ble.w	800330c <LCD__DrawBitmap_1bpp+0x1c4>
 80031d2:	9b07      	ldr	r3, [sp, #28]
 80031d4:	f9b0 100c 	ldrsh.w	r1, [r0, #12]
 80031d8:	443b      	add	r3, r7
 80031da:	3b01      	subs	r3, #1
 80031dc:	1a5b      	subs	r3, r3, r1
 80031de:	2b00      	cmp	r3, #0
 80031e0:	bfc8      	it	gt
 80031e2:	1aff      	subgt	r7, r7, r3
 80031e4:	9b07      	ldr	r3, [sp, #28]
 80031e6:	1b59      	subs	r1, r3, r5
 80031e8:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80031ec:	4299      	cmp	r1, r3
 80031ee:	da09      	bge.n	8003204 <LCD__DrawBitmap_1bpp+0xbc>
 80031f0:	1a5b      	subs	r3, r3, r1
 80031f2:	441d      	add	r5, r3
 80031f4:	1aff      	subs	r7, r7, r3
 80031f6:	f023 0307 	bic.w	r3, r3, #7
 80031fa:	eb06 06e5 	add.w	r6, r6, r5, asr #3
 80031fe:	4419      	add	r1, r3
 8003200:	f005 0507 	and.w	r5, r5, #7
 8003204:	2f00      	cmp	r7, #0
 8003206:	f340 8081 	ble.w	800330c <LCD__DrawBitmap_1bpp+0x1c4>
 800320a:	7c40      	ldrb	r0, [r0, #17]
 800320c:	4b42      	ldr	r3, [pc, #264]	@ (8003318 <LCD__DrawBitmap_1bpp+0x1d0>)
 800320e:	9c03      	ldr	r4, [sp, #12]
 8003210:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8003214:	68c3      	ldr	r3, [r0, #12]
 8003216:	f8cd b074 	str.w	fp, [sp, #116]	@ 0x74
 800321a:	951c      	str	r5, [sp, #112]	@ 0x70
 800321c:	961b      	str	r6, [sp, #108]	@ 0x6c
 800321e:	941a      	str	r4, [sp, #104]	@ 0x68
 8003220:	f8cd a064 	str.w	sl, [sp, #100]	@ 0x64
 8003224:	f8cd e060 	str.w	lr, [sp, #96]	@ 0x60
 8003228:	685c      	ldr	r4, [r3, #4]
 800322a:	463b      	mov	r3, r7
 800322c:	46a4      	mov	ip, r4
 800322e:	b00f      	add	sp, #60	@ 0x3c
 8003230:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003234:	4760      	bx	ip
 8003236:	4675      	mov	r5, lr
 8003238:	f1ca 0308 	rsb	r3, sl, #8
 800323c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800323e:	9b02      	ldr	r3, [sp, #8]
 8003240:	f8df 90d0 	ldr.w	r9, [pc, #208]	@ 8003314 <LCD__DrawBitmap_1bpp+0x1cc>
 8003244:	3b01      	subs	r3, #1
 8003246:	f8cd e014 	str.w	lr, [sp, #20]
 800324a:	930d      	str	r3, [sp, #52]	@ 0x34
 800324c:	9b05      	ldr	r3, [sp, #20]
 800324e:	9a01      	ldr	r2, [sp, #4]
 8003250:	4293      	cmp	r3, r2
 8003252:	da5b      	bge.n	800330c <LCD__DrawBitmap_1bpp+0x1c4>
 8003254:	9b08      	ldr	r3, [sp, #32]
 8003256:	18e3      	adds	r3, r4, r3
 8003258:	9309      	str	r3, [sp, #36]	@ 0x24
 800325a:	3b01      	subs	r3, #1
 800325c:	930a      	str	r3, [sp, #40]	@ 0x28
 800325e:	f8d9 3000 	ldr.w	r3, [r9]
 8003262:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003264:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8003268:	428a      	cmp	r2, r1
 800326a:	dc48      	bgt.n	80032fe <LCD__DrawBitmap_1bpp+0x1b6>
 800326c:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 8003270:	429c      	cmp	r4, r3
 8003272:	dc44      	bgt.n	80032fe <LCD__DrawBitmap_1bpp+0x1b6>
 8003274:	9b07      	ldr	r3, [sp, #28]
 8003276:	f04f 0800 	mov.w	r8, #0
 800327a:	9606      	str	r6, [sp, #24]
 800327c:	9300      	str	r3, [sp, #0]
 800327e:	f8cd 8010 	str.w	r8, [sp, #16]
 8003282:	9b04      	ldr	r3, [sp, #16]
 8003284:	42bb      	cmp	r3, r7
 8003286:	da3a      	bge.n	80032fe <LCD__DrawBitmap_1bpp+0x1b6>
 8003288:	f1b8 0f00 	cmp.w	r8, #0
 800328c:	d105      	bne.n	800329a <LCD__DrawBitmap_1bpp+0x152>
 800328e:	9b06      	ldr	r3, [sp, #24]
 8003290:	f04f 0808 	mov.w	r8, #8
 8003294:	781d      	ldrb	r5, [r3, #0]
 8003296:	3301      	adds	r3, #1
 8003298:	9306      	str	r3, [sp, #24]
 800329a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800329c:	ebca 0808 	rsb	r8, sl, r8
 80032a0:	fa45 f303 	asr.w	r3, r5, r3
 80032a4:	f013 01ff 	ands.w	r1, r3, #255	@ 0xff
 80032a8:	fa05 f50a 	lsl.w	r5, r5, sl
 80032ac:	b2ed      	uxtb	r5, r5
 80032ae:	d104      	bne.n	80032ba <LCD__DrawBitmap_1bpp+0x172>
 80032b0:	f8d9 2000 	ldr.w	r2, [r9]
 80032b4:	7c12      	ldrb	r2, [r2, #16]
 80032b6:	0792      	lsls	r2, r2, #30
 80032b8:	d419      	bmi.n	80032ee <LCD__DrawBitmap_1bpp+0x1a6>
 80032ba:	f8d9 2000 	ldr.w	r2, [r9]
 80032be:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 80032c0:	6810      	ldr	r0, [r2, #0]
 80032c2:	900c      	str	r0, [sp, #48]	@ 0x30
 80032c4:	f1bb 0f00 	cmp.w	fp, #0
 80032c8:	d002      	beq.n	80032d0 <LCD__DrawBitmap_1bpp+0x188>
 80032ca:	f85b 3021 	ldr.w	r3, [fp, r1, lsl #2]
 80032ce:	e000      	b.n	80032d2 <LCD__DrawBitmap_1bpp+0x18a>
 80032d0:	b2db      	uxtb	r3, r3
 80032d2:	6013      	str	r3, [r2, #0]
 80032d4:	9900      	ldr	r1, [sp, #0]
 80032d6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80032d8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80032da:	440a      	add	r2, r1
 80032dc:	9800      	ldr	r0, [sp, #0]
 80032de:	4621      	mov	r1, r4
 80032e0:	f7ff ff06 	bl	80030f0 <LCD_FillRect>
 80032e4:	f8d9 3000 	ldr.w	r3, [r9]
 80032e8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80032ea:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80032ec:	601a      	str	r2, [r3, #0]
 80032ee:	9b04      	ldr	r3, [sp, #16]
 80032f0:	9a02      	ldr	r2, [sp, #8]
 80032f2:	3301      	adds	r3, #1
 80032f4:	9304      	str	r3, [sp, #16]
 80032f6:	9b00      	ldr	r3, [sp, #0]
 80032f8:	4413      	add	r3, r2
 80032fa:	9300      	str	r3, [sp, #0]
 80032fc:	e7c1      	b.n	8003282 <LCD__DrawBitmap_1bpp+0x13a>
 80032fe:	9b05      	ldr	r3, [sp, #20]
 8003300:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8003302:	3301      	adds	r3, #1
 8003304:	9305      	str	r3, [sp, #20]
 8003306:	9b03      	ldr	r3, [sp, #12]
 8003308:	441e      	add	r6, r3
 800330a:	e79f      	b.n	800324c <LCD__DrawBitmap_1bpp+0x104>
 800330c:	b00f      	add	sp, #60	@ 0x3c
 800330e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003312:	bf00      	nop
 8003314:	20000014 	.word	0x20000014
 8003318:	20002c38 	.word	0x20002c38
 800331c:	20002bf4 	.word	0x20002bf4

08003320 <LCD_DrawBitmap>:
 8003320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003324:	b08f      	sub	sp, #60	@ 0x3c
 8003326:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8003328:	f8df e214 	ldr.w	lr, [pc, #532]	@ 8003540 <LCD_DrawBitmap+0x220>
 800332c:	9402      	str	r4, [sp, #8]
 800332e:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8003330:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 8003332:	9408      	str	r4, [sp, #32]
 8003334:	f8de e000 	ldr.w	lr, [lr]
 8003338:	9c1b      	ldr	r4, [sp, #108]	@ 0x6c
 800333a:	4605      	mov	r5, r0
 800333c:	9403      	str	r4, [sp, #12]
 800333e:	9100      	str	r1, [sp, #0]
 8003340:	4690      	mov	r8, r2
 8003342:	9301      	str	r3, [sp, #4]
 8003344:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 8003346:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8003348:	9604      	str	r6, [sp, #16]
 800334a:	f1be 0f00 	cmp.w	lr, #0
 800334e:	d002      	beq.n	8003356 <LCD_DrawBitmap+0x36>
 8003350:	f8de 4000 	ldr.w	r4, [lr]
 8003354:	e07a      	b.n	800344c <LCD_DrawBitmap+0x12c>
 8003356:	9b02      	ldr	r3, [sp, #8]
 8003358:	9a08      	ldr	r2, [sp, #32]
 800335a:	4313      	orrs	r3, r2
 800335c:	2b01      	cmp	r3, #1
 800335e:	d17a      	bne.n	8003456 <LCD_DrawBitmap+0x136>
 8003360:	4b75      	ldr	r3, [pc, #468]	@ (8003538 <LCD_DrawBitmap+0x218>)
 8003362:	9901      	ldr	r1, [sp, #4]
 8003364:	6818      	ldr	r0, [r3, #0]
 8003366:	9b00      	ldr	r3, [sp, #0]
 8003368:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800336c:	1ad3      	subs	r3, r2, r3
 800336e:	2b00      	cmp	r3, #0
 8003370:	dd07      	ble.n	8003382 <LCD_DrawBitmap+0x62>
 8003372:	1ac9      	subs	r1, r1, r3
 8003374:	2900      	cmp	r1, #0
 8003376:	f340 80db 	ble.w	8003530 <LCD_DrawBitmap+0x210>
 800337a:	9e03      	ldr	r6, [sp, #12]
 800337c:	fb06 4403 	mla	r4, r6, r3, r4
 8003380:	e000      	b.n	8003384 <LCD_DrawBitmap+0x64>
 8003382:	9a00      	ldr	r2, [sp, #0]
 8003384:	e89d 0048 	ldmia.w	sp, {r3, r6}
 8003388:	441e      	add	r6, r3
 800338a:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 800338e:	3e01      	subs	r6, #1
 8003390:	1af6      	subs	r6, r6, r3
 8003392:	2e00      	cmp	r6, #0
 8003394:	dd03      	ble.n	800339e <LCD_DrawBitmap+0x7e>
 8003396:	1b89      	subs	r1, r1, r6
 8003398:	2900      	cmp	r1, #0
 800339a:	f340 80c9 	ble.w	8003530 <LCD_DrawBitmap+0x210>
 800339e:	eb05 0308 	add.w	r3, r5, r8
 80033a2:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 80033a6:	3b01      	subs	r3, #1
 80033a8:	1b9b      	subs	r3, r3, r6
 80033aa:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 80033ae:	2b00      	cmp	r3, #0
 80033b0:	bfc8      	it	gt
 80033b2:	ebc3 0808 	rsbgt	r8, r3, r8
 80033b6:	42b5      	cmp	r5, r6
 80033b8:	da31      	bge.n	800341e <LCD_DrawBitmap+0xfe>
 80033ba:	1b73      	subs	r3, r6, r5
 80033bc:	2f08      	cmp	r7, #8
 80033be:	ebc3 0808 	rsb	r8, r3, r8
 80033c2:	d027      	beq.n	8003414 <LCD_DrawBitmap+0xf4>
 80033c4:	dc0d      	bgt.n	80033e2 <LCD_DrawBitmap+0xc2>
 80033c6:	2f02      	cmp	r7, #2
 80033c8:	d014      	beq.n	80033f4 <LCD_DrawBitmap+0xd4>
 80033ca:	2f04      	cmp	r7, #4
 80033cc:	d01a      	beq.n	8003404 <LCD_DrawBitmap+0xe4>
 80033ce:	2f01      	cmp	r7, #1
 80033d0:	d126      	bne.n	8003420 <LCD_DrawBitmap+0x100>
 80033d2:	f023 0607 	bic.w	r6, r3, #7
 80033d6:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 80033da:	4435      	add	r5, r6
 80033dc:	f003 0307 	and.w	r3, r3, #7
 80033e0:	e01e      	b.n	8003420 <LCD_DrawBitmap+0x100>
 80033e2:	2f18      	cmp	r7, #24
 80033e4:	d018      	beq.n	8003418 <LCD_DrawBitmap+0xf8>
 80033e6:	2f20      	cmp	r7, #32
 80033e8:	d016      	beq.n	8003418 <LCD_DrawBitmap+0xf8>
 80033ea:	2f10      	cmp	r7, #16
 80033ec:	d118      	bne.n	8003420 <LCD_DrawBitmap+0x100>
 80033ee:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80033f2:	e013      	b.n	800341c <LCD_DrawBitmap+0xfc>
 80033f4:	f023 0603 	bic.w	r6, r3, #3
 80033f8:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 80033fc:	4435      	add	r5, r6
 80033fe:	f003 0303 	and.w	r3, r3, #3
 8003402:	e00d      	b.n	8003420 <LCD_DrawBitmap+0x100>
 8003404:	f023 0601 	bic.w	r6, r3, #1
 8003408:	eb04 0463 	add.w	r4, r4, r3, asr #1
 800340c:	4435      	add	r5, r6
 800340e:	f003 0301 	and.w	r3, r3, #1
 8003412:	e005      	b.n	8003420 <LCD_DrawBitmap+0x100>
 8003414:	441c      	add	r4, r3
 8003416:	e001      	b.n	800341c <LCD_DrawBitmap+0xfc>
 8003418:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800341c:	4635      	mov	r5, r6
 800341e:	2300      	movs	r3, #0
 8003420:	f1b8 0f00 	cmp.w	r8, #0
 8003424:	f340 8084 	ble.w	8003530 <LCD_DrawBitmap+0x210>
 8003428:	7c46      	ldrb	r6, [r0, #17]
 800342a:	4844      	ldr	r0, [pc, #272]	@ (800353c <LCD_DrawBitmap+0x21c>)
 800342c:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
 8003430:	9e04      	ldr	r6, [sp, #16]
 8003432:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 8003436:	931c      	str	r3, [sp, #112]	@ 0x70
 8003438:	9b03      	ldr	r3, [sp, #12]
 800343a:	9118      	str	r1, [sp, #96]	@ 0x60
 800343c:	931a      	str	r3, [sp, #104]	@ 0x68
 800343e:	4629      	mov	r1, r5
 8003440:	4643      	mov	r3, r8
 8003442:	961d      	str	r6, [sp, #116]	@ 0x74
 8003444:	941b      	str	r4, [sp, #108]	@ 0x6c
 8003446:	9719      	str	r7, [sp, #100]	@ 0x64
 8003448:	f8de 4004 	ldr.w	r4, [lr, #4]
 800344c:	46a4      	mov	ip, r4
 800344e:	b00f      	add	sp, #60	@ 0x3c
 8003450:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003454:	4760      	bx	ip
 8003456:	46f3      	mov	fp, lr
 8003458:	f1c7 0308 	rsb	r3, r7, #8
 800345c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800345e:	9b02      	ldr	r3, [sp, #8]
 8003460:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8003538 <LCD_DrawBitmap+0x218>
 8003464:	3b01      	subs	r3, #1
 8003466:	f8cd e018 	str.w	lr, [sp, #24]
 800346a:	930d      	str	r3, [sp, #52]	@ 0x34
 800346c:	9b06      	ldr	r3, [sp, #24]
 800346e:	9a01      	ldr	r2, [sp, #4]
 8003470:	4293      	cmp	r3, r2
 8003472:	da5d      	bge.n	8003530 <LCD_DrawBitmap+0x210>
 8003474:	9a00      	ldr	r2, [sp, #0]
 8003476:	9b08      	ldr	r3, [sp, #32]
 8003478:	4413      	add	r3, r2
 800347a:	9309      	str	r3, [sp, #36]	@ 0x24
 800347c:	3b01      	subs	r3, #1
 800347e:	930a      	str	r3, [sp, #40]	@ 0x28
 8003480:	f8da 3000 	ldr.w	r3, [sl]
 8003484:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003486:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 800348a:	428a      	cmp	r2, r1
 800348c:	dc48      	bgt.n	8003520 <LCD_DrawBitmap+0x200>
 800348e:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 8003492:	9a00      	ldr	r2, [sp, #0]
 8003494:	429a      	cmp	r2, r3
 8003496:	dc43      	bgt.n	8003520 <LCD_DrawBitmap+0x200>
 8003498:	462e      	mov	r6, r5
 800349a:	f04f 0900 	mov.w	r9, #0
 800349e:	9407      	str	r4, [sp, #28]
 80034a0:	f8cd 9014 	str.w	r9, [sp, #20]
 80034a4:	9b05      	ldr	r3, [sp, #20]
 80034a6:	4543      	cmp	r3, r8
 80034a8:	da3a      	bge.n	8003520 <LCD_DrawBitmap+0x200>
 80034aa:	f1b9 0f00 	cmp.w	r9, #0
 80034ae:	d106      	bne.n	80034be <LCD_DrawBitmap+0x19e>
 80034b0:	9b07      	ldr	r3, [sp, #28]
 80034b2:	f04f 0908 	mov.w	r9, #8
 80034b6:	f893 b000 	ldrb.w	fp, [r3]
 80034ba:	3301      	adds	r3, #1
 80034bc:	9307      	str	r3, [sp, #28]
 80034be:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80034c0:	fa0b f207 	lsl.w	r2, fp, r7
 80034c4:	fa4b f303 	asr.w	r3, fp, r3
 80034c8:	f013 01ff 	ands.w	r1, r3, #255	@ 0xff
 80034cc:	fa5f fb82 	uxtb.w	fp, r2
 80034d0:	ebc7 0909 	rsb	r9, r7, r9
 80034d4:	d104      	bne.n	80034e0 <LCD_DrawBitmap+0x1c0>
 80034d6:	f8da 2000 	ldr.w	r2, [sl]
 80034da:	7c12      	ldrb	r2, [r2, #16]
 80034dc:	0792      	lsls	r2, r2, #30
 80034de:	d417      	bmi.n	8003510 <LCD_DrawBitmap+0x1f0>
 80034e0:	f8da 2000 	ldr.w	r2, [sl]
 80034e4:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 80034e6:	6810      	ldr	r0, [r2, #0]
 80034e8:	900c      	str	r0, [sp, #48]	@ 0x30
 80034ea:	9804      	ldr	r0, [sp, #16]
 80034ec:	b110      	cbz	r0, 80034f4 <LCD_DrawBitmap+0x1d4>
 80034ee:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 80034f2:	e000      	b.n	80034f6 <LCD_DrawBitmap+0x1d6>
 80034f4:	b2db      	uxtb	r3, r3
 80034f6:	6013      	str	r3, [r2, #0]
 80034f8:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80034fa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80034fc:	4432      	add	r2, r6
 80034fe:	9900      	ldr	r1, [sp, #0]
 8003500:	4630      	mov	r0, r6
 8003502:	f7ff fdf5 	bl	80030f0 <LCD_FillRect>
 8003506:	f8da 3000 	ldr.w	r3, [sl]
 800350a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800350c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800350e:	601a      	str	r2, [r3, #0]
 8003510:	9b05      	ldr	r3, [sp, #20]
 8003512:	9a02      	ldr	r2, [sp, #8]
 8003514:	3301      	adds	r3, #1
 8003516:	9305      	str	r3, [sp, #20]
 8003518:	4633      	mov	r3, r6
 800351a:	4413      	add	r3, r2
 800351c:	461e      	mov	r6, r3
 800351e:	e7c1      	b.n	80034a4 <LCD_DrawBitmap+0x184>
 8003520:	9b06      	ldr	r3, [sp, #24]
 8003522:	3301      	adds	r3, #1
 8003524:	9306      	str	r3, [sp, #24]
 8003526:	9b03      	ldr	r3, [sp, #12]
 8003528:	441c      	add	r4, r3
 800352a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800352c:	9300      	str	r3, [sp, #0]
 800352e:	e79d      	b.n	800346c <LCD_DrawBitmap+0x14c>
 8003530:	b00f      	add	sp, #60	@ 0x3c
 8003532:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003536:	bf00      	nop
 8003538:	20000014 	.word	0x20000014
 800353c:	20002c38 	.word	0x20002c38
 8003540:	20002bf4 	.word	0x20002bf4

08003544 <LCD_SetClipRectMax>:
 8003544:	4b04      	ldr	r3, [pc, #16]	@ (8003558 <LCD_SetClipRectMax+0x14>)
 8003546:	6819      	ldr	r1, [r3, #0]
 8003548:	4b04      	ldr	r3, [pc, #16]	@ (800355c <LCD_SetClipRectMax+0x18>)
 800354a:	7c4a      	ldrb	r2, [r1, #17]
 800354c:	3108      	adds	r1, #8
 800354e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8003552:	68c3      	ldr	r3, [r0, #12]
 8003554:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003556:	4718      	bx	r3
 8003558:	20000014 	.word	0x20000014
 800355c:	20002c38 	.word	0x20002c38

08003560 <emWin_LCD_Init>:
 8003560:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003562:	f7ff ffef 	bl	8003544 <LCD_SetClipRectMax>
 8003566:	f000 f8bb 	bl	80036e0 <LCD_InitColors>
 800356a:	4604      	mov	r4, r0
 800356c:	2800      	cmp	r0, #0
 800356e:	d144      	bne.n	80035fa <emWin_LCD_Init+0x9a>
 8003570:	4605      	mov	r5, r0
 8003572:	4628      	mov	r0, r5
 8003574:	f7ff faee 	bl	8002b54 <GUI_DEVICE__GetpDriver>
 8003578:	9001      	str	r0, [sp, #4]
 800357a:	b150      	cbz	r0, 8003592 <emWin_LCD_Init+0x32>
 800357c:	68c3      	ldr	r3, [r0, #12]
 800357e:	210c      	movs	r1, #12
 8003580:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003582:	a801      	add	r0, sp, #4
 8003584:	4798      	blx	r3
 8003586:	4603      	mov	r3, r0
 8003588:	2800      	cmp	r0, #0
 800358a:	d034      	beq.n	80035f6 <emWin_LCD_Init+0x96>
 800358c:	9801      	ldr	r0, [sp, #4]
 800358e:	4798      	blx	r3
 8003590:	4304      	orrs	r4, r0
 8003592:	3501      	adds	r5, #1
 8003594:	2d02      	cmp	r5, #2
 8003596:	d1ec      	bne.n	8003572 <emWin_LCD_Init+0x12>
 8003598:	bb7c      	cbnz	r4, 80035fa <emWin_LCD_Init+0x9a>
 800359a:	f000 f8f7 	bl	800378c <LCD_InitLUT>
 800359e:	4b18      	ldr	r3, [pc, #96]	@ (8003600 <emWin_LCD_Init+0xa0>)
 80035a0:	681a      	ldr	r2, [r3, #0]
 80035a2:	f06f 4370 	mvn.w	r3, #4026531840	@ 0xf0000000
 80035a6:	429a      	cmp	r2, r3
 80035a8:	d101      	bne.n	80035ae <emWin_LCD_Init+0x4e>
 80035aa:	2000      	movs	r0, #0
 80035ac:	e026      	b.n	80035fc <emWin_LCD_Init+0x9c>
 80035ae:	2401      	movs	r4, #1
 80035b0:	4620      	mov	r0, r4
 80035b2:	f7ff facf 	bl	8002b54 <GUI_DEVICE__GetpDriver>
 80035b6:	9001      	str	r0, [sp, #4]
 80035b8:	b1c8      	cbz	r0, 80035ee <emWin_LCD_Init+0x8e>
 80035ba:	4620      	mov	r0, r4
 80035bc:	f005 fc14 	bl	8008de8 <GUI_SelectLayer>
 80035c0:	2004      	movs	r0, #4
 80035c2:	f7ff fd0d 	bl	8002fe0 <LCD_SetDrawMode>
 80035c6:	f643 73ff 	movw	r3, #16383	@ 0x3fff
 80035ca:	2100      	movs	r1, #0
 80035cc:	461a      	mov	r2, r3
 80035ce:	4608      	mov	r0, r1
 80035d0:	f7ff fd8e 	bl	80030f0 <LCD_FillRect>
 80035d4:	2000      	movs	r0, #0
 80035d6:	f7ff fd03 	bl	8002fe0 <LCD_SetDrawMode>
 80035da:	9b01      	ldr	r3, [sp, #4]
 80035dc:	210e      	movs	r1, #14
 80035de:	68db      	ldr	r3, [r3, #12]
 80035e0:	a801      	add	r0, sp, #4
 80035e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035e4:	4798      	blx	r3
 80035e6:	4603      	mov	r3, r0
 80035e8:	b108      	cbz	r0, 80035ee <emWin_LCD_Init+0x8e>
 80035ea:	9801      	ldr	r0, [sp, #4]
 80035ec:	4798      	blx	r3
 80035ee:	f114 34ff 	adds.w	r4, r4, #4294967295
 80035f2:	d2dd      	bcs.n	80035b0 <emWin_LCD_Init+0x50>
 80035f4:	e7d9      	b.n	80035aa <emWin_LCD_Init+0x4a>
 80035f6:	2001      	movs	r0, #1
 80035f8:	e000      	b.n	80035fc <emWin_LCD_Init+0x9c>
 80035fa:	4620      	mov	r0, r4
 80035fc:	b003      	add	sp, #12
 80035fe:	bd30      	pop	{r4, r5, pc}
 8003600:	200000fc 	.word	0x200000fc

08003604 <LCD_Color2Index>:
 8003604:	4b04      	ldr	r3, [pc, #16]	@ (8003618 <LCD_Color2Index+0x14>)
 8003606:	681b      	ldr	r3, [r3, #0]
 8003608:	7c5a      	ldrb	r2, [r3, #17]
 800360a:	4b04      	ldr	r3, [pc, #16]	@ (800361c <LCD_Color2Index+0x18>)
 800360c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003610:	691b      	ldr	r3, [r3, #16]
 8003612:	681b      	ldr	r3, [r3, #0]
 8003614:	4718      	bx	r3
 8003616:	bf00      	nop
 8003618:	20000014 	.word	0x20000014
 800361c:	20002c38 	.word	0x20002c38

08003620 <LCD_Index2Color>:
 8003620:	4b04      	ldr	r3, [pc, #16]	@ (8003634 <LCD_Index2Color+0x14>)
 8003622:	681b      	ldr	r3, [r3, #0]
 8003624:	7c5a      	ldrb	r2, [r3, #17]
 8003626:	4b04      	ldr	r3, [pc, #16]	@ (8003638 <LCD_Index2Color+0x18>)
 8003628:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800362c:	691b      	ldr	r3, [r3, #16]
 800362e:	685b      	ldr	r3, [r3, #4]
 8003630:	4718      	bx	r3
 8003632:	bf00      	nop
 8003634:	20000014 	.word	0x20000014
 8003638:	20002c38 	.word	0x20002c38

0800363c <LCD_SetColorIndex>:
 800363c:	4b04      	ldr	r3, [pc, #16]	@ (8003650 <LCD_SetColorIndex+0x14>)
 800363e:	681b      	ldr	r3, [r3, #0]
 8003640:	7c1a      	ldrb	r2, [r3, #16]
 8003642:	0752      	lsls	r2, r2, #29
 8003644:	bf4c      	ite	mi
 8003646:	6b9b      	ldrmi	r3, [r3, #56]	@ 0x38
 8003648:	6bdb      	ldrpl	r3, [r3, #60]	@ 0x3c
 800364a:	6018      	str	r0, [r3, #0]
 800364c:	4770      	bx	lr
 800364e:	bf00      	nop
 8003650:	20000014 	.word	0x20000014

08003654 <_SetColor>:
 8003654:	b508      	push	{r3, lr}
 8003656:	4b06      	ldr	r3, [pc, #24]	@ (8003670 <_SetColor+0x1c>)
 8003658:	681b      	ldr	r3, [r3, #0]
 800365a:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800365c:	4281      	cmp	r1, r0
 800365e:	d006      	beq.n	800366e <_SetColor+0x1a>
 8003660:	6318      	str	r0, [r3, #48]	@ 0x30
 8003662:	f7ff ffcf 	bl	8003604 <LCD_Color2Index>
 8003666:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800366a:	f7ff bfe7 	b.w	800363c <LCD_SetColorIndex>
 800366e:	bd08      	pop	{r3, pc}
 8003670:	20000014 	.word	0x20000014

08003674 <LCD_SetBkColorIndex>:
 8003674:	4b04      	ldr	r3, [pc, #16]	@ (8003688 <LCD_SetBkColorIndex+0x14>)
 8003676:	681b      	ldr	r3, [r3, #0]
 8003678:	7c1a      	ldrb	r2, [r3, #16]
 800367a:	0752      	lsls	r2, r2, #29
 800367c:	bf4c      	ite	mi
 800367e:	6bdb      	ldrmi	r3, [r3, #60]	@ 0x3c
 8003680:	6b9b      	ldrpl	r3, [r3, #56]	@ 0x38
 8003682:	6018      	str	r0, [r3, #0]
 8003684:	4770      	bx	lr
 8003686:	bf00      	nop
 8003688:	20000014 	.word	0x20000014

0800368c <_SetBkColor>:
 800368c:	b508      	push	{r3, lr}
 800368e:	4b06      	ldr	r3, [pc, #24]	@ (80036a8 <_SetBkColor+0x1c>)
 8003690:	681b      	ldr	r3, [r3, #0]
 8003692:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8003694:	4281      	cmp	r1, r0
 8003696:	d006      	beq.n	80036a6 <_SetBkColor+0x1a>
 8003698:	6358      	str	r0, [r3, #52]	@ 0x34
 800369a:	f7ff ffb3 	bl	8003604 <LCD_Color2Index>
 800369e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80036a2:	f7ff bfe7 	b.w	8003674 <LCD_SetBkColorIndex>
 80036a6:	bd08      	pop	{r3, pc}
 80036a8:	20000014 	.word	0x20000014

080036ac <LCD_SetBkColor>:
 80036ac:	4b01      	ldr	r3, [pc, #4]	@ (80036b4 <LCD_SetBkColor+0x8>)
 80036ae:	681b      	ldr	r3, [r3, #0]
 80036b0:	685b      	ldr	r3, [r3, #4]
 80036b2:	4718      	bx	r3
 80036b4:	20000028 	.word	0x20000028

080036b8 <LCD_SetColor>:
 80036b8:	4b01      	ldr	r3, [pc, #4]	@ (80036c0 <LCD_SetColor+0x8>)
 80036ba:	681b      	ldr	r3, [r3, #0]
 80036bc:	681b      	ldr	r3, [r3, #0]
 80036be:	4718      	bx	r3
 80036c0:	20000028 	.word	0x20000028

080036c4 <_OnExit>:
 80036c4:	b510      	push	{r4, lr}
 80036c6:	4c04      	ldr	r4, [pc, #16]	@ (80036d8 <_OnExit+0x14>)
 80036c8:	6820      	ldr	r0, [r4, #0]
 80036ca:	f7fe fcad 	bl	8002028 <GUI_ALLOC_FreeFixedBlock>
 80036ce:	4a03      	ldr	r2, [pc, #12]	@ (80036dc <_OnExit+0x18>)
 80036d0:	2300      	movs	r3, #0
 80036d2:	6023      	str	r3, [r4, #0]
 80036d4:	6013      	str	r3, [r2, #0]
 80036d6:	bd10      	pop	{r4, pc}
 80036d8:	20002c48 	.word	0x20002c48
 80036dc:	20000204 	.word	0x20000204

080036e0 <LCD_InitColors>:
 80036e0:	b538      	push	{r3, r4, r5, lr}
 80036e2:	4d0a      	ldr	r5, [pc, #40]	@ (800370c <LCD_InitColors+0x2c>)
 80036e4:	682c      	ldr	r4, [r5, #0]
 80036e6:	b964      	cbnz	r4, 8003702 <LCD_InitColors+0x22>
 80036e8:	4b09      	ldr	r3, [pc, #36]	@ (8003710 <LCD_InitColors+0x30>)
 80036ea:	6818      	ldr	r0, [r3, #0]
 80036ec:	0080      	lsls	r0, r0, #2
 80036ee:	f7fe fd7f 	bl	80021f0 <GUI_ALLOC_GetFixedBlock>
 80036f2:	6028      	str	r0, [r5, #0]
 80036f4:	b138      	cbz	r0, 8003706 <LCD_InitColors+0x26>
 80036f6:	4807      	ldr	r0, [pc, #28]	@ (8003714 <LCD_InitColors+0x34>)
 80036f8:	4b07      	ldr	r3, [pc, #28]	@ (8003718 <LCD_InitColors+0x38>)
 80036fa:	f840 3f04 	str.w	r3, [r0, #4]!
 80036fe:	f7ff fa17 	bl	8002b30 <GUI__RegisterExit>
 8003702:	2000      	movs	r0, #0
 8003704:	bd38      	pop	{r3, r4, r5, pc}
 8003706:	2001      	movs	r0, #1
 8003708:	bd38      	pop	{r3, r4, r5, pc}
 800370a:	bf00      	nop
 800370c:	20002c48 	.word	0x20002c48
 8003710:	2000002c 	.word	0x2000002c
 8003714:	20000204 	.word	0x20000204
 8003718:	080036c5 	.word	0x080036c5

0800371c <LCD_GetpPalConvTableUncached>:
 800371c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003720:	4604      	mov	r4, r0
 8003722:	b318      	cbz	r0, 800376c <LCD_GetpPalConvTableUncached+0x50>
 8003724:	6887      	ldr	r7, [r0, #8]
 8003726:	b31f      	cbz	r7, 8003770 <LCD_GetpPalConvTableUncached+0x54>
 8003728:	4d14      	ldr	r5, [pc, #80]	@ (800377c <LCD_GetpPalConvTableUncached+0x60>)
 800372a:	6828      	ldr	r0, [r5, #0]
 800372c:	b320      	cbz	r0, 8003778 <LCD_GetpPalConvTableUncached+0x5c>
 800372e:	6822      	ldr	r2, [r4, #0]
 8003730:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 8003734:	dc1f      	bgt.n	8003776 <LCD_GetpPalConvTableUncached+0x5a>
 8003736:	4b12      	ldr	r3, [pc, #72]	@ (8003780 <LCD_GetpPalConvTableUncached+0x64>)
 8003738:	2600      	movs	r6, #0
 800373a:	681b      	ldr	r3, [r3, #0]
 800373c:	429a      	cmp	r2, r3
 800373e:	bfa8      	it	ge
 8003740:	461a      	movge	r2, r3
 8003742:	4690      	mov	r8, r2
 8003744:	4546      	cmp	r6, r8
 8003746:	da09      	bge.n	800375c <LCD_GetpPalConvTableUncached+0x40>
 8003748:	f857 0026 	ldr.w	r0, [r7, r6, lsl #2]
 800374c:	f8d5 9000 	ldr.w	r9, [r5]
 8003750:	f7ff ff58 	bl	8003604 <LCD_Color2Index>
 8003754:	f849 0026 	str.w	r0, [r9, r6, lsl #2]
 8003758:	3601      	adds	r6, #1
 800375a:	e7f3      	b.n	8003744 <LCD_GetpPalConvTableUncached+0x28>
 800375c:	4b09      	ldr	r3, [pc, #36]	@ (8003784 <LCD_GetpPalConvTableUncached+0x68>)
 800375e:	681b      	ldr	r3, [r3, #0]
 8003760:	b10b      	cbz	r3, 8003766 <LCD_GetpPalConvTableUncached+0x4a>
 8003762:	4620      	mov	r0, r4
 8003764:	4798      	blx	r3
 8003766:	6828      	ldr	r0, [r5, #0]
 8003768:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800376c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003770:	4638      	mov	r0, r7
 8003772:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003776:	2000      	movs	r0, #0
 8003778:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800377c:	20002c48 	.word	0x20002c48
 8003780:	2000002c 	.word	0x2000002c
 8003784:	20000204 	.word	0x20000204

08003788 <LCD_GetpPalConvTableBM>:
 8003788:	f7ff bfc8 	b.w	800371c <LCD_GetpPalConvTableUncached>

0800378c <LCD_InitLUT>:
 800378c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003790:	f000 f931 	bl	80039f6 <LCD_GetNumLayers>
 8003794:	4e1c      	ldr	r6, [pc, #112]	@ (8003808 <LCD_InitLUT+0x7c>)
 8003796:	4680      	mov	r8, r0
 8003798:	46b1      	mov	r9, r6
 800379a:	f8df a074 	ldr.w	sl, [pc, #116]	@ 8003810 <LCD_InitLUT+0x84>
 800379e:	2400      	movs	r4, #0
 80037a0:	4544      	cmp	r4, r8
 80037a2:	da2d      	bge.n	8003800 <LCD_InitLUT+0x74>
 80037a4:	4620      	mov	r0, r4
 80037a6:	f7ff f9d5 	bl	8002b54 <GUI_DEVICE__GetpDriver>
 80037aa:	b338      	cbz	r0, 80037fc <LCD_InitLUT+0x70>
 80037ac:	6833      	ldr	r3, [r6, #0]
 80037ae:	4620      	mov	r0, r4
 80037b0:	f893 b011 	ldrb.w	fp, [r3, #17]
 80037b4:	745c      	strb	r4, [r3, #17]
 80037b6:	f000 f861 	bl	800387c <LCD_GetBitsPerPixelEx>
 80037ba:	2808      	cmp	r0, #8
 80037bc:	dd04      	ble.n	80037c8 <LCD_InitLUT+0x3c>
 80037be:	f8d9 3000 	ldr.w	r3, [r9]
 80037c2:	f883 b011 	strb.w	fp, [r3, #17]
 80037c6:	e019      	b.n	80037fc <LCD_InitLUT+0x70>
 80037c8:	f85a 3024 	ldr.w	r3, [sl, r4, lsl #2]
 80037cc:	691a      	ldr	r2, [r3, #16]
 80037ce:	4b0f      	ldr	r3, [pc, #60]	@ (800380c <LCD_InitLUT+0x80>)
 80037d0:	429a      	cmp	r2, r3
 80037d2:	d0f4      	beq.n	80037be <LCD_InitLUT+0x32>
 80037d4:	4620      	mov	r0, r4
 80037d6:	f000 f854 	bl	8003882 <LCD_GetNumColorsEx>
 80037da:	4603      	mov	r3, r0
 80037dc:	2500      	movs	r5, #0
 80037de:	429d      	cmp	r5, r3
 80037e0:	daed      	bge.n	80037be <LCD_InitLUT+0x32>
 80037e2:	b2ef      	uxtb	r7, r5
 80037e4:	4638      	mov	r0, r7
 80037e6:	9301      	str	r3, [sp, #4]
 80037e8:	f7ff ff1a 	bl	8003620 <LCD_Index2Color>
 80037ec:	4639      	mov	r1, r7
 80037ee:	4602      	mov	r2, r0
 80037f0:	4620      	mov	r0, r4
 80037f2:	f000 f92f 	bl	8003a54 <LCD_SetLUTEntryEx>
 80037f6:	3501      	adds	r5, #1
 80037f8:	9b01      	ldr	r3, [sp, #4]
 80037fa:	e7f0      	b.n	80037de <LCD_InitLUT+0x52>
 80037fc:	3401      	adds	r4, #1
 80037fe:	e7cf      	b.n	80037a0 <LCD_InitLUT+0x14>
 8003800:	b003      	add	sp, #12
 8003802:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003806:	bf00      	nop
 8003808:	20000014 	.word	0x20000014
 800380c:	0800beb8 	.word	0x0800beb8
 8003810:	20002c38 	.word	0x20002c38

08003814 <LCD_GetColorIndex>:
 8003814:	4b02      	ldr	r3, [pc, #8]	@ (8003820 <LCD_GetColorIndex+0xc>)
 8003816:	681b      	ldr	r3, [r3, #0]
 8003818:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800381a:	6818      	ldr	r0, [r3, #0]
 800381c:	4770      	bx	lr
 800381e:	bf00      	nop
 8003820:	20000014 	.word	0x20000014

08003824 <_GetDevProp>:
 8003824:	2801      	cmp	r0, #1
 8003826:	b510      	push	{r4, lr}
 8003828:	460c      	mov	r4, r1
 800382a:	dc08      	bgt.n	800383e <_GetDevProp+0x1a>
 800382c:	f7ff f992 	bl	8002b54 <GUI_DEVICE__GetpDriver>
 8003830:	b128      	cbz	r0, 800383e <_GetDevProp+0x1a>
 8003832:	68c3      	ldr	r3, [r0, #12]
 8003834:	4621      	mov	r1, r4
 8003836:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800383a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800383c:	4718      	bx	r3
 800383e:	2000      	movs	r0, #0
 8003840:	bd10      	pop	{r4, pc}

08003842 <_GetMaxValue>:
 8003842:	b538      	push	{r3, r4, r5, lr}
 8003844:	4601      	mov	r1, r0
 8003846:	4605      	mov	r5, r0
 8003848:	2001      	movs	r0, #1
 800384a:	f7ff ffeb 	bl	8003824 <_GetDevProp>
 800384e:	4629      	mov	r1, r5
 8003850:	4604      	mov	r4, r0
 8003852:	2000      	movs	r0, #0
 8003854:	f7ff ffe6 	bl	8003824 <_GetDevProp>
 8003858:	42a0      	cmp	r0, r4
 800385a:	bfb8      	it	lt
 800385c:	4620      	movlt	r0, r4
 800385e:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 8003862:	bd38      	pop	{r3, r4, r5, pc}

08003864 <LCD_GetXSizeEx>:
 8003864:	2101      	movs	r1, #1
 8003866:	f7ff bfdd 	b.w	8003824 <_GetDevProp>

0800386a <LCD_GetYSizeEx>:
 800386a:	2102      	movs	r1, #2
 800386c:	f7ff bfda 	b.w	8003824 <_GetDevProp>

08003870 <LCD_GetVXSizeEx>:
 8003870:	2103      	movs	r1, #3
 8003872:	f7ff bfd7 	b.w	8003824 <_GetDevProp>

08003876 <LCD_GetVYSizeEx>:
 8003876:	2104      	movs	r1, #4
 8003878:	f7ff bfd4 	b.w	8003824 <_GetDevProp>

0800387c <LCD_GetBitsPerPixelEx>:
 800387c:	2108      	movs	r1, #8
 800387e:	f7ff bfd1 	b.w	8003824 <_GetDevProp>

08003882 <LCD_GetNumColorsEx>:
 8003882:	2109      	movs	r1, #9
 8003884:	f7ff bfce 	b.w	8003824 <_GetDevProp>

08003888 <LCD_GetXSize>:
 8003888:	4b02      	ldr	r3, [pc, #8]	@ (8003894 <LCD_GetXSize+0xc>)
 800388a:	681b      	ldr	r3, [r3, #0]
 800388c:	7c58      	ldrb	r0, [r3, #17]
 800388e:	f7ff bfe9 	b.w	8003864 <LCD_GetXSizeEx>
 8003892:	bf00      	nop
 8003894:	20000014 	.word	0x20000014

08003898 <LCD_GetYSize>:
 8003898:	4b02      	ldr	r3, [pc, #8]	@ (80038a4 <LCD_GetYSize+0xc>)
 800389a:	681b      	ldr	r3, [r3, #0]
 800389c:	7c58      	ldrb	r0, [r3, #17]
 800389e:	f7ff bfe4 	b.w	800386a <LCD_GetYSizeEx>
 80038a2:	bf00      	nop
 80038a4:	20000014 	.word	0x20000014

080038a8 <LCD_GetNumColors>:
 80038a8:	4b02      	ldr	r3, [pc, #8]	@ (80038b4 <LCD_GetNumColors+0xc>)
 80038aa:	681b      	ldr	r3, [r3, #0]
 80038ac:	7c58      	ldrb	r0, [r3, #17]
 80038ae:	f7ff bfe8 	b.w	8003882 <LCD_GetNumColorsEx>
 80038b2:	bf00      	nop
 80038b4:	20000014 	.word	0x20000014

080038b8 <GUI_GetBitsPerPixelEx>:
 80038b8:	4b03      	ldr	r3, [pc, #12]	@ (80038c8 <GUI_GetBitsPerPixelEx+0x10>)
 80038ba:	2108      	movs	r1, #8
 80038bc:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 80038c0:	68c3      	ldr	r3, [r0, #12]
 80038c2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80038c4:	4718      	bx	r3
 80038c6:	bf00      	nop
 80038c8:	20002c38 	.word	0x20002c38

080038cc <LCD_GetPaletteEx>:
 80038cc:	b510      	push	{r4, lr}
 80038ce:	f7ff f941 	bl	8002b54 <GUI_DEVICE__GetpDriver>
 80038d2:	b128      	cbz	r0, 80038e0 <LCD_GetPaletteEx+0x14>
 80038d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80038d8:	68c3      	ldr	r3, [r0, #12]
 80038da:	2102      	movs	r1, #2
 80038dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80038de:	4718      	bx	r3
 80038e0:	bd10      	pop	{r4, pc}
	...

080038e4 <LCD_GetPalette>:
 80038e4:	4b02      	ldr	r3, [pc, #8]	@ (80038f0 <LCD_GetPalette+0xc>)
 80038e6:	681b      	ldr	r3, [r3, #0]
 80038e8:	7c58      	ldrb	r0, [r3, #17]
 80038ea:	f7ff bfef 	b.w	80038cc <LCD_GetPaletteEx>
 80038ee:	bf00      	nop
 80038f0:	20000014 	.word	0x20000014

080038f4 <GUI_GetpfIndex2ColorEx>:
 80038f4:	4b02      	ldr	r3, [pc, #8]	@ (8003900 <GUI_GetpfIndex2ColorEx+0xc>)
 80038f6:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80038fa:	691b      	ldr	r3, [r3, #16]
 80038fc:	6858      	ldr	r0, [r3, #4]
 80038fe:	4770      	bx	lr
 8003900:	20002c38 	.word	0x20002c38

08003904 <GUI_GetpfColor2IndexEx>:
 8003904:	4b02      	ldr	r3, [pc, #8]	@ (8003910 <GUI_GetpfColor2IndexEx+0xc>)
 8003906:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800390a:	691b      	ldr	r3, [r3, #16]
 800390c:	6818      	ldr	r0, [r3, #0]
 800390e:	4770      	bx	lr
 8003910:	20002c38 	.word	0x20002c38

08003914 <LCD_GetXSizeMax>:
 8003914:	2001      	movs	r0, #1
 8003916:	f7ff bf94 	b.w	8003842 <_GetMaxValue>

0800391a <LCD_GetYSizeMax>:
 800391a:	2002      	movs	r0, #2
 800391c:	f7ff bf91 	b.w	8003842 <_GetMaxValue>

08003920 <LCD_GetVXSizeMax>:
 8003920:	2003      	movs	r0, #3
 8003922:	f7ff bf8e 	b.w	8003842 <_GetMaxValue>
	...

08003928 <LCD_SetDisplaySize>:
 8003928:	4b01      	ldr	r3, [pc, #4]	@ (8003930 <LCD_SetDisplaySize+0x8>)
 800392a:	e883 0003 	stmia.w	r3, {r0, r1}
 800392e:	4770      	bx	lr
 8003930:	20000210 	.word	0x20000210

08003934 <LCD_GetXSizeDisplay>:
 8003934:	4b01      	ldr	r3, [pc, #4]	@ (800393c <LCD_GetXSizeDisplay+0x8>)
 8003936:	6818      	ldr	r0, [r3, #0]
 8003938:	4770      	bx	lr
 800393a:	bf00      	nop
 800393c:	20000210 	.word	0x20000210

08003940 <LCD_GetYSizeDisplay>:
 8003940:	4b01      	ldr	r3, [pc, #4]	@ (8003948 <LCD_GetYSizeDisplay+0x8>)
 8003942:	6858      	ldr	r0, [r3, #4]
 8003944:	4770      	bx	lr
 8003946:	bf00      	nop
 8003948:	20000210 	.word	0x20000210

0800394c <LCD__GetBPP>:
 800394c:	2800      	cmp	r0, #0
 800394e:	d03b      	beq.n	80039c8 <LCD__GetBPP+0x7c>
 8003950:	f030 0301 	bics.w	r3, r0, #1
 8003954:	d029      	beq.n	80039aa <LCD__GetBPP+0x5e>
 8003956:	f030 0303 	bics.w	r3, r0, #3
 800395a:	d028      	beq.n	80039ae <LCD__GetBPP+0x62>
 800395c:	f030 0307 	bics.w	r3, r0, #7
 8003960:	d027      	beq.n	80039b2 <LCD__GetBPP+0x66>
 8003962:	f030 030f 	bics.w	r3, r0, #15
 8003966:	d026      	beq.n	80039b6 <LCD__GetBPP+0x6a>
 8003968:	f030 031f 	bics.w	r3, r0, #31
 800396c:	d025      	beq.n	80039ba <LCD__GetBPP+0x6e>
 800396e:	f030 03ff 	bics.w	r3, r0, #255	@ 0xff
 8003972:	d024      	beq.n	80039be <LCD__GetBPP+0x72>
 8003974:	f420 73ff 	bic.w	r3, r0, #510	@ 0x1fe
 8003978:	f023 0301 	bic.w	r3, r3, #1
 800397c:	b30b      	cbz	r3, 80039c2 <LCD__GetBPP+0x76>
 800397e:	f420 637f 	bic.w	r3, r0, #4080	@ 0xff0
 8003982:	f023 030f 	bic.w	r3, r3, #15
 8003986:	b1e3      	cbz	r3, 80039c2 <LCD__GetBPP+0x76>
 8003988:	f420 43ff 	bic.w	r3, r0, #32640	@ 0x7f80
 800398c:	f023 037f 	bic.w	r3, r3, #127	@ 0x7f
 8003990:	b1bb      	cbz	r3, 80039c2 <LCD__GetBPP+0x76>
 8003992:	0c03      	lsrs	r3, r0, #16
 8003994:	041b      	lsls	r3, r3, #16
 8003996:	b1a3      	cbz	r3, 80039c2 <LCD__GetBPP+0x76>
 8003998:	0c83      	lsrs	r3, r0, #18
 800399a:	049b      	lsls	r3, r3, #18
 800399c:	b19b      	cbz	r3, 80039c6 <LCD__GetBPP+0x7a>
 800399e:	f010 4f7f 	tst.w	r0, #4278190080	@ 0xff000000
 80039a2:	bf0c      	ite	eq
 80039a4:	2018      	moveq	r0, #24
 80039a6:	2020      	movne	r0, #32
 80039a8:	4770      	bx	lr
 80039aa:	2001      	movs	r0, #1
 80039ac:	4770      	bx	lr
 80039ae:	2002      	movs	r0, #2
 80039b0:	4770      	bx	lr
 80039b2:	2003      	movs	r0, #3
 80039b4:	4770      	bx	lr
 80039b6:	2004      	movs	r0, #4
 80039b8:	4770      	bx	lr
 80039ba:	2005      	movs	r0, #5
 80039bc:	4770      	bx	lr
 80039be:	2008      	movs	r0, #8
 80039c0:	4770      	bx	lr
 80039c2:	2010      	movs	r0, #16
 80039c4:	4770      	bx	lr
 80039c6:	2012      	movs	r0, #18
 80039c8:	4770      	bx	lr

080039ca <LCD__GetBPPDevice>:
 80039ca:	b508      	push	{r3, lr}
 80039cc:	f7ff ffbe 	bl	800394c <LCD__GetBPP>
 80039d0:	2801      	cmp	r0, #1
 80039d2:	d00f      	beq.n	80039f4 <LCD__GetBPPDevice+0x2a>
 80039d4:	1e83      	subs	r3, r0, #2
 80039d6:	2b06      	cmp	r3, #6
 80039d8:	d909      	bls.n	80039ee <LCD__GetBPPDevice+0x24>
 80039da:	f1a0 0309 	sub.w	r3, r0, #9
 80039de:	2b07      	cmp	r3, #7
 80039e0:	d907      	bls.n	80039f2 <LCD__GetBPPDevice+0x28>
 80039e2:	3811      	subs	r0, #17
 80039e4:	280f      	cmp	r0, #15
 80039e6:	bf8c      	ite	hi
 80039e8:	2000      	movhi	r0, #0
 80039ea:	2020      	movls	r0, #32
 80039ec:	bd08      	pop	{r3, pc}
 80039ee:	2008      	movs	r0, #8
 80039f0:	bd08      	pop	{r3, pc}
 80039f2:	2010      	movs	r0, #16
 80039f4:	bd08      	pop	{r3, pc}

080039f6 <LCD_GetNumLayers>:
 80039f6:	b510      	push	{r4, lr}
 80039f8:	2000      	movs	r0, #0
 80039fa:	f7ff f8ab 	bl	8002b54 <GUI_DEVICE__GetpDriver>
 80039fe:	1c04      	adds	r4, r0, #0
 8003a00:	f04f 0001 	mov.w	r0, #1
 8003a04:	bf18      	it	ne
 8003a06:	2401      	movne	r4, #1
 8003a08:	f7ff f8a4 	bl	8002b54 <GUI_DEVICE__GetpDriver>
 8003a0c:	b100      	cbz	r0, 8003a10 <LCD_GetNumLayers+0x1a>
 8003a0e:	3401      	adds	r4, #1
 8003a10:	4620      	mov	r0, r4
 8003a12:	bd10      	pop	{r4, pc}

08003a14 <LCD_SelectLCD>:
 8003a14:	4b0d      	ldr	r3, [pc, #52]	@ (8003a4c <LCD_SelectLCD+0x38>)
 8003a16:	b510      	push	{r4, lr}
 8003a18:	461c      	mov	r4, r3
 8003a1a:	681a      	ldr	r2, [r3, #0]
 8003a1c:	7c51      	ldrb	r1, [r2, #17]
 8003a1e:	4a0c      	ldr	r2, [pc, #48]	@ (8003a50 <LCD_SelectLCD+0x3c>)
 8003a20:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 8003a24:	b140      	cbz	r0, 8003a38 <LCD_SelectLCD+0x24>
 8003a26:	68c3      	ldr	r3, [r0, #12]
 8003a28:	b113      	cbz	r3, 8003a30 <LCD_SelectLCD+0x1c>
 8003a2a:	681b      	ldr	r3, [r3, #0]
 8003a2c:	2b04      	cmp	r3, #4
 8003a2e:	d001      	beq.n	8003a34 <LCD_SelectLCD+0x20>
 8003a30:	6800      	ldr	r0, [r0, #0]
 8003a32:	e7f7      	b.n	8003a24 <LCD_SelectLCD+0x10>
 8003a34:	f7ff f8c6 	bl	8002bc4 <GUI_DEVICE_Unlink>
 8003a38:	6823      	ldr	r3, [r4, #0]
 8003a3a:	2200      	movs	r2, #0
 8003a3c:	661a      	str	r2, [r3, #96]	@ 0x60
 8003a3e:	f103 0208 	add.w	r2, r3, #8
 8003a42:	615a      	str	r2, [r3, #20]
 8003a44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003a48:	f7ff bd7c 	b.w	8003544 <LCD_SetClipRectMax>
 8003a4c:	20000014 	.word	0x20000014
 8003a50:	20002c38 	.word	0x20002c38

08003a54 <LCD_SetLUTEntryEx>:
 8003a54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003a56:	460c      	mov	r4, r1
 8003a58:	4615      	mov	r5, r2
 8003a5a:	f7ff f87b 	bl	8002b54 <GUI_DEVICE__GetpDriver>
 8003a5e:	9001      	str	r0, [sp, #4]
 8003a60:	b908      	cbnz	r0, 8003a66 <LCD_SetLUTEntryEx+0x12>
 8003a62:	2001      	movs	r0, #1
 8003a64:	e00c      	b.n	8003a80 <LCD_SetLUTEntryEx+0x2c>
 8003a66:	68c3      	ldr	r3, [r0, #12]
 8003a68:	2110      	movs	r1, #16
 8003a6a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003a6c:	a801      	add	r0, sp, #4
 8003a6e:	4798      	blx	r3
 8003a70:	4603      	mov	r3, r0
 8003a72:	2800      	cmp	r0, #0
 8003a74:	d0f5      	beq.n	8003a62 <LCD_SetLUTEntryEx+0xe>
 8003a76:	9801      	ldr	r0, [sp, #4]
 8003a78:	462a      	mov	r2, r5
 8003a7a:	4621      	mov	r1, r4
 8003a7c:	4798      	blx	r3
 8003a7e:	2000      	movs	r0, #0
 8003a80:	b003      	add	sp, #12
 8003a82:	bd30      	pop	{r4, r5, pc}

08003a84 <LCD_SetSizeEx>:
 8003a84:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003a86:	460c      	mov	r4, r1
 8003a88:	4615      	mov	r5, r2
 8003a8a:	f7ff f863 	bl	8002b54 <GUI_DEVICE__GetpDriver>
 8003a8e:	9001      	str	r0, [sp, #4]
 8003a90:	b908      	cbnz	r0, 8003a96 <LCD_SetSizeEx+0x12>
 8003a92:	2001      	movs	r0, #1
 8003a94:	e00c      	b.n	8003ab0 <LCD_SetSizeEx+0x2c>
 8003a96:	68c3      	ldr	r3, [r0, #12]
 8003a98:	210b      	movs	r1, #11
 8003a9a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003a9c:	a801      	add	r0, sp, #4
 8003a9e:	4798      	blx	r3
 8003aa0:	4603      	mov	r3, r0
 8003aa2:	2800      	cmp	r0, #0
 8003aa4:	d0f5      	beq.n	8003a92 <LCD_SetSizeEx+0xe>
 8003aa6:	9801      	ldr	r0, [sp, #4]
 8003aa8:	462a      	mov	r2, r5
 8003aaa:	4621      	mov	r1, r4
 8003aac:	4798      	blx	r3
 8003aae:	2000      	movs	r0, #0
 8003ab0:	b003      	add	sp, #12
 8003ab2:	bd30      	pop	{r4, r5, pc}

08003ab4 <LCD_SetVSizeEx>:
 8003ab4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003ab6:	460c      	mov	r4, r1
 8003ab8:	4615      	mov	r5, r2
 8003aba:	f7ff f84b 	bl	8002b54 <GUI_DEVICE__GetpDriver>
 8003abe:	9001      	str	r0, [sp, #4]
 8003ac0:	b908      	cbnz	r0, 8003ac6 <LCD_SetVSizeEx+0x12>
 8003ac2:	2001      	movs	r0, #1
 8003ac4:	e00c      	b.n	8003ae0 <LCD_SetVSizeEx+0x2c>
 8003ac6:	68c3      	ldr	r3, [r0, #12]
 8003ac8:	210a      	movs	r1, #10
 8003aca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003acc:	a801      	add	r0, sp, #4
 8003ace:	4798      	blx	r3
 8003ad0:	4603      	mov	r3, r0
 8003ad2:	2800      	cmp	r0, #0
 8003ad4:	d0f5      	beq.n	8003ac2 <LCD_SetVSizeEx+0xe>
 8003ad6:	9801      	ldr	r0, [sp, #4]
 8003ad8:	462a      	mov	r2, r5
 8003ada:	4621      	mov	r1, r4
 8003adc:	4798      	blx	r3
 8003ade:	2000      	movs	r0, #0
 8003ae0:	b003      	add	sp, #12
 8003ae2:	bd30      	pop	{r4, r5, pc}

08003ae4 <LCD_UpdateColorIndices>:
 8003ae4:	b510      	push	{r4, lr}
 8003ae6:	4c07      	ldr	r4, [pc, #28]	@ (8003b04 <LCD_UpdateColorIndices+0x20>)
 8003ae8:	6823      	ldr	r3, [r4, #0]
 8003aea:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 8003aec:	f7ff fd8a 	bl	8003604 <LCD_Color2Index>
 8003af0:	f7ff fda4 	bl	800363c <LCD_SetColorIndex>
 8003af4:	6823      	ldr	r3, [r4, #0]
 8003af6:	6b58      	ldr	r0, [r3, #52]	@ 0x34
 8003af8:	f7ff fd84 	bl	8003604 <LCD_Color2Index>
 8003afc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003b00:	f7ff bdb8 	b.w	8003674 <LCD_SetBkColorIndex>
 8003b04:	20000014 	.word	0x20000014

08003b08 <_Log2PhysY_X1Y0S0>:
 8003b08:	4610      	mov	r0, r2
 8003b0a:	4770      	bx	lr

08003b0c <_Log2PhysY_X1Y1S0>:
 8003b0c:	6840      	ldr	r0, [r0, #4]
 8003b0e:	1a80      	subs	r0, r0, r2
 8003b10:	3801      	subs	r0, #1
 8003b12:	4770      	bx	lr

08003b14 <_Log2PhysY_X1Y0S1>:
 8003b14:	4608      	mov	r0, r1
 8003b16:	4770      	bx	lr

08003b18 <_Log2PhysY_X1Y1S1>:
 8003b18:	6800      	ldr	r0, [r0, #0]
 8003b1a:	1a40      	subs	r0, r0, r1
 8003b1c:	3801      	subs	r0, #1
 8003b1e:	4770      	bx	lr

08003b20 <_SetPixelIndex>:
 8003b20:	b410      	push	{r4}
 8003b22:	6884      	ldr	r4, [r0, #8]
 8003b24:	f8d4 40f8 	ldr.w	r4, [r4, #248]	@ 0xf8
 8003b28:	46a4      	mov	ip, r4
 8003b2a:	bc10      	pop	{r4}
 8003b2c:	4760      	bx	ip

08003b2e <_GetPixelIndex>:
 8003b2e:	6883      	ldr	r3, [r0, #8]
 8003b30:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8003b34:	4718      	bx	r3

08003b36 <_XorPixel>:
 8003b36:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003b38:	4616      	mov	r6, r2
 8003b3a:	4604      	mov	r4, r0
 8003b3c:	460d      	mov	r5, r1
 8003b3e:	6887      	ldr	r7, [r0, #8]
 8003b40:	f7ff fff5 	bl	8003b2e <_GetPixelIndex>
 8003b44:	9001      	str	r0, [sp, #4]
 8003b46:	9a01      	ldr	r2, [sp, #4]
 8003b48:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003b4a:	4629      	mov	r1, r5
 8003b4c:	4053      	eors	r3, r2
 8003b4e:	4620      	mov	r0, r4
 8003b50:	4632      	mov	r2, r6
 8003b52:	f7ff ffe5 	bl	8003b20 <_SetPixelIndex>
 8003b56:	b003      	add	sp, #12
 8003b58:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003b5a <_DrawHLine>:
 8003b5a:	b513      	push	{r0, r1, r4, lr}
 8003b5c:	6884      	ldr	r4, [r0, #8]
 8003b5e:	9200      	str	r2, [sp, #0]
 8003b60:	f8d4 40f0 	ldr.w	r4, [r4, #240]	@ 0xf0
 8003b64:	47a0      	blx	r4
 8003b66:	b002      	add	sp, #8
 8003b68:	bd10      	pop	{r4, pc}

08003b6a <_DrawVLine>:
 8003b6a:	b513      	push	{r0, r1, r4, lr}
 8003b6c:	6884      	ldr	r4, [r0, #8]
 8003b6e:	9300      	str	r3, [sp, #0]
 8003b70:	f8d4 40f0 	ldr.w	r4, [r4, #240]	@ 0xf0
 8003b74:	460b      	mov	r3, r1
 8003b76:	47a0      	blx	r4
 8003b78:	b002      	add	sp, #8
 8003b7a:	bd10      	pop	{r4, pc}

08003b7c <_FillRect>:
 8003b7c:	b410      	push	{r4}
 8003b7e:	6884      	ldr	r4, [r0, #8]
 8003b80:	f8d4 40f0 	ldr.w	r4, [r4, #240]	@ 0xf0
 8003b84:	46a4      	mov	ip, r4
 8003b86:	bc10      	pop	{r4}
 8003b88:	4760      	bx	ip

08003b8a <_DrawBitmap>:
 8003b8a:	b430      	push	{r4, r5}
 8003b8c:	6884      	ldr	r4, [r0, #8]
 8003b8e:	f8d4 40ec 	ldr.w	r4, [r4, #236]	@ 0xec
 8003b92:	46a4      	mov	ip, r4
 8003b94:	bc30      	pop	{r4, r5}
 8003b96:	4760      	bx	ip

08003b98 <_GetDevFunc_SetRect>:
 8003b98:	4770      	bx	lr
	...

08003b9c <_GetDevFunc_SetRectOutside>:
 8003b9c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003b9e:	9e07      	ldr	r6, [sp, #28]
 8003ba0:	6884      	ldr	r4, [r0, #8]
 8003ba2:	4d0c      	ldr	r5, [pc, #48]	@ (8003bd4 <_GetDevFunc_SetRectOutside+0x38>)
 8003ba4:	b176      	cbz	r6, 8003bc4 <_GetDevFunc_SetRectOutside+0x28>
 8003ba6:	6828      	ldr	r0, [r5, #0]
 8003ba8:	b988      	cbnz	r0, 8003bce <_GetDevFunc_SetRectOutside+0x32>
 8003baa:	9806      	ldr	r0, [sp, #24]
 8003bac:	9000      	str	r0, [sp, #0]
 8003bae:	f8d4 60a8 	ldr.w	r6, [r4, #168]	@ 0xa8
 8003bb2:	4620      	mov	r0, r4
 8003bb4:	47b0      	blx	r6
 8003bb6:	f8d4 30a8 	ldr.w	r3, [r4, #168]	@ 0xa8
 8003bba:	602b      	str	r3, [r5, #0]
 8003bbc:	4b06      	ldr	r3, [pc, #24]	@ (8003bd8 <_GetDevFunc_SetRectOutside+0x3c>)
 8003bbe:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
 8003bc2:	e004      	b.n	8003bce <_GetDevFunc_SetRectOutside+0x32>
 8003bc4:	682b      	ldr	r3, [r5, #0]
 8003bc6:	b113      	cbz	r3, 8003bce <_GetDevFunc_SetRectOutside+0x32>
 8003bc8:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
 8003bcc:	602e      	str	r6, [r5, #0]
 8003bce:	b002      	add	sp, #8
 8003bd0:	bd70      	pop	{r4, r5, r6, pc}
 8003bd2:	bf00      	nop
 8003bd4:	20000218 	.word	0x20000218
 8003bd8:	08003b99 	.word	0x08003b99

08003bdc <_ReadPixelCust_16bpp>:
 8003bdc:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 8003bde:	f8d0 30dc 	ldr.w	r3, [r0, #220]	@ 0xdc
 8003be2:	6990      	ldr	r0, [r2, #24]
 8003be4:	4718      	bx	r3

08003be6 <_ReadPixelCust_18bpp>:
 8003be6:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 8003be8:	f8d0 30e0 	ldr.w	r3, [r0, #224]	@ 0xe0
 8003bec:	6990      	ldr	r0, [r2, #24]
 8003bee:	4718      	bx	r3

08003bf0 <_ReadRectCust_16bpp>:
 8003bf0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8003bf4:	4691      	mov	r9, r2
 8003bf6:	468a      	mov	sl, r1
 8003bf8:	4698      	mov	r8, r3
 8003bfa:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003bfc:	6885      	ldr	r5, [r0, #8]
 8003bfe:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8003c00:	9400      	str	r4, [sp, #0]
 8003c02:	4628      	mov	r0, r5
 8003c04:	f8d5 60a8 	ldr.w	r6, [r5, #168]	@ 0xa8
 8003c08:	47b0      	blx	r6
 8003c0a:	4639      	mov	r1, r7
 8003c0c:	ebc9 0404 	rsb	r4, r9, r4
 8003c10:	ebca 0608 	rsb	r6, sl, r8
 8003c14:	1c62      	adds	r2, r4, #1
 8003c16:	6c28      	ldr	r0, [r5, #64]	@ 0x40
 8003c18:	fb06 2202 	mla	r2, r6, r2, r2
 8003c1c:	f8d5 30e4 	ldr.w	r3, [r5, #228]	@ 0xe4
 8003c20:	6980      	ldr	r0, [r0, #24]
 8003c22:	b002      	add	sp, #8
 8003c24:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003c28:	4718      	bx	r3

08003c2a <_ReadRectCust_18bpp>:
 8003c2a:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8003c2e:	4691      	mov	r9, r2
 8003c30:	468a      	mov	sl, r1
 8003c32:	4698      	mov	r8, r3
 8003c34:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003c36:	6885      	ldr	r5, [r0, #8]
 8003c38:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8003c3a:	9400      	str	r4, [sp, #0]
 8003c3c:	4628      	mov	r0, r5
 8003c3e:	f8d5 60a8 	ldr.w	r6, [r5, #168]	@ 0xa8
 8003c42:	47b0      	blx	r6
 8003c44:	4639      	mov	r1, r7
 8003c46:	ebc9 0404 	rsb	r4, r9, r4
 8003c4a:	ebca 0608 	rsb	r6, sl, r8
 8003c4e:	1c62      	adds	r2, r4, #1
 8003c50:	6c28      	ldr	r0, [r5, #64]	@ 0x40
 8003c52:	fb06 2202 	mla	r2, r6, r2, r2
 8003c56:	f8d5 30e8 	ldr.w	r3, [r5, #232]	@ 0xe8
 8003c5a:	6980      	ldr	r0, [r0, #24]
 8003c5c:	b002      	add	sp, #8
 8003c5e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003c62:	4718      	bx	r3

08003c64 <_GetDevFunc>:
 8003c64:	3901      	subs	r1, #1
 8003c66:	2917      	cmp	r1, #23
 8003c68:	d828      	bhi.n	8003cbc <_GetDevFunc+0x58>
 8003c6a:	e8df f001 	tbb	[pc, r1]
 8003c6e:	2714      	.short	0x2714
 8003c70:	27272727 	.word	0x27272727
 8003c74:	0e272727 	.word	0x0e272727
 8003c78:	29191210 	.word	0x29191210
 8003c7c:	2727270c 	.word	0x2727270c
 8003c80:	23272727 	.word	0x23272727
 8003c84:	251e      	.short	0x251e
 8003c86:	480f      	ldr	r0, [pc, #60]	@ (8003cc4 <_GetDevFunc+0x60>)
 8003c88:	4770      	bx	lr
 8003c8a:	480f      	ldr	r0, [pc, #60]	@ (8003cc8 <_GetDevFunc+0x64>)
 8003c8c:	4770      	bx	lr
 8003c8e:	480f      	ldr	r0, [pc, #60]	@ (8003ccc <_GetDevFunc+0x68>)
 8003c90:	4770      	bx	lr
 8003c92:	480f      	ldr	r0, [pc, #60]	@ (8003cd0 <_GetDevFunc+0x6c>)
 8003c94:	4770      	bx	lr
 8003c96:	6803      	ldr	r3, [r0, #0]
 8003c98:	689b      	ldr	r3, [r3, #8]
 8003c9a:	f8d3 0104 	ldr.w	r0, [r3, #260]	@ 0x104
 8003c9e:	4770      	bx	lr
 8003ca0:	6803      	ldr	r3, [r0, #0]
 8003ca2:	689b      	ldr	r3, [r3, #8]
 8003ca4:	f8d3 00fc 	ldr.w	r0, [r3, #252]	@ 0xfc
 8003ca8:	4770      	bx	lr
 8003caa:	6803      	ldr	r3, [r0, #0]
 8003cac:	689b      	ldr	r3, [r3, #8]
 8003cae:	f8d3 0100 	ldr.w	r0, [r3, #256]	@ 0x100
 8003cb2:	4770      	bx	lr
 8003cb4:	4807      	ldr	r0, [pc, #28]	@ (8003cd4 <_GetDevFunc+0x70>)
 8003cb6:	4770      	bx	lr
 8003cb8:	4807      	ldr	r0, [pc, #28]	@ (8003cd8 <_GetDevFunc+0x74>)
 8003cba:	4770      	bx	lr
 8003cbc:	2000      	movs	r0, #0
 8003cbe:	4770      	bx	lr
 8003cc0:	4806      	ldr	r0, [pc, #24]	@ (8003cdc <_GetDevFunc+0x78>)
 8003cc2:	4770      	bx	lr
 8003cc4:	08004087 	.word	0x08004087
 8003cc8:	08004073 	.word	0x08004073
 8003ccc:	0800405f 	.word	0x0800405f
 8003cd0:	08004015 	.word	0x08004015
 8003cd4:	08003f79 	.word	0x08003f79
 8003cd8:	08003b9d 	.word	0x08003b9d
 8003cdc:	0800409d 	.word	0x0800409d

08003ce0 <_GetDevProp>:
 8003ce0:	3901      	subs	r1, #1
 8003ce2:	6880      	ldr	r0, [r0, #8]
 8003ce4:	290d      	cmp	r1, #13
 8003ce6:	d823      	bhi.n	8003d30 <_GetDevProp+0x50>
 8003ce8:	e8df f001 	tbb	[pc, r1]
 8003cec:	0f0d0b09 	.word	0x0f0d0b09
 8003cf0:	11222222 	.word	0x11222222
 8003cf4:	13070725 	.word	0x13070725
 8003cf8:	1d18      	.short	0x1d18
 8003cfa:	2001      	movs	r0, #1
 8003cfc:	4770      	bx	lr
 8003cfe:	6800      	ldr	r0, [r0, #0]
 8003d00:	4770      	bx	lr
 8003d02:	6840      	ldr	r0, [r0, #4]
 8003d04:	4770      	bx	lr
 8003d06:	6880      	ldr	r0, [r0, #8]
 8003d08:	4770      	bx	lr
 8003d0a:	68c0      	ldr	r0, [r0, #12]
 8003d0c:	4770      	bx	lr
 8003d0e:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 8003d10:	4770      	bx	lr
 8003d12:	b188      	cbz	r0, 8003d38 <_GetDevProp+0x58>
 8003d14:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8003d16:	f000 0001 	and.w	r0, r0, #1
 8003d1a:	4770      	bx	lr
 8003d1c:	b160      	cbz	r0, 8003d38 <_GetDevProp+0x58>
 8003d1e:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8003d20:	f3c0 0040 	ubfx	r0, r0, #1, #1
 8003d24:	4770      	bx	lr
 8003d26:	b138      	cbz	r0, 8003d38 <_GetDevProp+0x58>
 8003d28:	6b40      	ldr	r0, [r0, #52]	@ 0x34
 8003d2a:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8003d2e:	4770      	bx	lr
 8003d30:	f04f 30ff 	mov.w	r0, #4294967295
 8003d34:	4770      	bx	lr
 8003d36:	2000      	movs	r0, #0
 8003d38:	4770      	bx	lr

08003d3a <_GetDevData>:
 8003d3a:	6883      	ldr	r3, [r0, #8]
 8003d3c:	2901      	cmp	r1, #1
 8003d3e:	bf0c      	ite	eq
 8003d40:	6c58      	ldreq	r0, [r3, #68]	@ 0x44
 8003d42:	2000      	movne	r0, #0
 8003d44:	4770      	bx	lr

08003d46 <_GetRect>:
 8003d46:	6882      	ldr	r2, [r0, #8]
 8003d48:	2300      	movs	r3, #0
 8003d4a:	800b      	strh	r3, [r1, #0]
 8003d4c:	804b      	strh	r3, [r1, #2]
 8003d4e:	6813      	ldr	r3, [r2, #0]
 8003d50:	3b01      	subs	r3, #1
 8003d52:	808b      	strh	r3, [r1, #4]
 8003d54:	6853      	ldr	r3, [r2, #4]
 8003d56:	3b01      	subs	r3, #1
 8003d58:	80cb      	strh	r3, [r1, #6]
 8003d5a:	4770      	bx	lr

08003d5c <GUIDRV_FlexColor__SetLog2Phys>:
 8003d5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003d5e:	4c10      	ldr	r4, [pc, #64]	@ (8003da0 <GUIDRV_FlexColor__SetLog2Phys+0x44>)
 8003d60:	b091      	sub	sp, #68	@ 0x44
 8003d62:	466d      	mov	r5, sp
 8003d64:	4626      	mov	r6, r4
 8003d66:	4607      	mov	r7, r0
 8003d68:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8003d6a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8003d6c:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8003d70:	3420      	adds	r4, #32
 8003d72:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8003d76:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003d78:	ad08      	add	r5, sp, #32
 8003d7a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8003d7c:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8003d80:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8003d84:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003d86:	aa10      	add	r2, sp, #64	@ 0x40
 8003d88:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8003d8c:	f853 2c40 	ldr.w	r2, [r3, #-64]
 8003d90:	f853 3c20 	ldr.w	r3, [r3, #-32]
 8003d94:	f8c7 2108 	str.w	r2, [r7, #264]	@ 0x108
 8003d98:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
 8003d9c:	b011      	add	sp, #68	@ 0x44
 8003d9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003da0:	0800b654 	.word	0x0800b654

08003da4 <_SetOrg>:
 8003da4:	b507      	push	{r0, r1, r2, lr}
 8003da6:	6980      	ldr	r0, [r0, #24]
 8003da8:	e88d 0006 	stmia.w	sp, {r1, r2}
 8003dac:	466a      	mov	r2, sp
 8003dae:	2103      	movs	r1, #3
 8003db0:	f7fc fbfc 	bl	80005ac <LCD_X_DisplayDriver>
 8003db4:	b003      	add	sp, #12
 8003db6:	f85d fb04 	ldr.w	pc, [sp], #4

08003dba <_Log2PhysY_X0Y0S1>:
 8003dba:	4608      	mov	r0, r1
 8003dbc:	4770      	bx	lr

08003dbe <_Log2PhysX_X0Y0S0>:
 8003dbe:	4608      	mov	r0, r1
 8003dc0:	4770      	bx	lr

08003dc2 <_Log2PhysX_X0Y1S0>:
 8003dc2:	4608      	mov	r0, r1
 8003dc4:	4770      	bx	lr

08003dc6 <_Log2PhysX_X0Y0S1>:
 8003dc6:	4610      	mov	r0, r2
 8003dc8:	4770      	bx	lr

08003dca <_Log2PhysX_X0Y1S1>:
 8003dca:	4610      	mov	r0, r2
 8003dcc:	4770      	bx	lr

08003dce <_Log2PhysY_X0Y0S0>:
 8003dce:	4610      	mov	r0, r2
 8003dd0:	4770      	bx	lr

08003dd2 <_Log2PhysY_X0Y1S0>:
 8003dd2:	6840      	ldr	r0, [r0, #4]
 8003dd4:	1a80      	subs	r0, r0, r2
 8003dd6:	3801      	subs	r0, #1
 8003dd8:	4770      	bx	lr

08003dda <_Log2PhysX_X1Y0S0>:
 8003dda:	6800      	ldr	r0, [r0, #0]
 8003ddc:	1a40      	subs	r0, r0, r1
 8003dde:	3801      	subs	r0, #1
 8003de0:	4770      	bx	lr

08003de2 <_Log2PhysX_X1Y1S0>:
 8003de2:	6800      	ldr	r0, [r0, #0]
 8003de4:	1a40      	subs	r0, r0, r1
 8003de6:	3801      	subs	r0, #1
 8003de8:	4770      	bx	lr

08003dea <_Log2PhysX_X1Y0S1>:
 8003dea:	6840      	ldr	r0, [r0, #4]
 8003dec:	1a80      	subs	r0, r0, r2
 8003dee:	3801      	subs	r0, #1
 8003df0:	4770      	bx	lr

08003df2 <_Log2PhysX_X1Y1S1>:
 8003df2:	6840      	ldr	r0, [r0, #4]
 8003df4:	1a80      	subs	r0, r0, r2
 8003df6:	3801      	subs	r0, #1
 8003df8:	4770      	bx	lr

08003dfa <_Log2PhysY_X0Y1S1>:
 8003dfa:	6800      	ldr	r0, [r0, #0]
 8003dfc:	1a40      	subs	r0, r0, r1
 8003dfe:	3801      	subs	r0, #1
 8003e00:	4770      	bx	lr

08003e02 <GUIDRV_FlexColor__SetPixelIndexNoCache>:
 8003e02:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8003e06:	6884      	ldr	r4, [r0, #8]
 8003e08:	4698      	mov	r8, r3
 8003e0a:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 8003e0c:	460e      	mov	r6, r1
 8003e0e:	079b      	lsls	r3, r3, #30
 8003e10:	4617      	mov	r7, r2
 8003e12:	d52e      	bpl.n	8003e72 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x70>
 8003e14:	f8d4 3108 	ldr.w	r3, [r4, #264]	@ 0x108
 8003e18:	4620      	mov	r0, r4
 8003e1a:	4798      	blx	r3
 8003e1c:	4605      	mov	r5, r0
 8003e1e:	f8d4 310c 	ldr.w	r3, [r4, #268]	@ 0x10c
 8003e22:	463a      	mov	r2, r7
 8003e24:	4631      	mov	r1, r6
 8003e26:	4620      	mov	r0, r4
 8003e28:	4798      	blx	r3
 8003e2a:	69a3      	ldr	r3, [r4, #24]
 8003e2c:	6922      	ldr	r2, [r4, #16]
 8003e2e:	429d      	cmp	r5, r3
 8003e30:	bfd4      	ite	le
 8003e32:	2300      	movle	r3, #0
 8003e34:	2301      	movgt	r3, #1
 8003e36:	4295      	cmp	r5, r2
 8003e38:	bfb8      	it	lt
 8003e3a:	f043 0301 	orrlt.w	r3, r3, #1
 8003e3e:	6962      	ldr	r2, [r4, #20]
 8003e40:	4606      	mov	r6, r0
 8003e42:	4290      	cmp	r0, r2
 8003e44:	bfb8      	it	lt
 8003e46:	f043 0301 	orrlt.w	r3, r3, #1
 8003e4a:	b913      	cbnz	r3, 8003e52 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x50>
 8003e4c:	69e3      	ldr	r3, [r4, #28]
 8003e4e:	4298      	cmp	r0, r3
 8003e50:	dd0a      	ble.n	8003e68 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x66>
 8003e52:	6862      	ldr	r2, [r4, #4]
 8003e54:	6823      	ldr	r3, [r4, #0]
 8003e56:	3a01      	subs	r2, #1
 8003e58:	9200      	str	r2, [sp, #0]
 8003e5a:	2200      	movs	r2, #0
 8003e5c:	f8d4 70a8 	ldr.w	r7, [r4, #168]	@ 0xa8
 8003e60:	3b01      	subs	r3, #1
 8003e62:	4611      	mov	r1, r2
 8003e64:	4620      	mov	r0, r4
 8003e66:	47b8      	blx	r7
 8003e68:	f8d4 30ac 	ldr.w	r3, [r4, #172]	@ 0xac
 8003e6c:	4632      	mov	r2, r6
 8003e6e:	4629      	mov	r1, r5
 8003e70:	e001      	b.n	8003e76 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x74>
 8003e72:	f8d4 30ac 	ldr.w	r3, [r4, #172]	@ 0xac
 8003e76:	4620      	mov	r0, r4
 8003e78:	4798      	blx	r3
 8003e7a:	4641      	mov	r1, r8
 8003e7c:	4620      	mov	r0, r4
 8003e7e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8003e82:	b002      	add	sp, #8
 8003e84:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003e88:	4718      	bx	r3

08003e8a <GUIDRV_FlexColor__GetPixelIndexNoCache>:
 8003e8a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003e8c:	6884      	ldr	r4, [r0, #8]
 8003e8e:	460e      	mov	r6, r1
 8003e90:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 8003e92:	4617      	mov	r7, r2
 8003e94:	079b      	lsls	r3, r3, #30
 8003e96:	d543      	bpl.n	8003f20 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x96>
 8003e98:	f8d4 3108 	ldr.w	r3, [r4, #264]	@ 0x108
 8003e9c:	4620      	mov	r0, r4
 8003e9e:	4798      	blx	r3
 8003ea0:	f8d4 310c 	ldr.w	r3, [r4, #268]	@ 0x10c
 8003ea4:	4631      	mov	r1, r6
 8003ea6:	4605      	mov	r5, r0
 8003ea8:	463a      	mov	r2, r7
 8003eaa:	4620      	mov	r0, r4
 8003eac:	4798      	blx	r3
 8003eae:	f8d4 3098 	ldr.w	r3, [r4, #152]	@ 0x98
 8003eb2:	4606      	mov	r6, r0
 8003eb4:	b11b      	cbz	r3, 8003ebe <GUIDRV_FlexColor__GetPixelIndexNoCache+0x34>
 8003eb6:	2200      	movs	r2, #0
 8003eb8:	2101      	movs	r1, #1
 8003eba:	4620      	mov	r0, r4
 8003ebc:	4798      	blx	r3
 8003ebe:	69a3      	ldr	r3, [r4, #24]
 8003ec0:	6922      	ldr	r2, [r4, #16]
 8003ec2:	429d      	cmp	r5, r3
 8003ec4:	bfd4      	ite	le
 8003ec6:	2300      	movle	r3, #0
 8003ec8:	2301      	movgt	r3, #1
 8003eca:	4295      	cmp	r5, r2
 8003ecc:	bfb8      	it	lt
 8003ece:	f043 0301 	orrlt.w	r3, r3, #1
 8003ed2:	6962      	ldr	r2, [r4, #20]
 8003ed4:	4296      	cmp	r6, r2
 8003ed6:	bfb8      	it	lt
 8003ed8:	f043 0301 	orrlt.w	r3, r3, #1
 8003edc:	b913      	cbnz	r3, 8003ee4 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x5a>
 8003ede:	69e3      	ldr	r3, [r4, #28]
 8003ee0:	429e      	cmp	r6, r3
 8003ee2:	dd0a      	ble.n	8003efa <GUIDRV_FlexColor__GetPixelIndexNoCache+0x70>
 8003ee4:	6862      	ldr	r2, [r4, #4]
 8003ee6:	6823      	ldr	r3, [r4, #0]
 8003ee8:	3a01      	subs	r2, #1
 8003eea:	9200      	str	r2, [sp, #0]
 8003eec:	2200      	movs	r2, #0
 8003eee:	f8d4 70a8 	ldr.w	r7, [r4, #168]	@ 0xa8
 8003ef2:	3b01      	subs	r3, #1
 8003ef4:	4611      	mov	r1, r2
 8003ef6:	4620      	mov	r0, r4
 8003ef8:	47b8      	blx	r7
 8003efa:	4629      	mov	r1, r5
 8003efc:	f8d4 30ac 	ldr.w	r3, [r4, #172]	@ 0xac
 8003f00:	4632      	mov	r2, r6
 8003f02:	4620      	mov	r0, r4
 8003f04:	4798      	blx	r3
 8003f06:	f8d4 30a0 	ldr.w	r3, [r4, #160]	@ 0xa0
 8003f0a:	4620      	mov	r0, r4
 8003f0c:	4798      	blx	r3
 8003f0e:	f8d4 3098 	ldr.w	r3, [r4, #152]	@ 0x98
 8003f12:	4605      	mov	r5, r0
 8003f14:	b17b      	cbz	r3, 8003f36 <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 8003f16:	2201      	movs	r2, #1
 8003f18:	2100      	movs	r1, #0
 8003f1a:	4620      	mov	r0, r4
 8003f1c:	4798      	blx	r3
 8003f1e:	e00a      	b.n	8003f36 <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 8003f20:	f8d4 30ac 	ldr.w	r3, [r4, #172]	@ 0xac
 8003f24:	4620      	mov	r0, r4
 8003f26:	4798      	blx	r3
 8003f28:	4620      	mov	r0, r4
 8003f2a:	f8d4 30a0 	ldr.w	r3, [r4, #160]	@ 0xa0
 8003f2e:	b003      	add	sp, #12
 8003f30:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8003f34:	4718      	bx	r3
 8003f36:	4628      	mov	r0, r5
 8003f38:	b003      	add	sp, #12
 8003f3a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003f3c <GUIDRV_FlexColor__InitOnce>:
 8003f3c:	b538      	push	{r3, r4, r5, lr}
 8003f3e:	6885      	ldr	r5, [r0, #8]
 8003f40:	4604      	mov	r4, r0
 8003f42:	b99d      	cbnz	r5, 8003f6c <GUIDRV_FlexColor__InitOnce+0x30>
 8003f44:	f44f 70be 	mov.w	r0, #380	@ 0x17c
 8003f48:	f7fe f952 	bl	80021f0 <GUI_ALLOC_GetFixedBlock>
 8003f4c:	4b08      	ldr	r3, [pc, #32]	@ (8003f70 <GUIDRV_FlexColor__InitOnce+0x34>)
 8003f4e:	f44f 72be 	mov.w	r2, #380	@ 0x17c
 8003f52:	681b      	ldr	r3, [r3, #0]
 8003f54:	60a0      	str	r0, [r4, #8]
 8003f56:	4629      	mov	r1, r5
 8003f58:	4798      	blx	r3
 8003f5a:	68a3      	ldr	r3, [r4, #8]
 8003f5c:	2202      	movs	r2, #2
 8003f5e:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003f60:	2201      	movs	r2, #1
 8003f62:	621a      	str	r2, [r3, #32]
 8003f64:	4a03      	ldr	r2, [pc, #12]	@ (8003f74 <GUIDRV_FlexColor__InitOnce+0x38>)
 8003f66:	641c      	str	r4, [r3, #64]	@ 0x40
 8003f68:	f8c3 2110 	str.w	r2, [r3, #272]	@ 0x110
 8003f6c:	bd38      	pop	{r3, r4, r5, pc}
 8003f6e:	bf00      	nop
 8003f70:	20000024 	.word	0x20000024
 8003f74:	08003d5d 	.word	0x08003d5d

08003f78 <_SetDevFunc>:
 8003f78:	b570      	push	{r4, r5, r6, lr}
 8003f7a:	4606      	mov	r6, r0
 8003f7c:	460d      	mov	r5, r1
 8003f7e:	4614      	mov	r4, r2
 8003f80:	f7ff ffdc 	bl	8003f3c <GUIDRV_FlexColor__InitOnce>
 8003f84:	68b3      	ldr	r3, [r6, #8]
 8003f86:	2b00      	cmp	r3, #0
 8003f88:	d03b      	beq.n	8004002 <_SetDevFunc+0x8a>
 8003f8a:	2d26      	cmp	r5, #38	@ 0x26
 8003f8c:	d002      	beq.n	8003f94 <_SetDevFunc+0x1c>
 8003f8e:	2d27      	cmp	r5, #39	@ 0x27
 8003f90:	d016      	beq.n	8003fc0 <_SetDevFunc+0x48>
 8003f92:	bd70      	pop	{r4, r5, r6, pc}
 8003f94:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8003f96:	2a10      	cmp	r2, #16
 8003f98:	d002      	beq.n	8003fa0 <_SetDevFunc+0x28>
 8003f9a:	2a12      	cmp	r2, #18
 8003f9c:	d008      	beq.n	8003fb0 <_SetDevFunc+0x38>
 8003f9e:	bd70      	pop	{r4, r5, r6, pc}
 8003fa0:	4a18      	ldr	r2, [pc, #96]	@ (8004004 <_SetDevFunc+0x8c>)
 8003fa2:	f8c3 40dc 	str.w	r4, [r3, #220]	@ 0xdc
 8003fa6:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
 8003faa:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
 8003fae:	bd70      	pop	{r4, r5, r6, pc}
 8003fb0:	4a15      	ldr	r2, [pc, #84]	@ (8004008 <_SetDevFunc+0x90>)
 8003fb2:	f8c3 40e0 	str.w	r4, [r3, #224]	@ 0xe0
 8003fb6:	f8c3 20bc 	str.w	r2, [r3, #188]	@ 0xbc
 8003fba:	f8c3 20c0 	str.w	r2, [r3, #192]	@ 0xc0
 8003fbe:	bd70      	pop	{r4, r5, r6, pc}
 8003fc0:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8003fc2:	2a10      	cmp	r2, #16
 8003fc4:	d002      	beq.n	8003fcc <_SetDevFunc+0x54>
 8003fc6:	2a12      	cmp	r2, #18
 8003fc8:	d00e      	beq.n	8003fe8 <_SetDevFunc+0x70>
 8003fca:	bd70      	pop	{r4, r5, r6, pc}
 8003fcc:	b13c      	cbz	r4, 8003fde <_SetDevFunc+0x66>
 8003fce:	4a0f      	ldr	r2, [pc, #60]	@ (800400c <_SetDevFunc+0x94>)
 8003fd0:	f8c3 40e4 	str.w	r4, [r3, #228]	@ 0xe4
 8003fd4:	f8c3 20cc 	str.w	r2, [r3, #204]	@ 0xcc
 8003fd8:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
 8003fdc:	bd70      	pop	{r4, r5, r6, pc}
 8003fde:	f8c3 40cc 	str.w	r4, [r3, #204]	@ 0xcc
 8003fe2:	f8c3 40c8 	str.w	r4, [r3, #200]	@ 0xc8
 8003fe6:	bd70      	pop	{r4, r5, r6, pc}
 8003fe8:	b13c      	cbz	r4, 8003ffa <_SetDevFunc+0x82>
 8003fea:	4a09      	ldr	r2, [pc, #36]	@ (8004010 <_SetDevFunc+0x98>)
 8003fec:	f8c3 40e8 	str.w	r4, [r3, #232]	@ 0xe8
 8003ff0:	f8c3 20d0 	str.w	r2, [r3, #208]	@ 0xd0
 8003ff4:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
 8003ff8:	bd70      	pop	{r4, r5, r6, pc}
 8003ffa:	f8c3 40d0 	str.w	r4, [r3, #208]	@ 0xd0
 8003ffe:	f8c3 40d4 	str.w	r4, [r3, #212]	@ 0xd4
 8004002:	bd70      	pop	{r4, r5, r6, pc}
 8004004:	08003bdd 	.word	0x08003bdd
 8004008:	08003be7 	.word	0x08003be7
 800400c:	08003bf1 	.word	0x08003bf1
 8004010:	08003c2b 	.word	0x08003c2b

08004014 <_GetDevFunc_Init>:
 8004014:	b538      	push	{r3, r4, r5, lr}
 8004016:	4605      	mov	r5, r0
 8004018:	f7ff ff90 	bl	8003f3c <GUIDRV_FlexColor__InitOnce>
 800401c:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8004020:	68ac      	ldr	r4, [r5, #8]
 8004022:	f7fe f8e5 	bl	80021f0 <GUI_ALLOC_GetFixedBlock>
 8004026:	66a0      	str	r0, [r4, #104]	@ 0x68
 8004028:	6ba0      	ldr	r0, [r4, #56]	@ 0x38
 800402a:	6823      	ldr	r3, [r4, #0]
 800402c:	3007      	adds	r0, #7
 800402e:	10c0      	asrs	r0, r0, #3
 8004030:	4358      	muls	r0, r3
 8004032:	f7fe f8dd 	bl	80021f0 <GUI_ALLOC_GetFixedBlock>
 8004036:	2200      	movs	r2, #0
 8004038:	2101      	movs	r1, #1
 800403a:	66e0      	str	r0, [r4, #108]	@ 0x6c
 800403c:	69a8      	ldr	r0, [r5, #24]
 800403e:	f7fc fab5 	bl	80005ac <LCD_X_DisplayDriver>
 8004042:	4605      	mov	r5, r0
 8004044:	f8d4 3110 	ldr.w	r3, [r4, #272]	@ 0x110
 8004048:	4620      	mov	r0, r4
 800404a:	4798      	blx	r3
 800404c:	4620      	mov	r0, r4
 800404e:	f8d4 30b0 	ldr.w	r3, [r4, #176]	@ 0xb0
 8004052:	4798      	blx	r3
 8004054:	2d00      	cmp	r5, #0
 8004056:	bfd4      	ite	le
 8004058:	2000      	movle	r0, #0
 800405a:	2001      	movgt	r0, #1
 800405c:	bd38      	pop	{r3, r4, r5, pc}

0800405e <_GetDevFunc_SetSize>:
 800405e:	b570      	push	{r4, r5, r6, lr}
 8004060:	4606      	mov	r6, r0
 8004062:	460d      	mov	r5, r1
 8004064:	4614      	mov	r4, r2
 8004066:	f7ff ff69 	bl	8003f3c <GUIDRV_FlexColor__InitOnce>
 800406a:	68b3      	ldr	r3, [r6, #8]
 800406c:	601d      	str	r5, [r3, #0]
 800406e:	605c      	str	r4, [r3, #4]
 8004070:	bd70      	pop	{r4, r5, r6, pc}

08004072 <_GetDevFunc_SetVSize>:
 8004072:	b570      	push	{r4, r5, r6, lr}
 8004074:	4606      	mov	r6, r0
 8004076:	460d      	mov	r5, r1
 8004078:	4614      	mov	r4, r2
 800407a:	f7ff ff5f 	bl	8003f3c <GUIDRV_FlexColor__InitOnce>
 800407e:	68b3      	ldr	r3, [r6, #8]
 8004080:	609d      	str	r5, [r3, #8]
 8004082:	60dc      	str	r4, [r3, #12]
 8004084:	bd70      	pop	{r4, r5, r6, pc}

08004086 <_GetDevFunc_Off>:
 8004086:	b510      	push	{r4, lr}
 8004088:	4604      	mov	r4, r0
 800408a:	f7ff ff57 	bl	8003f3c <GUIDRV_FlexColor__InitOnce>
 800408e:	69a0      	ldr	r0, [r4, #24]
 8004090:	2200      	movs	r2, #0
 8004092:	2106      	movs	r1, #6
 8004094:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004098:	f7fc ba88 	b.w	80005ac <LCD_X_DisplayDriver>

0800409c <_GetDevFunc_On>:
 800409c:	b510      	push	{r4, lr}
 800409e:	4604      	mov	r4, r0
 80040a0:	f7ff ff4c 	bl	8003f3c <GUIDRV_FlexColor__InitOnce>
 80040a4:	69a0      	ldr	r0, [r4, #24]
 80040a6:	2200      	movs	r2, #0
 80040a8:	2105      	movs	r1, #5
 80040aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80040ae:	f7fc ba7d 	b.w	80005ac <LCD_X_DisplayDriver>

080040b2 <GUIDRV_FlexColor_Config>:
 80040b2:	b538      	push	{r3, r4, r5, lr}
 80040b4:	460c      	mov	r4, r1
 80040b6:	4605      	mov	r5, r0
 80040b8:	f7ff ff40 	bl	8003f3c <GUIDRV_FlexColor__InitOnce>
 80040bc:	6822      	ldr	r2, [r4, #0]
 80040be:	68ab      	ldr	r3, [r5, #8]
 80040c0:	62da      	str	r2, [r3, #44]	@ 0x2c
 80040c2:	6862      	ldr	r2, [r4, #4]
 80040c4:	631a      	str	r2, [r3, #48]	@ 0x30
 80040c6:	68a2      	ldr	r2, [r4, #8]
 80040c8:	635a      	str	r2, [r3, #52]	@ 0x34
 80040ca:	0752      	lsls	r2, r2, #29
 80040cc:	d507      	bpl.n	80040de <GUIDRV_FlexColor_Config+0x2c>
 80040ce:	681a      	ldr	r2, [r3, #0]
 80040d0:	6859      	ldr	r1, [r3, #4]
 80040d2:	e883 0006 	stmia.w	r3, {r1, r2}
 80040d6:	689a      	ldr	r2, [r3, #8]
 80040d8:	68d9      	ldr	r1, [r3, #12]
 80040da:	60da      	str	r2, [r3, #12]
 80040dc:	6099      	str	r1, [r3, #8]
 80040de:	89a2      	ldrh	r2, [r4, #12]
 80040e0:	849a      	strh	r2, [r3, #36]	@ 0x24
 80040e2:	6922      	ldr	r2, [r4, #16]
 80040e4:	b112      	cbz	r2, 80040ec <GUIDRV_FlexColor_Config+0x3a>
 80040e6:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80040ea:	621a      	str	r2, [r3, #32]
 80040ec:	bd38      	pop	{r3, r4, r5, pc}

080040ee <GUIDRV_FlexColor_SetFunc>:
 80040ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80040f2:	4604      	mov	r4, r0
 80040f4:	4688      	mov	r8, r1
 80040f6:	461e      	mov	r6, r3
 80040f8:	4617      	mov	r7, r2
 80040fa:	f7ff ff1f 	bl	8003f3c <GUIDRV_FlexColor__InitOnce>
 80040fe:	68a5      	ldr	r5, [r4, #8]
 8004100:	2268      	movs	r2, #104	@ 0x68
 8004102:	4641      	mov	r1, r8
 8004104:	f505 708a 	add.w	r0, r5, #276	@ 0x114
 8004108:	f007 f888 	bl	800b21c <memcpy>
 800410c:	4620      	mov	r0, r4
 800410e:	47b8      	blx	r7
 8004110:	4620      	mov	r0, r4
 8004112:	47b0      	blx	r6
 8004114:	6923      	ldr	r3, [r4, #16]
 8004116:	689b      	ldr	r3, [r3, #8]
 8004118:	4798      	blx	r3
 800411a:	62a8      	str	r0, [r5, #40]	@ 0x28
 800411c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004120 <_WriteU16_A1>:
 8004120:	0a0b      	lsrs	r3, r1, #8
 8004122:	f880 3071 	strb.w	r3, [r0, #113]	@ 0x71
 8004126:	f880 1072 	strb.w	r1, [r0, #114]	@ 0x72
 800412a:	f8d0 3120 	ldr.w	r3, [r0, #288]	@ 0x120
 800412e:	2102      	movs	r1, #2
 8004130:	3071      	adds	r0, #113	@ 0x71
 8004132:	4718      	bx	r3

08004134 <_WriteDataMP>:
 8004134:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004138:	4615      	mov	r5, r2
 800413a:	4604      	mov	r4, r0
 800413c:	6e80      	ldr	r0, [r0, #104]	@ 0x68
 800413e:	460e      	mov	r6, r1
 8004140:	2100      	movs	r1, #0
 8004142:	b1a5      	cbz	r5, 800416e <_WriteDataMP+0x3a>
 8004144:	4603      	mov	r3, r0
 8004146:	f836 2b02 	ldrh.w	r2, [r6], #2
 800414a:	3101      	adds	r1, #1
 800414c:	0a17      	lsrs	r7, r2, #8
 800414e:	29fa      	cmp	r1, #250	@ 0xfa
 8004150:	f803 7b02 	strb.w	r7, [r3], #2
 8004154:	7042      	strb	r2, [r0, #1]
 8004156:	d107      	bne.n	8004168 <_WriteDataMP+0x34>
 8004158:	f8d4 3120 	ldr.w	r3, [r4, #288]	@ 0x120
 800415c:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8004160:	6ea0      	ldr	r0, [r4, #104]	@ 0x68
 8004162:	4798      	blx	r3
 8004164:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
 8004166:	2100      	movs	r1, #0
 8004168:	3d01      	subs	r5, #1
 800416a:	4618      	mov	r0, r3
 800416c:	e7e9      	b.n	8004142 <_WriteDataMP+0xe>
 800416e:	b131      	cbz	r1, 800417e <_WriteDataMP+0x4a>
 8004170:	f8d4 3120 	ldr.w	r3, [r4, #288]	@ 0x120
 8004174:	6ea0      	ldr	r0, [r4, #104]	@ 0x68
 8004176:	0049      	lsls	r1, r1, #1
 8004178:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800417c:	4718      	bx	r3
 800417e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004182 <_ReadData>:
 8004182:	b508      	push	{r3, lr}
 8004184:	f8d0 30b8 	ldr.w	r3, [r0, #184]	@ 0xb8
 8004188:	4798      	blx	r3
 800418a:	bd08      	pop	{r3, pc}

0800418c <_WriteData>:
 800418c:	b289      	uxth	r1, r1
 800418e:	f7ff bfc7 	b.w	8004120 <_WriteU16_A1>
	...

08004194 <_FillRect>:
 8004194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004198:	4e3e      	ldr	r6, [pc, #248]	@ (8004294 <_FillRect+0x100>)
 800419a:	4682      	mov	sl, r0
 800419c:	6885      	ldr	r5, [r0, #8]
 800419e:	6830      	ldr	r0, [r6, #0]
 80041a0:	b085      	sub	sp, #20
 80041a2:	7c00      	ldrb	r0, [r0, #16]
 80041a4:	4688      	mov	r8, r1
 80041a6:	f010 0f01 	tst.w	r0, #1
 80041aa:	4614      	mov	r4, r2
 80041ac:	4699      	mov	r9, r3
 80041ae:	eba3 0001 	sub.w	r0, r3, r1
 80041b2:	d03d      	beq.n	8004230 <_FillRect+0x9c>
 80041b4:	0043      	lsls	r3, r0, #1
 80041b6:	9303      	str	r3, [sp, #12]
 80041b8:	1c47      	adds	r7, r0, #1
 80041ba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80041bc:	429c      	cmp	r4, r3
 80041be:	dc66      	bgt.n	800428e <_FillRect+0xfa>
 80041c0:	f8d5 b0cc 	ldr.w	fp, [r5, #204]	@ 0xcc
 80041c4:	6eee      	ldr	r6, [r5, #108]	@ 0x6c
 80041c6:	f1bb 0f00 	cmp.w	fp, #0
 80041ca:	d101      	bne.n	80041d0 <_FillRect+0x3c>
 80041cc:	46c3      	mov	fp, r8
 80041ce:	e007      	b.n	80041e0 <_FillRect+0x4c>
 80041d0:	e88d 0050 	stmia.w	sp, {r4, r6}
 80041d4:	464b      	mov	r3, r9
 80041d6:	4622      	mov	r2, r4
 80041d8:	4641      	mov	r1, r8
 80041da:	4650      	mov	r0, sl
 80041dc:	47d8      	blx	fp
 80041de:	e00d      	b.n	80041fc <_FillRect+0x68>
 80041e0:	45cb      	cmp	fp, r9
 80041e2:	dc0a      	bgt.n	80041fa <_FillRect+0x66>
 80041e4:	4659      	mov	r1, fp
 80041e6:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
 80041ea:	4622      	mov	r2, r4
 80041ec:	4650      	mov	r0, sl
 80041ee:	4798      	blx	r3
 80041f0:	f10b 0b01 	add.w	fp, fp, #1
 80041f4:	f826 0b02 	strh.w	r0, [r6], #2
 80041f8:	e7f2      	b.n	80041e0 <_FillRect+0x4c>
 80041fa:	6eee      	ldr	r6, [r5, #108]	@ 0x6c
 80041fc:	9a03      	ldr	r2, [sp, #12]
 80041fe:	1eb3      	subs	r3, r6, #2
 8004200:	4416      	add	r6, r2
 8004202:	42b3      	cmp	r3, r6
 8004204:	d005      	beq.n	8004212 <_FillRect+0x7e>
 8004206:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
 8004208:	f833 2f02 	ldrh.w	r2, [r3, #2]!
 800420c:	404a      	eors	r2, r1
 800420e:	801a      	strh	r2, [r3, #0]
 8004210:	e7f7      	b.n	8004202 <_FillRect+0x6e>
 8004212:	9400      	str	r4, [sp, #0]
 8004214:	4622      	mov	r2, r4
 8004216:	464b      	mov	r3, r9
 8004218:	4641      	mov	r1, r8
 800421a:	4628      	mov	r0, r5
 800421c:	f8d5 60a8 	ldr.w	r6, [r5, #168]	@ 0xa8
 8004220:	47b0      	blx	r6
 8004222:	463a      	mov	r2, r7
 8004224:	6ee9      	ldr	r1, [r5, #108]	@ 0x6c
 8004226:	4628      	mov	r0, r5
 8004228:	f7ff ff84 	bl	8004134 <_WriteDataMP>
 800422c:	3401      	adds	r4, #1
 800422e:	e7c4      	b.n	80041ba <_FillRect+0x26>
 8004230:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8004232:	1abc      	subs	r4, r7, r2
 8004234:	1c67      	adds	r7, r4, #1
 8004236:	fb00 7707 	mla	r7, r0, r7, r7
 800423a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 800423c:	9000      	str	r0, [sp, #0]
 800423e:	f8d5 40a8 	ldr.w	r4, [r5, #168]	@ 0xa8
 8004242:	4628      	mov	r0, r5
 8004244:	47a0      	blx	r4
 8004246:	6833      	ldr	r3, [r6, #0]
 8004248:	6eae      	ldr	r6, [r5, #104]	@ 0x68
 800424a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800424c:	681c      	ldr	r4, [r3, #0]
 800424e:	2301      	movs	r3, #1
 8004250:	f3c4 2907 	ubfx	r9, r4, #8, #8
 8004254:	eb06 0a03 	add.w	sl, r6, r3
 8004258:	b2e4      	uxtb	r4, r4
 800425a:	b1c7      	cbz	r7, 800428e <_FillRect+0xfa>
 800425c:	46b8      	mov	r8, r7
 800425e:	2ff9      	cmp	r7, #249	@ 0xf9
 8004260:	bf28      	it	cs
 8004262:	f04f 08f9 	movcs.w	r8, #249	@ 0xf9
 8004266:	ea4f 0148 	mov.w	r1, r8, lsl #1
 800426a:	b93b      	cbnz	r3, 800427c <_FillRect+0xe8>
 800426c:	f8d5 3120 	ldr.w	r3, [r5, #288]	@ 0x120
 8004270:	4650      	mov	r0, sl
 8004272:	4798      	blx	r3
 8004274:	ebc8 0707 	rsb	r7, r8, r7
 8004278:	2300      	movs	r3, #0
 800427a:	e7ee      	b.n	800425a <_FillRect+0xc6>
 800427c:	4633      	mov	r3, r6
 800427e:	1872      	adds	r2, r6, r1
 8004280:	4293      	cmp	r3, r2
 8004282:	d0f3      	beq.n	800426c <_FillRect+0xd8>
 8004284:	f883 9001 	strb.w	r9, [r3, #1]
 8004288:	f803 4f02 	strb.w	r4, [r3, #2]!
 800428c:	e7f8      	b.n	8004280 <_FillRect+0xec>
 800428e:	b005      	add	sp, #20
 8004290:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004294:	20000014 	.word	0x20000014

08004298 <_DrawBitmap>:
 8004298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800429c:	b08f      	sub	sp, #60	@ 0x3c
 800429e:	9303      	str	r3, [sp, #12]
 80042a0:	6883      	ldr	r3, [r0, #8]
 80042a2:	9005      	str	r0, [sp, #20]
 80042a4:	9309      	str	r3, [sp, #36]	@ 0x24
 80042a6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80042a8:	9106      	str	r1, [sp, #24]
 80042aa:	2b08      	cmp	r3, #8
 80042ac:	9208      	str	r2, [sp, #32]
 80042ae:	d80c      	bhi.n	80042ca <_DrawBitmap+0x32>
 80042b0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80042b2:	f44f 738b 	mov.w	r3, #278	@ 0x116
 80042b6:	40d3      	lsrs	r3, r2
 80042b8:	07db      	lsls	r3, r3, #31
 80042ba:	d506      	bpl.n	80042ca <_DrawBitmap+0x32>
 80042bc:	4b98      	ldr	r3, [pc, #608]	@ (8004520 <_DrawBitmap+0x288>)
 80042be:	681b      	ldr	r3, [r3, #0]
 80042c0:	7c1b      	ldrb	r3, [r3, #16]
 80042c2:	f003 0303 	and.w	r3, r3, #3
 80042c6:	2b02      	cmp	r3, #2
 80042c8:	d010      	beq.n	80042ec <_DrawBitmap+0x54>
 80042ca:	9b06      	ldr	r3, [sp, #24]
 80042cc:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80042ce:	9818      	ldr	r0, [sp, #96]	@ 0x60
 80042d0:	1899      	adds	r1, r3, r2
 80042d2:	9a08      	ldr	r2, [sp, #32]
 80042d4:	9b03      	ldr	r3, [sp, #12]
 80042d6:	4402      	add	r2, r0
 80042d8:	3a01      	subs	r2, #1
 80042da:	9200      	str	r2, [sp, #0]
 80042dc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80042de:	18cb      	adds	r3, r1, r3
 80042e0:	f8d2 40a8 	ldr.w	r4, [r2, #168]	@ 0xa8
 80042e4:	3b01      	subs	r3, #1
 80042e6:	9a08      	ldr	r2, [sp, #32]
 80042e8:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80042ea:	47a0      	blx	r4
 80042ec:	9b03      	ldr	r3, [sp, #12]
 80042ee:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80042f0:	3b01      	subs	r3, #1
 80042f2:	930d      	str	r3, [sp, #52]	@ 0x34
 80042f4:	9b06      	ldr	r3, [sp, #24]
 80042f6:	9f08      	ldr	r7, [sp, #32]
 80042f8:	4413      	add	r3, r2
 80042fa:	9304      	str	r3, [sp, #16]
 80042fc:	9a04      	ldr	r2, [sp, #16]
 80042fe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8004300:	4413      	add	r3, r2
 8004302:	930c      	str	r3, [sp, #48]	@ 0x30
 8004304:	9b08      	ldr	r3, [sp, #32]
 8004306:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8004308:	1afb      	subs	r3, r7, r3
 800430a:	429a      	cmp	r2, r3
 800430c:	f340 8253 	ble.w	80047b6 <_DrawBitmap+0x51e>
 8004310:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004312:	3b01      	subs	r3, #1
 8004314:	2b0f      	cmp	r3, #15
 8004316:	f200 8248 	bhi.w	80047aa <_DrawBitmap+0x512>
 800431a:	e8df f013 	tbh	[pc, r3, lsl #1]
 800431e:	0010      	.short	0x0010
 8004320:	024600c1 	.word	0x024600c1
 8004324:	02460148 	.word	0x02460148
 8004328:	02460246 	.word	0x02460246
 800432c:	024601d8 	.word	0x024601d8
 8004330:	02460246 	.word	0x02460246
 8004334:	02460246 	.word	0x02460246
 8004338:	02460246 	.word	0x02460246
 800433c:	0241      	.short	0x0241
 800433e:	9b05      	ldr	r3, [sp, #20]
 8004340:	689c      	ldr	r4, [r3, #8]
 8004342:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8004344:	685b      	ldr	r3, [r3, #4]
 8004346:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004348:	4b75      	ldr	r3, [pc, #468]	@ (8004520 <_DrawBitmap+0x288>)
 800434a:	681b      	ldr	r3, [r3, #0]
 800434c:	7c1b      	ldrb	r3, [r3, #16]
 800434e:	f003 0303 	and.w	r3, r3, #3
 8004352:	2b02      	cmp	r3, #2
 8004354:	d022      	beq.n	800439c <_DrawBitmap+0x104>
 8004356:	2b03      	cmp	r3, #3
 8004358:	d076      	beq.n	8004448 <_DrawBitmap+0x1b0>
 800435a:	2b01      	cmp	r3, #1
 800435c:	d074      	beq.n	8004448 <_DrawBitmap+0x1b0>
 800435e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8004360:	9e03      	ldr	r6, [sp, #12]
 8004362:	9d1c      	ldr	r5, [sp, #112]	@ 0x70
 8004364:	f8dd b06c 	ldr.w	fp, [sp, #108]	@ 0x6c
 8004368:	f8b3 9000 	ldrh.w	r9, [r3]
 800436c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 8004370:	f04f 0880 	mov.w	r8, #128	@ 0x80
 8004374:	f89b 2000 	ldrb.w	r2, [fp]
 8004378:	fa48 f305 	asr.w	r3, r8, r5
 800437c:	421a      	tst	r2, r3
 800437e:	bf14      	ite	ne
 8004380:	4651      	movne	r1, sl
 8004382:	4649      	moveq	r1, r9
 8004384:	3501      	adds	r5, #1
 8004386:	4620      	mov	r0, r4
 8004388:	f7ff feca 	bl	8004120 <_WriteU16_A1>
 800438c:	2d08      	cmp	r5, #8
 800438e:	bf04      	itt	eq
 8004390:	f10b 0b01 	addeq.w	fp, fp, #1
 8004394:	2500      	moveq	r5, #0
 8004396:	3e01      	subs	r6, #1
 8004398:	d1ec      	bne.n	8004374 <_DrawBitmap+0xdc>
 800439a:	e206      	b.n	80047aa <_DrawBitmap+0x512>
 800439c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 800439e:	2500      	movs	r5, #0
 80043a0:	930a      	str	r3, [sp, #40]	@ 0x28
 80043a2:	462b      	mov	r3, r5
 80043a4:	f8dd b010 	ldr.w	fp, [sp, #16]
 80043a8:	f8d4 a06c 	ldr.w	sl, [r4, #108]	@ 0x6c
 80043ac:	f8dd 8070 	ldr.w	r8, [sp, #112]	@ 0x70
 80043b0:	f8cd b01c 	str.w	fp, [sp, #28]
 80043b4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80043b6:	f892 9000 	ldrb.w	r9, [r2]
 80043ba:	2280      	movs	r2, #128	@ 0x80
 80043bc:	fa42 f208 	asr.w	r2, r2, r8
 80043c0:	ea19 0902 	ands.w	r9, r9, r2
 80043c4:	d00d      	beq.n	80043e2 <_DrawBitmap+0x14a>
 80043c6:	b91b      	cbnz	r3, 80043d0 <_DrawBitmap+0x138>
 80043c8:	f8d4 a06c 	ldr.w	sl, [r4, #108]	@ 0x6c
 80043cc:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80043d0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80043d4:	3501      	adds	r5, #1
 80043d6:	f8aa 3000 	strh.w	r3, [sl]
 80043da:	f10a 0a02 	add.w	sl, sl, #2
 80043de:	2301      	movs	r3, #1
 80043e0:	e013      	b.n	800440a <_DrawBitmap+0x172>
 80043e2:	2b01      	cmp	r3, #1
 80043e4:	d110      	bne.n	8004408 <_DrawBitmap+0x170>
 80043e6:	9b07      	ldr	r3, [sp, #28]
 80043e8:	9700      	str	r7, [sp, #0]
 80043ea:	3b01      	subs	r3, #1
 80043ec:	463a      	mov	r2, r7
 80043ee:	4659      	mov	r1, fp
 80043f0:	4620      	mov	r0, r4
 80043f2:	f8d4 60a8 	ldr.w	r6, [r4, #168]	@ 0xa8
 80043f6:	47b0      	blx	r6
 80043f8:	462a      	mov	r2, r5
 80043fa:	6ee1      	ldr	r1, [r4, #108]	@ 0x6c
 80043fc:	4620      	mov	r0, r4
 80043fe:	f7ff fe99 	bl	8004134 <_WriteDataMP>
 8004402:	464d      	mov	r5, r9
 8004404:	464b      	mov	r3, r9
 8004406:	e000      	b.n	800440a <_DrawBitmap+0x172>
 8004408:	464b      	mov	r3, r9
 800440a:	9a07      	ldr	r2, [sp, #28]
 800440c:	f108 0801 	add.w	r8, r8, #1
 8004410:	3201      	adds	r2, #1
 8004412:	f1b8 0f08 	cmp.w	r8, #8
 8004416:	9207      	str	r2, [sp, #28]
 8004418:	bf08      	it	eq
 800441a:	9a0a      	ldreq	r2, [sp, #40]	@ 0x28
 800441c:	9903      	ldr	r1, [sp, #12]
 800441e:	bf04      	itt	eq
 8004420:	3201      	addeq	r2, #1
 8004422:	920a      	streq	r2, [sp, #40]	@ 0x28
 8004424:	9a04      	ldr	r2, [sp, #16]
 8004426:	bf08      	it	eq
 8004428:	f04f 0800 	moveq.w	r8, #0
 800442c:	440a      	add	r2, r1
 800442e:	9907      	ldr	r1, [sp, #28]
 8004430:	4291      	cmp	r1, r2
 8004432:	d1bf      	bne.n	80043b4 <_DrawBitmap+0x11c>
 8004434:	2d00      	cmp	r5, #0
 8004436:	f000 81b8 	beq.w	80047aa <_DrawBitmap+0x512>
 800443a:	9700      	str	r7, [sp, #0]
 800443c:	f8d4 60a8 	ldr.w	r6, [r4, #168]	@ 0xa8
 8004440:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8004442:	463a      	mov	r2, r7
 8004444:	4659      	mov	r1, fp
 8004446:	e1a5      	b.n	8004794 <_DrawBitmap+0x4fc>
 8004448:	9b03      	ldr	r3, [sp, #12]
 800444a:	9a04      	ldr	r2, [sp, #16]
 800444c:	9d1c      	ldr	r5, [sp, #112]	@ 0x70
 800444e:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
 8004452:	9307      	str	r3, [sp, #28]
 8004454:	eb03 0a02 	add.w	sl, r3, r2
 8004458:	f04f 0b80 	mov.w	fp, #128	@ 0x80
 800445c:	9b07      	ldr	r3, [sp, #28]
 800445e:	f898 2000 	ldrb.w	r2, [r8]
 8004462:	ebc3 090a 	rsb	r9, r3, sl
 8004466:	fa4b f305 	asr.w	r3, fp, r5
 800446a:	421a      	tst	r2, r3
 800446c:	d00d      	beq.n	800448a <_DrawBitmap+0x1f2>
 800446e:	f8d4 30f4 	ldr.w	r3, [r4, #244]	@ 0xf4
 8004472:	463a      	mov	r2, r7
 8004474:	4649      	mov	r1, r9
 8004476:	9805      	ldr	r0, [sp, #20]
 8004478:	4798      	blx	r3
 800447a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800447c:	463a      	mov	r2, r7
 800447e:	4043      	eors	r3, r0
 8004480:	4649      	mov	r1, r9
 8004482:	9805      	ldr	r0, [sp, #20]
 8004484:	f8d4 60f8 	ldr.w	r6, [r4, #248]	@ 0xf8
 8004488:	47b0      	blx	r6
 800448a:	3501      	adds	r5, #1
 800448c:	9b07      	ldr	r3, [sp, #28]
 800448e:	2d08      	cmp	r5, #8
 8004490:	bf04      	itt	eq
 8004492:	f108 0801 	addeq.w	r8, r8, #1
 8004496:	2500      	moveq	r5, #0
 8004498:	3b01      	subs	r3, #1
 800449a:	9307      	str	r3, [sp, #28]
 800449c:	d1de      	bne.n	800445c <_DrawBitmap+0x1c4>
 800449e:	e184      	b.n	80047aa <_DrawBitmap+0x512>
 80044a0:	9b05      	ldr	r3, [sp, #20]
 80044a2:	689c      	ldr	r4, [r3, #8]
 80044a4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80044a6:	2b00      	cmp	r3, #0
 80044a8:	f000 817f 	beq.w	80047aa <_DrawBitmap+0x512>
 80044ac:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80044ae:	f893 b000 	ldrb.w	fp, [r3]
 80044b2:	4b1b      	ldr	r3, [pc, #108]	@ (8004520 <_DrawBitmap+0x288>)
 80044b4:	681b      	ldr	r3, [r3, #0]
 80044b6:	7c1b      	ldrb	r3, [r3, #16]
 80044b8:	f013 0303 	ands.w	r3, r3, #3
 80044bc:	d00f      	beq.n	80044de <_DrawBitmap+0x246>
 80044be:	2b02      	cmp	r3, #2
 80044c0:	f040 8173 	bne.w	80047aa <_DrawBitmap+0x512>
 80044c4:	9b04      	ldr	r3, [sp, #16]
 80044c6:	2600      	movs	r6, #0
 80044c8:	930a      	str	r3, [sp, #40]	@ 0x28
 80044ca:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80044cc:	f8d4 a06c 	ldr.w	sl, [r4, #108]	@ 0x6c
 80044d0:	f8dd 9070 	ldr.w	r9, [sp, #112]	@ 0x70
 80044d4:	930b      	str	r3, [sp, #44]	@ 0x2c
 80044d6:	f8dd 8010 	ldr.w	r8, [sp, #16]
 80044da:	4632      	mov	r2, r6
 80044dc:	e045      	b.n	800456a <_DrawBitmap+0x2d2>
 80044de:	9d1c      	ldr	r5, [sp, #112]	@ 0x70
 80044e0:	9e03      	ldr	r6, [sp, #12]
 80044e2:	f8dd 906c 	ldr.w	r9, [sp, #108]	@ 0x6c
 80044e6:	f04f 08c0 	mov.w	r8, #192	@ 0xc0
 80044ea:	f1c5 0303 	rsb	r3, r5, #3
 80044ee:	005a      	lsls	r2, r3, #1
 80044f0:	f1c2 0306 	rsb	r3, r2, #6
 80044f4:	fa48 f303 	asr.w	r3, r8, r3
 80044f8:	ea03 030b 	and.w	r3, r3, fp
 80044fc:	40d3      	lsrs	r3, r2
 80044fe:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8004500:	3501      	adds	r5, #1
 8004502:	f832 1023 	ldrh.w	r1, [r2, r3, lsl #2]
 8004506:	4620      	mov	r0, r4
 8004508:	f7ff fe0a 	bl	8004120 <_WriteU16_A1>
 800450c:	2d04      	cmp	r5, #4
 800450e:	bf02      	ittt	eq
 8004510:	f899 b001 	ldrbeq.w	fp, [r9, #1]
 8004514:	2500      	moveq	r5, #0
 8004516:	f109 0901 	addeq.w	r9, r9, #1
 800451a:	3e01      	subs	r6, #1
 800451c:	d1e5      	bne.n	80044ea <_DrawBitmap+0x252>
 800451e:	e144      	b.n	80047aa <_DrawBitmap+0x512>
 8004520:	20000014 	.word	0x20000014
 8004524:	b91a      	cbnz	r2, 800452e <_DrawBitmap+0x296>
 8004526:	f8d4 a06c 	ldr.w	sl, [r4, #108]	@ 0x6c
 800452a:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 800452e:	9a07      	ldr	r2, [sp, #28]
 8004530:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8004532:	3601      	adds	r6, #1
 8004534:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004538:	f10a 0a02 	add.w	sl, sl, #2
 800453c:	f82a 3c02 	strh.w	r3, [sl, #-2]
 8004540:	2201      	movs	r2, #1
 8004542:	f109 0901 	add.w	r9, r9, #1
 8004546:	f1b9 0f04 	cmp.w	r9, #4
 800454a:	f108 0801 	add.w	r8, r8, #1
 800454e:	d106      	bne.n	800455e <_DrawBitmap+0x2c6>
 8004550:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004552:	f04f 0900 	mov.w	r9, #0
 8004556:	f893 b001 	ldrb.w	fp, [r3, #1]
 800455a:	3301      	adds	r3, #1
 800455c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800455e:	9b04      	ldr	r3, [sp, #16]
 8004560:	9903      	ldr	r1, [sp, #12]
 8004562:	440b      	add	r3, r1
 8004564:	4598      	cmp	r8, r3
 8004566:	f000 80a6 	beq.w	80046b6 <_DrawBitmap+0x41e>
 800456a:	f1c9 0503 	rsb	r5, r9, #3
 800456e:	006d      	lsls	r5, r5, #1
 8004570:	f1c5 0306 	rsb	r3, r5, #6
 8004574:	21c0      	movs	r1, #192	@ 0xc0
 8004576:	fa41 f303 	asr.w	r3, r1, r3
 800457a:	ea03 030b 	and.w	r3, r3, fp
 800457e:	40eb      	lsrs	r3, r5
 8004580:	9307      	str	r3, [sp, #28]
 8004582:	d1cf      	bne.n	8004524 <_DrawBitmap+0x28c>
 8004584:	2a01      	cmp	r2, #1
 8004586:	d110      	bne.n	80045aa <_DrawBitmap+0x312>
 8004588:	9700      	str	r7, [sp, #0]
 800458a:	f108 33ff 	add.w	r3, r8, #4294967295
 800458e:	463a      	mov	r2, r7
 8004590:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004592:	4620      	mov	r0, r4
 8004594:	f8d4 50a8 	ldr.w	r5, [r4, #168]	@ 0xa8
 8004598:	47a8      	blx	r5
 800459a:	4632      	mov	r2, r6
 800459c:	6ee1      	ldr	r1, [r4, #108]	@ 0x6c
 800459e:	4620      	mov	r0, r4
 80045a0:	f7ff fdc8 	bl	8004134 <_WriteDataMP>
 80045a4:	9e07      	ldr	r6, [sp, #28]
 80045a6:	4632      	mov	r2, r6
 80045a8:	e7cb      	b.n	8004542 <_DrawBitmap+0x2aa>
 80045aa:	9a07      	ldr	r2, [sp, #28]
 80045ac:	e7c9      	b.n	8004542 <_DrawBitmap+0x2aa>
 80045ae:	9b05      	ldr	r3, [sp, #20]
 80045b0:	689c      	ldr	r4, [r3, #8]
 80045b2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80045b4:	2b00      	cmp	r3, #0
 80045b6:	f000 80f8 	beq.w	80047aa <_DrawBitmap+0x512>
 80045ba:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80045bc:	f893 b000 	ldrb.w	fp, [r3]
 80045c0:	4b7e      	ldr	r3, [pc, #504]	@ (80047bc <_DrawBitmap+0x524>)
 80045c2:	681b      	ldr	r3, [r3, #0]
 80045c4:	7c1b      	ldrb	r3, [r3, #16]
 80045c6:	f013 0303 	ands.w	r3, r3, #3
 80045ca:	d00f      	beq.n	80045ec <_DrawBitmap+0x354>
 80045cc:	2b02      	cmp	r3, #2
 80045ce:	f040 80ec 	bne.w	80047aa <_DrawBitmap+0x512>
 80045d2:	9b04      	ldr	r3, [sp, #16]
 80045d4:	2600      	movs	r6, #0
 80045d6:	930a      	str	r3, [sp, #40]	@ 0x28
 80045d8:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80045da:	f8d4 a06c 	ldr.w	sl, [r4, #108]	@ 0x6c
 80045de:	f8dd 9070 	ldr.w	r9, [sp, #112]	@ 0x70
 80045e2:	930b      	str	r3, [sp, #44]	@ 0x2c
 80045e4:	f8dd 8010 	ldr.w	r8, [sp, #16]
 80045e8:	4632      	mov	r2, r6
 80045ea:	e042      	b.n	8004672 <_DrawBitmap+0x3da>
 80045ec:	9d1c      	ldr	r5, [sp, #112]	@ 0x70
 80045ee:	9e03      	ldr	r6, [sp, #12]
 80045f0:	f8dd 906c 	ldr.w	r9, [sp, #108]	@ 0x6c
 80045f4:	f04f 08f0 	mov.w	r8, #240	@ 0xf0
 80045f8:	f1c5 0301 	rsb	r3, r5, #1
 80045fc:	009a      	lsls	r2, r3, #2
 80045fe:	f1c2 0304 	rsb	r3, r2, #4
 8004602:	fa48 f303 	asr.w	r3, r8, r3
 8004606:	ea03 030b 	and.w	r3, r3, fp
 800460a:	40d3      	lsrs	r3, r2
 800460c:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 800460e:	3501      	adds	r5, #1
 8004610:	f832 1023 	ldrh.w	r1, [r2, r3, lsl #2]
 8004614:	4620      	mov	r0, r4
 8004616:	f7ff fd83 	bl	8004120 <_WriteU16_A1>
 800461a:	2d02      	cmp	r5, #2
 800461c:	bf02      	ittt	eq
 800461e:	f899 b001 	ldrbeq.w	fp, [r9, #1]
 8004622:	2500      	moveq	r5, #0
 8004624:	f109 0901 	addeq.w	r9, r9, #1
 8004628:	3e01      	subs	r6, #1
 800462a:	d1e5      	bne.n	80045f8 <_DrawBitmap+0x360>
 800462c:	e0bd      	b.n	80047aa <_DrawBitmap+0x512>
 800462e:	b91a      	cbnz	r2, 8004638 <_DrawBitmap+0x3a0>
 8004630:	f8d4 a06c 	ldr.w	sl, [r4, #108]	@ 0x6c
 8004634:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 8004638:	9a07      	ldr	r2, [sp, #28]
 800463a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800463c:	3601      	adds	r6, #1
 800463e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004642:	f10a 0a02 	add.w	sl, sl, #2
 8004646:	f82a 3c02 	strh.w	r3, [sl, #-2]
 800464a:	2201      	movs	r2, #1
 800464c:	f109 0901 	add.w	r9, r9, #1
 8004650:	f1b9 0f02 	cmp.w	r9, #2
 8004654:	f108 0801 	add.w	r8, r8, #1
 8004658:	d106      	bne.n	8004668 <_DrawBitmap+0x3d0>
 800465a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800465c:	f04f 0900 	mov.w	r9, #0
 8004660:	f893 b001 	ldrb.w	fp, [r3, #1]
 8004664:	3301      	adds	r3, #1
 8004666:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004668:	9b03      	ldr	r3, [sp, #12]
 800466a:	9904      	ldr	r1, [sp, #16]
 800466c:	440b      	add	r3, r1
 800466e:	4598      	cmp	r8, r3
 8004670:	d021      	beq.n	80046b6 <_DrawBitmap+0x41e>
 8004672:	f1c9 0501 	rsb	r5, r9, #1
 8004676:	00ad      	lsls	r5, r5, #2
 8004678:	f1c5 0304 	rsb	r3, r5, #4
 800467c:	21f0      	movs	r1, #240	@ 0xf0
 800467e:	fa41 f303 	asr.w	r3, r1, r3
 8004682:	ea03 030b 	and.w	r3, r3, fp
 8004686:	40eb      	lsrs	r3, r5
 8004688:	9307      	str	r3, [sp, #28]
 800468a:	d1d0      	bne.n	800462e <_DrawBitmap+0x396>
 800468c:	2a01      	cmp	r2, #1
 800468e:	d110      	bne.n	80046b2 <_DrawBitmap+0x41a>
 8004690:	9700      	str	r7, [sp, #0]
 8004692:	f108 33ff 	add.w	r3, r8, #4294967295
 8004696:	463a      	mov	r2, r7
 8004698:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800469a:	4620      	mov	r0, r4
 800469c:	f8d4 50a8 	ldr.w	r5, [r4, #168]	@ 0xa8
 80046a0:	47a8      	blx	r5
 80046a2:	4632      	mov	r2, r6
 80046a4:	6ee1      	ldr	r1, [r4, #108]	@ 0x6c
 80046a6:	4620      	mov	r0, r4
 80046a8:	f7ff fd44 	bl	8004134 <_WriteDataMP>
 80046ac:	9e07      	ldr	r6, [sp, #28]
 80046ae:	4632      	mov	r2, r6
 80046b0:	e7cc      	b.n	800464c <_DrawBitmap+0x3b4>
 80046b2:	9a07      	ldr	r2, [sp, #28]
 80046b4:	e7ca      	b.n	800464c <_DrawBitmap+0x3b4>
 80046b6:	2e00      	cmp	r6, #0
 80046b8:	d077      	beq.n	80047aa <_DrawBitmap+0x512>
 80046ba:	9700      	str	r7, [sp, #0]
 80046bc:	463a      	mov	r2, r7
 80046be:	f8d4 50a8 	ldr.w	r5, [r4, #168]	@ 0xa8
 80046c2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80046c4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80046c6:	4620      	mov	r0, r4
 80046c8:	47a8      	blx	r5
 80046ca:	4632      	mov	r2, r6
 80046cc:	e065      	b.n	800479a <_DrawBitmap+0x502>
 80046ce:	9b05      	ldr	r3, [sp, #20]
 80046d0:	689c      	ldr	r4, [r3, #8]
 80046d2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80046d4:	2b00      	cmp	r3, #0
 80046d6:	d068      	beq.n	80047aa <_DrawBitmap+0x512>
 80046d8:	4b38      	ldr	r3, [pc, #224]	@ (80047bc <_DrawBitmap+0x524>)
 80046da:	681b      	ldr	r3, [r3, #0]
 80046dc:	7c1b      	ldrb	r3, [r3, #16]
 80046de:	f013 0303 	ands.w	r3, r3, #3
 80046e2:	d00f      	beq.n	8004704 <_DrawBitmap+0x46c>
 80046e4:	2b02      	cmp	r3, #2
 80046e6:	d160      	bne.n	80047aa <_DrawBitmap+0x512>
 80046e8:	f8dd a018 	ldr.w	sl, [sp, #24]
 80046ec:	9a03      	ldr	r2, [sp, #12]
 80046ee:	2500      	movs	r5, #0
 80046f0:	4452      	add	r2, sl
 80046f2:	f8d4 806c 	ldr.w	r8, [r4, #108]	@ 0x6c
 80046f6:	f8dd b06c 	ldr.w	fp, [sp, #108]	@ 0x6c
 80046fa:	f8cd a01c 	str.w	sl, [sp, #28]
 80046fe:	462b      	mov	r3, r5
 8004700:	920a      	str	r2, [sp, #40]	@ 0x28
 8004702:	e024      	b.n	800474e <_DrawBitmap+0x4b6>
 8004704:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 8004706:	9b03      	ldr	r3, [sp, #12]
 8004708:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800470a:	1b5b      	subs	r3, r3, r5
 800470c:	4413      	add	r3, r2
 800470e:	2b00      	cmp	r3, #0
 8004710:	dd4b      	ble.n	80047aa <_DrawBitmap+0x512>
 8004712:	f815 3b01 	ldrb.w	r3, [r5], #1
 8004716:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8004718:	4620      	mov	r0, r4
 800471a:	f832 1023 	ldrh.w	r1, [r2, r3, lsl #2]
 800471e:	f7ff fcff 	bl	8004120 <_WriteU16_A1>
 8004722:	e7f0      	b.n	8004706 <_DrawBitmap+0x46e>
 8004724:	b91b      	cbnz	r3, 800472e <_DrawBitmap+0x496>
 8004726:	f8d4 806c 	ldr.w	r8, [r4, #108]	@ 0x6c
 800472a:	f8dd a01c 	ldr.w	sl, [sp, #28]
 800472e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8004730:	3501      	adds	r5, #1
 8004732:	f853 3029 	ldr.w	r3, [r3, r9, lsl #2]
 8004736:	f108 0802 	add.w	r8, r8, #2
 800473a:	f828 3c02 	strh.w	r3, [r8, #-2]
 800473e:	2301      	movs	r3, #1
 8004740:	9a07      	ldr	r2, [sp, #28]
 8004742:	3201      	adds	r2, #1
 8004744:	9207      	str	r2, [sp, #28]
 8004746:	9907      	ldr	r1, [sp, #28]
 8004748:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800474a:	4291      	cmp	r1, r2
 800474c:	d019      	beq.n	8004782 <_DrawBitmap+0x4ea>
 800474e:	f81b 9b01 	ldrb.w	r9, [fp], #1
 8004752:	f1b9 0f00 	cmp.w	r9, #0
 8004756:	d1e5      	bne.n	8004724 <_DrawBitmap+0x48c>
 8004758:	2b01      	cmp	r3, #1
 800475a:	d110      	bne.n	800477e <_DrawBitmap+0x4e6>
 800475c:	9b07      	ldr	r3, [sp, #28]
 800475e:	9700      	str	r7, [sp, #0]
 8004760:	3b01      	subs	r3, #1
 8004762:	463a      	mov	r2, r7
 8004764:	4651      	mov	r1, sl
 8004766:	4620      	mov	r0, r4
 8004768:	f8d4 60a8 	ldr.w	r6, [r4, #168]	@ 0xa8
 800476c:	47b0      	blx	r6
 800476e:	462a      	mov	r2, r5
 8004770:	6ee1      	ldr	r1, [r4, #108]	@ 0x6c
 8004772:	4620      	mov	r0, r4
 8004774:	f7ff fcde 	bl	8004134 <_WriteDataMP>
 8004778:	464d      	mov	r5, r9
 800477a:	464b      	mov	r3, r9
 800477c:	e7e0      	b.n	8004740 <_DrawBitmap+0x4a8>
 800477e:	464b      	mov	r3, r9
 8004780:	e7de      	b.n	8004740 <_DrawBitmap+0x4a8>
 8004782:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8004784:	9a06      	ldr	r2, [sp, #24]
 8004786:	4413      	add	r3, r2
 8004788:	b17d      	cbz	r5, 80047aa <_DrawBitmap+0x512>
 800478a:	463a      	mov	r2, r7
 800478c:	4651      	mov	r1, sl
 800478e:	9700      	str	r7, [sp, #0]
 8004790:	f8d4 60a8 	ldr.w	r6, [r4, #168]	@ 0xa8
 8004794:	4620      	mov	r0, r4
 8004796:	47b0      	blx	r6
 8004798:	462a      	mov	r2, r5
 800479a:	6ee1      	ldr	r1, [r4, #108]	@ 0x6c
 800479c:	4620      	mov	r0, r4
 800479e:	e002      	b.n	80047a6 <_DrawBitmap+0x50e>
 80047a0:	9a03      	ldr	r2, [sp, #12]
 80047a2:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 80047a4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80047a6:	f7ff fcc5 	bl	8004134 <_WriteDataMP>
 80047aa:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80047ac:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 80047ae:	3701      	adds	r7, #1
 80047b0:	4413      	add	r3, r2
 80047b2:	931b      	str	r3, [sp, #108]	@ 0x6c
 80047b4:	e5a6      	b.n	8004304 <_DrawBitmap+0x6c>
 80047b6:	b00f      	add	sp, #60	@ 0x3c
 80047b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80047bc:	20000014 	.word	0x20000014

080047c0 <GUIDRV_FlexColor_SetMode16bppC0B8>:
 80047c0:	b510      	push	{r4, lr}
 80047c2:	4604      	mov	r4, r0
 80047c4:	f7ff fbba 	bl	8003f3c <GUIDRV_FlexColor__InitOnce>
 80047c8:	68a4      	ldr	r4, [r4, #8]
 80047ca:	4b10      	ldr	r3, [pc, #64]	@ (800480c <GUIDRV_FlexColor_SetMode16bppC0B8+0x4c>)
 80047cc:	2108      	movs	r1, #8
 80047ce:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
 80047d2:	4b0f      	ldr	r3, [pc, #60]	@ (8004810 <GUIDRV_FlexColor_SetMode16bppC0B8+0x50>)
 80047d4:	4620      	mov	r0, r4
 80047d6:	f8c4 30f0 	str.w	r3, [r4, #240]	@ 0xf0
 80047da:	4b0e      	ldr	r3, [pc, #56]	@ (8004814 <GUIDRV_FlexColor_SetMode16bppC0B8+0x54>)
 80047dc:	f8c4 30f4 	str.w	r3, [r4, #244]	@ 0xf4
 80047e0:	4b0d      	ldr	r3, [pc, #52]	@ (8004818 <GUIDRV_FlexColor_SetMode16bppC0B8+0x58>)
 80047e2:	f8c4 30f8 	str.w	r3, [r4, #248]	@ 0xf8
 80047e6:	4b0d      	ldr	r3, [pc, #52]	@ (800481c <GUIDRV_FlexColor_SetMode16bppC0B8+0x5c>)
 80047e8:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
 80047ec:	4b0c      	ldr	r3, [pc, #48]	@ (8004820 <GUIDRV_FlexColor_SetMode16bppC0B8+0x60>)
 80047ee:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
 80047f2:	f8d4 30cc 	ldr.w	r3, [r4, #204]	@ 0xcc
 80047f6:	f8c4 3104 	str.w	r3, [r4, #260]	@ 0x104
 80047fa:	f8d4 3094 	ldr.w	r3, [r4, #148]	@ 0x94
 80047fe:	4798      	blx	r3
 8004800:	2310      	movs	r3, #16
 8004802:	63a3      	str	r3, [r4, #56]	@ 0x38
 8004804:	4b07      	ldr	r3, [pc, #28]	@ (8004824 <GUIDRV_FlexColor_SetMode16bppC0B8+0x64>)
 8004806:	6463      	str	r3, [r4, #68]	@ 0x44
 8004808:	bd10      	pop	{r4, pc}
 800480a:	bf00      	nop
 800480c:	08004299 	.word	0x08004299
 8004810:	08004195 	.word	0x08004195
 8004814:	08003e8b 	.word	0x08003e8b
 8004818:	08003e03 	.word	0x08003e03
 800481c:	08004183 	.word	0x08004183
 8004820:	0800418d 	.word	0x0800418d
 8004824:	0800be0c 	.word	0x0800be0c

08004828 <_SetPhysRAMAddr>:
 8004828:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800482c:	4604      	mov	r4, r0
 800482e:	460e      	mov	r6, r1
 8004830:	4615      	mov	r5, r2
 8004832:	f8d0 308c 	ldr.w	r3, [r0, #140]	@ 0x8c
 8004836:	212a      	movs	r1, #42	@ 0x2a
 8004838:	4798      	blx	r3
 800483a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800483c:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 8004840:	4431      	add	r1, r6
 8004842:	4620      	mov	r0, r4
 8004844:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8004848:	4798      	blx	r3
 800484a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800484c:	b2b7      	uxth	r7, r6
 800484e:	4439      	add	r1, r7
 8004850:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 8004854:	4620      	mov	r0, r4
 8004856:	b2c9      	uxtb	r1, r1
 8004858:	4798      	blx	r3
 800485a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800485c:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 8004860:	4431      	add	r1, r6
 8004862:	4620      	mov	r0, r4
 8004864:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8004868:	4798      	blx	r3
 800486a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800486c:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 8004870:	4439      	add	r1, r7
 8004872:	4620      	mov	r0, r4
 8004874:	b2c9      	uxtb	r1, r1
 8004876:	4798      	blx	r3
 8004878:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 800487c:	4620      	mov	r0, r4
 800487e:	212b      	movs	r1, #43	@ 0x2b
 8004880:	4798      	blx	r3
 8004882:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8004884:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 8004888:	4429      	add	r1, r5
 800488a:	4620      	mov	r0, r4
 800488c:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8004890:	4798      	blx	r3
 8004892:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8004894:	b2ae      	uxth	r6, r5
 8004896:	4431      	add	r1, r6
 8004898:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 800489c:	4620      	mov	r0, r4
 800489e:	b2c9      	uxtb	r1, r1
 80048a0:	4798      	blx	r3
 80048a2:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80048a4:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 80048a8:	4429      	add	r1, r5
 80048aa:	4620      	mov	r0, r4
 80048ac:	f3c1 210f 	ubfx	r1, r1, #8, #16
 80048b0:	4798      	blx	r3
 80048b2:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80048b4:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 80048b8:	4431      	add	r1, r6
 80048ba:	4620      	mov	r0, r4
 80048bc:	b2c9      	uxtb	r1, r1
 80048be:	4798      	blx	r3
 80048c0:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 80048c4:	4620      	mov	r0, r4
 80048c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80048ca:	212c      	movs	r1, #44	@ 0x2c
 80048cc:	4718      	bx	r3

080048ce <_SetRect>:
 80048ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80048d2:	4604      	mov	r4, r0
 80048d4:	4688      	mov	r8, r1
 80048d6:	461f      	mov	r7, r3
 80048d8:	4616      	mov	r6, r2
 80048da:	f8d0 308c 	ldr.w	r3, [r0, #140]	@ 0x8c
 80048de:	212a      	movs	r1, #42	@ 0x2a
 80048e0:	9d06      	ldr	r5, [sp, #24]
 80048e2:	4798      	blx	r3
 80048e4:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 80048e6:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 80048ea:	4441      	add	r1, r8
 80048ec:	4620      	mov	r0, r4
 80048ee:	f3c1 210f 	ubfx	r1, r1, #8, #16
 80048f2:	4798      	blx	r3
 80048f4:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 80048f6:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 80048fa:	4441      	add	r1, r8
 80048fc:	4620      	mov	r0, r4
 80048fe:	b2c9      	uxtb	r1, r1
 8004900:	4798      	blx	r3
 8004902:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8004904:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 8004908:	4439      	add	r1, r7
 800490a:	4620      	mov	r0, r4
 800490c:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8004910:	4798      	blx	r3
 8004912:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8004914:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 8004918:	4439      	add	r1, r7
 800491a:	4620      	mov	r0, r4
 800491c:	b2c9      	uxtb	r1, r1
 800491e:	4798      	blx	r3
 8004920:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8004924:	4620      	mov	r0, r4
 8004926:	212b      	movs	r1, #43	@ 0x2b
 8004928:	4798      	blx	r3
 800492a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800492c:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 8004930:	4431      	add	r1, r6
 8004932:	4620      	mov	r0, r4
 8004934:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8004938:	4798      	blx	r3
 800493a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800493c:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 8004940:	4431      	add	r1, r6
 8004942:	4620      	mov	r0, r4
 8004944:	b2c9      	uxtb	r1, r1
 8004946:	4798      	blx	r3
 8004948:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800494a:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 800494e:	4429      	add	r1, r5
 8004950:	4620      	mov	r0, r4
 8004952:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8004956:	4798      	blx	r3
 8004958:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800495a:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 800495e:	4429      	add	r1, r5
 8004960:	4620      	mov	r0, r4
 8004962:	b2c9      	uxtb	r1, r1
 8004964:	4798      	blx	r3
 8004966:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 800496a:	4620      	mov	r0, r4
 800496c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004970:	212c      	movs	r1, #44	@ 0x2c
 8004972:	4718      	bx	r3

08004974 <_SetOrientation>:
 8004974:	b513      	push	{r0, r1, r4, lr}
 8004976:	4604      	mov	r4, r0
 8004978:	466b      	mov	r3, sp
 800497a:	4a0d      	ldr	r2, [pc, #52]	@ (80049b0 <_SetOrientation+0x3c>)
 800497c:	6810      	ldr	r0, [r2, #0]
 800497e:	6851      	ldr	r1, [r2, #4]
 8004980:	c303      	stmia	r3!, {r0, r1}
 8004982:	f8d4 308c 	ldr.w	r3, [r4, #140]	@ 0x8c
 8004986:	4620      	mov	r0, r4
 8004988:	2136      	movs	r1, #54	@ 0x36
 800498a:	4798      	blx	r3
 800498c:	4620      	mov	r0, r4
 800498e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8004990:	aa02      	add	r2, sp, #8
 8004992:	8ca1      	ldrh	r1, [r4, #36]	@ 0x24
 8004994:	4413      	add	r3, r2
 8004996:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 800499a:	f021 01e0 	bic.w	r1, r1, #224	@ 0xe0
 800499e:	4319      	orrs	r1, r3
 80049a0:	f8d4 3090 	ldr.w	r3, [r4, #144]	@ 0x90
 80049a4:	b289      	uxth	r1, r1
 80049a6:	b002      	add	sp, #8
 80049a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80049ac:	4718      	bx	r3
 80049ae:	bf00      	nop
 80049b0:	0800b6c8 	.word	0x0800b6c8

080049b4 <_ReadPixel_16bpp_B8>:
 80049b4:	b513      	push	{r0, r1, r4, lr}
 80049b6:	4604      	mov	r4, r0
 80049b8:	f8d0 3114 	ldr.w	r3, [r0, #276]	@ 0x114
 80049bc:	202e      	movs	r0, #46	@ 0x2e
 80049be:	4798      	blx	r3
 80049c0:	6a21      	ldr	r1, [r4, #32]
 80049c2:	f8d4 3130 	ldr.w	r3, [r4, #304]	@ 0x130
 80049c6:	4668      	mov	r0, sp
 80049c8:	3103      	adds	r1, #3
 80049ca:	4798      	blx	r3
 80049cc:	6a23      	ldr	r3, [r4, #32]
 80049ce:	eb0d 0203 	add.w	r2, sp, r3
 80049d2:	f81d 3003 	ldrb.w	r3, [sp, r3]
 80049d6:	7850      	ldrb	r0, [r2, #1]
 80049d8:	08db      	lsrs	r3, r3, #3
 80049da:	0880      	lsrs	r0, r0, #2
 80049dc:	02db      	lsls	r3, r3, #11
 80049de:	ea43 1340 	orr.w	r3, r3, r0, lsl #5
 80049e2:	7890      	ldrb	r0, [r2, #2]
 80049e4:	ea43 00d0 	orr.w	r0, r3, r0, lsr #3
 80049e8:	b002      	add	sp, #8
 80049ea:	bd10      	pop	{r4, pc}

080049ec <_ReadPixel_16bpp_B16_I>:
 80049ec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80049ee:	4604      	mov	r4, r0
 80049f0:	f8d0 3134 	ldr.w	r3, [r0, #308]	@ 0x134
 80049f4:	202e      	movs	r0, #46	@ 0x2e
 80049f6:	4798      	blx	r3
 80049f8:	6a21      	ldr	r1, [r4, #32]
 80049fa:	f8d4 3150 	ldr.w	r3, [r4, #336]	@ 0x150
 80049fe:	4668      	mov	r0, sp
 8004a00:	3102      	adds	r1, #2
 8004a02:	4798      	blx	r3
 8004a04:	6a22      	ldr	r2, [r4, #32]
 8004a06:	eb0d 0342 	add.w	r3, sp, r2, lsl #1
 8004a0a:	885b      	ldrh	r3, [r3, #2]
 8004a0c:	f3c3 00c4 	ubfx	r0, r3, #3, #5
 8004a10:	115b      	asrs	r3, r3, #5
 8004a12:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8004a16:	4303      	orrs	r3, r0
 8004a18:	f83d 0012 	ldrh.w	r0, [sp, r2, lsl #1]
 8004a1c:	0200      	lsls	r0, r0, #8
 8004a1e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8004a22:	4318      	orrs	r0, r3
 8004a24:	b004      	add	sp, #16
 8004a26:	bd10      	pop	{r4, pc}

08004a28 <_SetReg_B8>:
 8004a28:	b570      	push	{r4, r5, r6, lr}
 8004a2a:	4605      	mov	r5, r0
 8004a2c:	460c      	mov	r4, r1
 8004a2e:	f8d0 3114 	ldr.w	r3, [r0, #276]	@ 0x114
 8004a32:	0a08      	lsrs	r0, r1, #8
 8004a34:	4798      	blx	r3
 8004a36:	f8d5 3114 	ldr.w	r3, [r5, #276]	@ 0x114
 8004a3a:	b2e0      	uxtb	r0, r4
 8004a3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004a40:	4718      	bx	r3

08004a42 <_SetReg_B16>:
 8004a42:	f8d0 3134 	ldr.w	r3, [r0, #308]	@ 0x134
 8004a46:	4608      	mov	r0, r1
 8004a48:	4718      	bx	r3

08004a4a <_WritePara_B8>:
 8004a4a:	f8d0 3118 	ldr.w	r3, [r0, #280]	@ 0x118
 8004a4e:	b2c8      	uxtb	r0, r1
 8004a50:	4718      	bx	r3

08004a52 <_WritePara_B16>:
 8004a52:	f8d0 3138 	ldr.w	r3, [r0, #312]	@ 0x138
 8004a56:	4608      	mov	r0, r1
 8004a58:	4718      	bx	r3
	...

08004a5c <_SetInterface>:
 8004a5c:	2908      	cmp	r1, #8
 8004a5e:	d002      	beq.n	8004a66 <_SetInterface+0xa>
 8004a60:	2910      	cmp	r1, #16
 8004a62:	d005      	beq.n	8004a70 <_SetInterface+0x14>
 8004a64:	4770      	bx	lr
 8004a66:	4b06      	ldr	r3, [pc, #24]	@ (8004a80 <_SetInterface+0x24>)
 8004a68:	f8c0 308c 	str.w	r3, [r0, #140]	@ 0x8c
 8004a6c:	4b05      	ldr	r3, [pc, #20]	@ (8004a84 <_SetInterface+0x28>)
 8004a6e:	e003      	b.n	8004a78 <_SetInterface+0x1c>
 8004a70:	4b05      	ldr	r3, [pc, #20]	@ (8004a88 <_SetInterface+0x2c>)
 8004a72:	f8c0 308c 	str.w	r3, [r0, #140]	@ 0x8c
 8004a76:	4b05      	ldr	r3, [pc, #20]	@ (8004a8c <_SetInterface+0x30>)
 8004a78:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90
 8004a7c:	4770      	bx	lr
 8004a7e:	bf00      	nop
 8004a80:	08004a29 	.word	0x08004a29
 8004a84:	08004a4b 	.word	0x08004a4b
 8004a88:	08004a43 	.word	0x08004a43
 8004a8c:	08004a53 	.word	0x08004a53

08004a90 <_ReadRect_16bpp_B8>:
 8004a90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004a92:	b085      	sub	sp, #20
 8004a94:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8004a96:	6885      	ldr	r5, [r0, #8]
 8004a98:	1abc      	subs	r4, r7, r2
 8004a9a:	1a58      	subs	r0, r3, r1
 8004a9c:	9700      	str	r7, [sp, #0]
 8004a9e:	3401      	adds	r4, #1
 8004aa0:	fb00 4404 	mla	r4, r0, r4, r4
 8004aa4:	f8d5 70a8 	ldr.w	r7, [r5, #168]	@ 0xa8
 8004aa8:	4628      	mov	r0, r5
 8004aaa:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8004aac:	47b8      	blx	r7
 8004aae:	f8d5 3114 	ldr.w	r3, [r5, #276]	@ 0x114
 8004ab2:	202e      	movs	r0, #46	@ 0x2e
 8004ab4:	4798      	blx	r3
 8004ab6:	f8d5 3130 	ldr.w	r3, [r5, #304]	@ 0x130
 8004aba:	6a29      	ldr	r1, [r5, #32]
 8004abc:	a802      	add	r0, sp, #8
 8004abe:	4798      	blx	r3
 8004ac0:	f8d5 3130 	ldr.w	r3, [r5, #304]	@ 0x130
 8004ac4:	2103      	movs	r1, #3
 8004ac6:	a802      	add	r0, sp, #8
 8004ac8:	4798      	blx	r3
 8004aca:	f89d 3009 	ldrb.w	r3, [sp, #9]
 8004ace:	3c01      	subs	r4, #1
 8004ad0:	ea4f 0293 	mov.w	r2, r3, lsr #2
 8004ad4:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8004ad8:	ea4f 03d3 	mov.w	r3, r3, lsr #3
 8004adc:	ea4f 23c3 	mov.w	r3, r3, lsl #11
 8004ae0:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8004ae4:	f89d 200a 	ldrb.w	r2, [sp, #10]
 8004ae8:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8004aec:	f826 3b02 	strh.w	r3, [r6], #2
 8004af0:	d1e6      	bne.n	8004ac0 <_ReadRect_16bpp_B8+0x30>
 8004af2:	b005      	add	sp, #20
 8004af4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004af6 <_ReadRect_16bpp_B16_I>:
 8004af6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004af8:	b087      	sub	sp, #28
 8004afa:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8004afc:	6885      	ldr	r5, [r0, #8]
 8004afe:	1abc      	subs	r4, r7, r2
 8004b00:	1a58      	subs	r0, r3, r1
 8004b02:	9700      	str	r7, [sp, #0]
 8004b04:	3401      	adds	r4, #1
 8004b06:	fb00 4404 	mla	r4, r0, r4, r4
 8004b0a:	f8d5 70a8 	ldr.w	r7, [r5, #168]	@ 0xa8
 8004b0e:	4628      	mov	r0, r5
 8004b10:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 8004b12:	47b8      	blx	r7
 8004b14:	f8d5 3134 	ldr.w	r3, [r5, #308]	@ 0x134
 8004b18:	202e      	movs	r0, #46	@ 0x2e
 8004b1a:	4798      	blx	r3
 8004b1c:	f8d5 3150 	ldr.w	r3, [r5, #336]	@ 0x150
 8004b20:	6a29      	ldr	r1, [r5, #32]
 8004b22:	a802      	add	r0, sp, #8
 8004b24:	4798      	blx	r3
 8004b26:	f8d5 3150 	ldr.w	r3, [r5, #336]	@ 0x150
 8004b2a:	2102      	movs	r1, #2
 8004b2c:	a802      	add	r0, sp, #8
 8004b2e:	4798      	blx	r3
 8004b30:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8004b34:	3c01      	subs	r4, #1
 8004b36:	f3c3 02c4 	ubfx	r2, r3, #3, #5
 8004b3a:	ea4f 1363 	mov.w	r3, r3, asr #5
 8004b3e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8004b42:	ea43 0302 	orr.w	r3, r3, r2
 8004b46:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8004b4a:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8004b4e:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 8004b52:	ea43 0302 	orr.w	r3, r3, r2
 8004b56:	f826 3b02 	strh.w	r3, [r6], #2
 8004b5a:	d1e4      	bne.n	8004b26 <_ReadRect_16bpp_B16_I+0x30>
 8004b5c:	b007      	add	sp, #28
 8004b5e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004b60 <GUIDRV_FlexColor_SetFunc66709>:
 8004b60:	b510      	push	{r4, lr}
 8004b62:	4604      	mov	r4, r0
 8004b64:	f7ff f9ea 	bl	8003f3c <GUIDRV_FlexColor__InitOnce>
 8004b68:	68a3      	ldr	r3, [r4, #8]
 8004b6a:	4a11      	ldr	r2, [pc, #68]	@ (8004bb0 <GUIDRV_FlexColor_SetFunc66709+0x50>)
 8004b6c:	2100      	movs	r1, #0
 8004b6e:	f8c3 20ac 	str.w	r2, [r3, #172]	@ 0xac
 8004b72:	4a10      	ldr	r2, [pc, #64]	@ (8004bb4 <GUIDRV_FlexColor_SetFunc66709+0x54>)
 8004b74:	f8c3 10bc 	str.w	r1, [r3, #188]	@ 0xbc
 8004b78:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
 8004b7c:	4a0e      	ldr	r2, [pc, #56]	@ (8004bb8 <GUIDRV_FlexColor_SetFunc66709+0x58>)
 8004b7e:	f8c3 10d0 	str.w	r1, [r3, #208]	@ 0xd0
 8004b82:	f8c3 20b0 	str.w	r2, [r3, #176]	@ 0xb0
 8004b86:	4a0d      	ldr	r2, [pc, #52]	@ (8004bbc <GUIDRV_FlexColor_SetFunc66709+0x5c>)
 8004b88:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
 8004b8c:	4a0c      	ldr	r2, [pc, #48]	@ (8004bc0 <GUIDRV_FlexColor_SetFunc66709+0x60>)
 8004b8e:	6810      	ldr	r0, [r2, #0]
 8004b90:	6852      	ldr	r2, [r2, #4]
 8004b92:	f8c3 00b4 	str.w	r0, [r3, #180]	@ 0xb4
 8004b96:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
 8004b9a:	8cda      	ldrh	r2, [r3, #38]	@ 0x26
 8004b9c:	4809      	ldr	r0, [pc, #36]	@ (8004bc4 <GUIDRV_FlexColor_SetFunc66709+0x64>)
 8004b9e:	f022 0203 	bic.w	r2, r2, #3
 8004ba2:	84da      	strh	r2, [r3, #38]	@ 0x26
 8004ba4:	4a08      	ldr	r2, [pc, #32]	@ (8004bc8 <GUIDRV_FlexColor_SetFunc66709+0x68>)
 8004ba6:	f8c3 00cc 	str.w	r0, [r3, #204]	@ 0xcc
 8004baa:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
 8004bae:	bd10      	pop	{r4, pc}
 8004bb0:	08004829 	.word	0x08004829
 8004bb4:	080048cf 	.word	0x080048cf
 8004bb8:	08004975 	.word	0x08004975
 8004bbc:	080049b5 	.word	0x080049b5
 8004bc0:	20000030 	.word	0x20000030
 8004bc4:	08004a91 	.word	0x08004a91
 8004bc8:	08004a5d 	.word	0x08004a5d

08004bcc <_GetDevData>:
 8004bcc:	2901      	cmp	r1, #1
 8004bce:	4802      	ldr	r0, [pc, #8]	@ (8004bd8 <_GetDevData+0xc>)
 8004bd0:	bf18      	it	ne
 8004bd2:	2000      	movne	r0, #0
 8004bd4:	4770      	bx	lr
 8004bd6:	bf00      	nop
 8004bd8:	0800be0c 	.word	0x0800be0c

08004bdc <_GetDevFunc>:
 8004bdc:	2916      	cmp	r1, #22
 8004bde:	4802      	ldr	r0, [pc, #8]	@ (8004be8 <_GetDevFunc+0xc>)
 8004be0:	bf18      	it	ne
 8004be2:	2000      	movne	r0, #0
 8004be4:	4770      	bx	lr
 8004be6:	bf00      	nop
 8004be8:	080056d5 	.word	0x080056d5

08004bec <_SetOrg>:
 8004bec:	6800      	ldr	r0, [r0, #0]
 8004bee:	b110      	cbz	r0, 8004bf6 <_SetOrg+0xa>
 8004bf0:	68c3      	ldr	r3, [r0, #12]
 8004bf2:	6a1b      	ldr	r3, [r3, #32]
 8004bf4:	4718      	bx	r3
 8004bf6:	4770      	bx	lr

08004bf8 <_GetRect>:
 8004bf8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004bfa:	6880      	ldr	r0, [r0, #8]
 8004bfc:	460d      	mov	r5, r1
 8004bfe:	f7fd fa27 	bl	8002050 <GUI_ALLOC_LockH>
 8004c02:	4602      	mov	r2, r0
 8004c04:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8004c08:	8914      	ldrh	r4, [r2, #8]
 8004c0a:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
 8004c0e:	802b      	strh	r3, [r5, #0]
 8004c10:	441c      	add	r4, r3
 8004c12:	8953      	ldrh	r3, [r2, #10]
 8004c14:	a802      	add	r0, sp, #8
 8004c16:	440b      	add	r3, r1
 8004c18:	3b01      	subs	r3, #1
 8004c1a:	3c01      	subs	r4, #1
 8004c1c:	f840 2d04 	str.w	r2, [r0, #-4]!
 8004c20:	8069      	strh	r1, [r5, #2]
 8004c22:	80ac      	strh	r4, [r5, #4]
 8004c24:	80eb      	strh	r3, [r5, #6]
 8004c26:	f7fd fa21 	bl	800206c <GUI_ALLOC_UnlockH>
 8004c2a:	b003      	add	sp, #12
 8004c2c:	bd30      	pop	{r4, r5, pc}
	...

08004c30 <_XY2PTR>:
 8004c30:	4b0e      	ldr	r3, [pc, #56]	@ (8004c6c <_XY2PTR+0x3c>)
 8004c32:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004c34:	681b      	ldr	r3, [r3, #0]
 8004c36:	4606      	mov	r6, r0
 8004c38:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 8004c3a:	460d      	mov	r5, r1
 8004c3c:	f7fd fa08 	bl	8002050 <GUI_ALLOC_LockH>
 8004c40:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8004c44:	68c4      	ldr	r4, [r0, #12]
 8004c46:	1a69      	subs	r1, r5, r1
 8004c48:	f9b0 5004 	ldrsh.w	r5, [r0, #4]
 8004c4c:	ab02      	add	r3, sp, #8
 8004c4e:	1b76      	subs	r6, r6, r5
 8004c50:	0076      	lsls	r6, r6, #1
 8004c52:	3618      	adds	r6, #24
 8004c54:	fb04 6501 	mla	r5, r4, r1, r6
 8004c58:	f843 0d04 	str.w	r0, [r3, #-4]!
 8004c5c:	1944      	adds	r4, r0, r5
 8004c5e:	4618      	mov	r0, r3
 8004c60:	f7fd fa04 	bl	800206c <GUI_ALLOC_UnlockH>
 8004c64:	4620      	mov	r0, r4
 8004c66:	b002      	add	sp, #8
 8004c68:	bd70      	pop	{r4, r5, r6, pc}
 8004c6a:	bf00      	nop
 8004c6c:	20000014 	.word	0x20000014

08004c70 <_GetPixelIndex>:
 8004c70:	b508      	push	{r3, lr}
 8004c72:	4608      	mov	r0, r1
 8004c74:	4611      	mov	r1, r2
 8004c76:	f7ff ffdb 	bl	8004c30 <_XY2PTR>
 8004c7a:	8800      	ldrh	r0, [r0, #0]
 8004c7c:	bd08      	pop	{r3, pc}
	...

08004c80 <_XorPixel>:
 8004c80:	4b14      	ldr	r3, [pc, #80]	@ (8004cd4 <_XorPixel+0x54>)
 8004c82:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004c84:	681b      	ldr	r3, [r3, #0]
 8004c86:	4607      	mov	r7, r0
 8004c88:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 8004c8a:	4616      	mov	r6, r2
 8004c8c:	460d      	mov	r5, r1
 8004c8e:	f7fd f9df 	bl	8002050 <GUI_ALLOC_LockH>
 8004c92:	4631      	mov	r1, r6
 8004c94:	9000      	str	r0, [sp, #0]
 8004c96:	4628      	mov	r0, r5
 8004c98:	f7ff ffca 	bl	8004c30 <_XY2PTR>
 8004c9c:	693b      	ldr	r3, [r7, #16]
 8004c9e:	4604      	mov	r4, r0
 8004ca0:	689b      	ldr	r3, [r3, #8]
 8004ca2:	4798      	blx	r3
 8004ca4:	8823      	ldrh	r3, [r4, #0]
 8004ca6:	4058      	eors	r0, r3
 8004ca8:	9b00      	ldr	r3, [sp, #0]
 8004caa:	8020      	strh	r0, [r4, #0]
 8004cac:	6958      	ldr	r0, [r3, #20]
 8004cae:	b160      	cbz	r0, 8004cca <_XorPixel+0x4a>
 8004cb0:	f7fd f9ce 	bl	8002050 <GUI_ALLOC_LockH>
 8004cb4:	6883      	ldr	r3, [r0, #8]
 8004cb6:	ac02      	add	r4, sp, #8
 8004cb8:	f844 0d04 	str.w	r0, [r4, #-4]!
 8004cbc:	681b      	ldr	r3, [r3, #0]
 8004cbe:	4632      	mov	r2, r6
 8004cc0:	4629      	mov	r1, r5
 8004cc2:	4798      	blx	r3
 8004cc4:	4620      	mov	r0, r4
 8004cc6:	f7fd f9d1 	bl	800206c <GUI_ALLOC_UnlockH>
 8004cca:	4668      	mov	r0, sp
 8004ccc:	f7fd f9ce 	bl	800206c <GUI_ALLOC_UnlockH>
 8004cd0:	b003      	add	sp, #12
 8004cd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004cd4:	20000014 	.word	0x20000014

08004cd8 <_SetPixelIndex>:
 8004cd8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004cda:	461c      	mov	r4, r3
 8004cdc:	4b10      	ldr	r3, [pc, #64]	@ (8004d20 <_SetPixelIndex+0x48>)
 8004cde:	460d      	mov	r5, r1
 8004ce0:	681b      	ldr	r3, [r3, #0]
 8004ce2:	4616      	mov	r6, r2
 8004ce4:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 8004ce6:	f7fd f9b3 	bl	8002050 <GUI_ALLOC_LockH>
 8004cea:	4631      	mov	r1, r6
 8004cec:	9000      	str	r0, [sp, #0]
 8004cee:	4628      	mov	r0, r5
 8004cf0:	f7ff ff9e 	bl	8004c30 <_XY2PTR>
 8004cf4:	9b00      	ldr	r3, [sp, #0]
 8004cf6:	8004      	strh	r4, [r0, #0]
 8004cf8:	6958      	ldr	r0, [r3, #20]
 8004cfa:	b160      	cbz	r0, 8004d16 <_SetPixelIndex+0x3e>
 8004cfc:	f7fd f9a8 	bl	8002050 <GUI_ALLOC_LockH>
 8004d00:	6883      	ldr	r3, [r0, #8]
 8004d02:	ac02      	add	r4, sp, #8
 8004d04:	f844 0d04 	str.w	r0, [r4, #-4]!
 8004d08:	681b      	ldr	r3, [r3, #0]
 8004d0a:	4632      	mov	r2, r6
 8004d0c:	4629      	mov	r1, r5
 8004d0e:	4798      	blx	r3
 8004d10:	4620      	mov	r0, r4
 8004d12:	f7fd f9ab 	bl	800206c <GUI_ALLOC_UnlockH>
 8004d16:	4668      	mov	r0, sp
 8004d18:	f7fd f9a8 	bl	800206c <GUI_ALLOC_UnlockH>
 8004d1c:	b002      	add	sp, #8
 8004d1e:	bd70      	pop	{r4, r5, r6, pc}
 8004d20:	20000014 	.word	0x20000014

08004d24 <_DrawVLine>:
 8004d24:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004d28:	4c2c      	ldr	r4, [pc, #176]	@ (8004ddc <_DrawVLine+0xb8>)
 8004d2a:	461e      	mov	r6, r3
 8004d2c:	6823      	ldr	r3, [r4, #0]
 8004d2e:	4680      	mov	r8, r0
 8004d30:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 8004d32:	460f      	mov	r7, r1
 8004d34:	4615      	mov	r5, r2
 8004d36:	f7fd f98b 	bl	8002050 <GUI_ALLOC_LockH>
 8004d3a:	9000      	str	r0, [sp, #0]
 8004d3c:	6940      	ldr	r0, [r0, #20]
 8004d3e:	46a1      	mov	r9, r4
 8004d40:	b108      	cbz	r0, 8004d46 <_DrawVLine+0x22>
 8004d42:	f7fd f985 	bl	8002050 <GUI_ALLOC_LockH>
 8004d46:	9001      	str	r0, [sp, #4]
 8004d48:	4629      	mov	r1, r5
 8004d4a:	4638      	mov	r0, r7
 8004d4c:	f7ff ff70 	bl	8004c30 <_XY2PTR>
 8004d50:	f8d9 3000 	ldr.w	r3, [r9]
 8004d54:	4604      	mov	r4, r0
 8004d56:	7c1a      	ldrb	r2, [r3, #16]
 8004d58:	07d2      	lsls	r2, r2, #31
 8004d5a:	d51f      	bpl.n	8004d9c <_DrawVLine+0x78>
 8004d5c:	f8d8 3010 	ldr.w	r3, [r8, #16]
 8004d60:	689b      	ldr	r3, [r3, #8]
 8004d62:	4798      	blx	r3
 8004d64:	fa1f f880 	uxth.w	r8, r0
 8004d68:	9801      	ldr	r0, [sp, #4]
 8004d6a:	b120      	cbz	r0, 8004d76 <_DrawVLine+0x52>
 8004d6c:	6883      	ldr	r3, [r0, #8]
 8004d6e:	462a      	mov	r2, r5
 8004d70:	681b      	ldr	r3, [r3, #0]
 8004d72:	4639      	mov	r1, r7
 8004d74:	4798      	blx	r3
 8004d76:	8823      	ldrh	r3, [r4, #0]
 8004d78:	3501      	adds	r5, #1
 8004d7a:	ea88 0303 	eor.w	r3, r8, r3
 8004d7e:	8023      	strh	r3, [r4, #0]
 8004d80:	9b00      	ldr	r3, [sp, #0]
 8004d82:	42b5      	cmp	r5, r6
 8004d84:	68db      	ldr	r3, [r3, #12]
 8004d86:	441c      	add	r4, r3
 8004d88:	ddee      	ble.n	8004d68 <_DrawVLine+0x44>
 8004d8a:	4668      	mov	r0, sp
 8004d8c:	f7fd f96e 	bl	800206c <GUI_ALLOC_UnlockH>
 8004d90:	9b01      	ldr	r3, [sp, #4]
 8004d92:	b303      	cbz	r3, 8004dd6 <_DrawVLine+0xb2>
 8004d94:	a801      	add	r0, sp, #4
 8004d96:	f7fd f969 	bl	800206c <GUI_ALLOC_UnlockH>
 8004d9a:	e01c      	b.n	8004dd6 <_DrawVLine+0xb2>
 8004d9c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004d9e:	9a00      	ldr	r2, [sp, #0]
 8004da0:	f8d3 9000 	ldr.w	r9, [r3]
 8004da4:	9b01      	ldr	r3, [sp, #4]
 8004da6:	f8d2 800c 	ldr.w	r8, [r2, #12]
 8004daa:	b163      	cbz	r3, 8004dc6 <_DrawVLine+0xa2>
 8004dac:	9801      	ldr	r0, [sp, #4]
 8004dae:	462a      	mov	r2, r5
 8004db0:	6883      	ldr	r3, [r0, #8]
 8004db2:	4639      	mov	r1, r7
 8004db4:	681b      	ldr	r3, [r3, #0]
 8004db6:	3501      	adds	r5, #1
 8004db8:	4798      	blx	r3
 8004dba:	42ae      	cmp	r6, r5
 8004dbc:	f8a4 9000 	strh.w	r9, [r4]
 8004dc0:	4444      	add	r4, r8
 8004dc2:	daf3      	bge.n	8004dac <_DrawVLine+0x88>
 8004dc4:	e7e1      	b.n	8004d8a <_DrawVLine+0x66>
 8004dc6:	1b75      	subs	r5, r6, r5
 8004dc8:	3501      	adds	r5, #1
 8004dca:	3d01      	subs	r5, #1
 8004dcc:	f8a4 9000 	strh.w	r9, [r4]
 8004dd0:	4444      	add	r4, r8
 8004dd2:	d1fa      	bne.n	8004dca <_DrawVLine+0xa6>
 8004dd4:	e7d9      	b.n	8004d8a <_DrawVLine+0x66>
 8004dd6:	b003      	add	sp, #12
 8004dd8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004ddc:	20000014 	.word	0x20000014

08004de0 <_FillRect>:
 8004de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004de4:	4f2a      	ldr	r7, [pc, #168]	@ (8004e90 <_FillRect+0xb0>)
 8004de6:	461d      	mov	r5, r3
 8004de8:	683b      	ldr	r3, [r7, #0]
 8004dea:	4614      	mov	r4, r2
 8004dec:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8004dee:	b087      	sub	sp, #28
 8004df0:	6812      	ldr	r2, [r2, #0]
 8004df2:	4683      	mov	fp, r0
 8004df4:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 8004df6:	4689      	mov	r9, r1
 8004df8:	9202      	str	r2, [sp, #8]
 8004dfa:	f7fd f929 	bl	8002050 <GUI_ALLOC_LockH>
 8004dfe:	4621      	mov	r1, r4
 8004e00:	9004      	str	r0, [sp, #16]
 8004e02:	4648      	mov	r0, r9
 8004e04:	f7ff ff14 	bl	8004c30 <_XY2PTR>
 8004e08:	9a04      	ldr	r2, [sp, #16]
 8004e0a:	4606      	mov	r6, r0
 8004e0c:	68d3      	ldr	r3, [r2, #12]
 8004e0e:	6950      	ldr	r0, [r2, #20]
 8004e10:	ebc9 0505 	rsb	r5, r9, r5
 8004e14:	9303      	str	r3, [sp, #12]
 8004e16:	f105 0a01 	add.w	sl, r5, #1
 8004e1a:	b188      	cbz	r0, 8004e40 <_FillRect+0x60>
 8004e1c:	f7fd f918 	bl	8002050 <GUI_ALLOC_LockH>
 8004e20:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8004e22:	f10d 0818 	add.w	r8, sp, #24
 8004e26:	1b1b      	subs	r3, r3, r4
 8004e28:	3301      	adds	r3, #1
 8004e2a:	f848 0d04 	str.w	r0, [r8, #-4]!
 8004e2e:	4622      	mov	r2, r4
 8004e30:	9300      	str	r3, [sp, #0]
 8004e32:	4649      	mov	r1, r9
 8004e34:	4653      	mov	r3, sl
 8004e36:	f000 fbf9 	bl	800562c <GUI_USAGE_AddRect>
 8004e3a:	4640      	mov	r0, r8
 8004e3c:	f7fd f916 	bl	800206c <GUI_ALLOC_UnlockH>
 8004e40:	f8bd 8008 	ldrh.w	r8, [sp, #8]
 8004e44:	006d      	lsls	r5, r5, #1
 8004e46:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8004e48:	429c      	cmp	r4, r3
 8004e4a:	dc1a      	bgt.n	8004e82 <_FillRect+0xa2>
 8004e4c:	683b      	ldr	r3, [r7, #0]
 8004e4e:	7c1b      	ldrb	r3, [r3, #16]
 8004e50:	07db      	lsls	r3, r3, #31
 8004e52:	d50d      	bpl.n	8004e70 <_FillRect+0x90>
 8004e54:	f8db 3010 	ldr.w	r3, [fp, #16]
 8004e58:	689b      	ldr	r3, [r3, #8]
 8004e5a:	4798      	blx	r3
 8004e5c:	1eb3      	subs	r3, r6, #2
 8004e5e:	b280      	uxth	r0, r0
 8004e60:	1971      	adds	r1, r6, r5
 8004e62:	f833 2f02 	ldrh.w	r2, [r3, #2]!
 8004e66:	4042      	eors	r2, r0
 8004e68:	428b      	cmp	r3, r1
 8004e6a:	801a      	strh	r2, [r3, #0]
 8004e6c:	d1f9      	bne.n	8004e62 <_FillRect+0x82>
 8004e6e:	e004      	b.n	8004e7a <_FillRect+0x9a>
 8004e70:	4652      	mov	r2, sl
 8004e72:	4641      	mov	r1, r8
 8004e74:	4630      	mov	r0, r6
 8004e76:	f7fe f85f 	bl	8002f38 <GUI__memset16>
 8004e7a:	9b03      	ldr	r3, [sp, #12]
 8004e7c:	3401      	adds	r4, #1
 8004e7e:	441e      	add	r6, r3
 8004e80:	e7e1      	b.n	8004e46 <_FillRect+0x66>
 8004e82:	a804      	add	r0, sp, #16
 8004e84:	f7fd f8f2 	bl	800206c <GUI_ALLOC_UnlockH>
 8004e88:	b007      	add	sp, #28
 8004e8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004e8e:	bf00      	nop
 8004e90:	20000014 	.word	0x20000014

08004e94 <_DrawHLine>:
 8004e94:	b507      	push	{r0, r1, r2, lr}
 8004e96:	9200      	str	r2, [sp, #0]
 8004e98:	f7ff ffa2 	bl	8004de0 <_FillRect>
 8004e9c:	b003      	add	sp, #12
 8004e9e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08004ea4 <_DrawBitmap>:
 8004ea4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004ea8:	4d99      	ldr	r5, [pc, #612]	@ (8005110 <_DrawBitmap+0x26c>)
 8004eaa:	b091      	sub	sp, #68	@ 0x44
 8004eac:	9302      	str	r3, [sp, #8]
 8004eae:	682b      	ldr	r3, [r5, #0]
 8004eb0:	900a      	str	r0, [sp, #40]	@ 0x28
 8004eb2:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 8004eb4:	460e      	mov	r6, r1
 8004eb6:	9205      	str	r2, [sp, #20]
 8004eb8:	9c1d      	ldr	r4, [sp, #116]	@ 0x74
 8004eba:	f7fd f8c9 	bl	8002050 <GUI_ALLOC_LockH>
 8004ebe:	900e      	str	r0, [sp, #56]	@ 0x38
 8004ec0:	6940      	ldr	r0, [r0, #20]
 8004ec2:	b108      	cbz	r0, 8004ec8 <_DrawBitmap+0x24>
 8004ec4:	f7fd f8c4 	bl	8002050 <GUI_ALLOC_LockH>
 8004ec8:	900f      	str	r0, [sp, #60]	@ 0x3c
 8004eca:	a810      	add	r0, sp, #64	@ 0x40
 8004ecc:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 8004ed0:	68db      	ldr	r3, [r3, #12]
 8004ed2:	9306      	str	r3, [sp, #24]
 8004ed4:	f7fd f8ca 	bl	800206c <GUI_ALLOC_UnlockH>
 8004ed8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8004eda:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8004edc:	eb06 0b03 	add.w	fp, r6, r3
 8004ee0:	b150      	cbz	r0, 8004ef8 <_DrawBitmap+0x54>
 8004ee2:	682b      	ldr	r3, [r5, #0]
 8004ee4:	7c1b      	ldrb	r3, [r3, #16]
 8004ee6:	0799      	lsls	r1, r3, #30
 8004ee8:	d106      	bne.n	8004ef8 <_DrawBitmap+0x54>
 8004eea:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8004eec:	9a05      	ldr	r2, [sp, #20]
 8004eee:	9300      	str	r3, [sp, #0]
 8004ef0:	4659      	mov	r1, fp
 8004ef2:	9b02      	ldr	r3, [sp, #8]
 8004ef4:	f000 fb9a 	bl	800562c <GUI_USAGE_AddRect>
 8004ef8:	9905      	ldr	r1, [sp, #20]
 8004efa:	4658      	mov	r0, fp
 8004efc:	f7ff fe98 	bl	8004c30 <_XY2PTR>
 8004f00:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8004f02:	4605      	mov	r5, r0
 8004f04:	2b10      	cmp	r3, #16
 8004f06:	d134      	bne.n	8004f72 <_DrawBitmap+0xce>
 8004f08:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004f0a:	b133      	cbz	r3, 8004f1a <_DrawBitmap+0x76>
 8004f0c:	9b02      	ldr	r3, [sp, #8]
 8004f0e:	2600      	movs	r6, #0
 8004f10:	ea4f 0843 	mov.w	r8, r3, lsl #1
 8004f14:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 8005118 <_DrawBitmap+0x274>
 8004f18:	e012      	b.n	8004f40 <_DrawBitmap+0x9c>
 8004f1a:	4b7e      	ldr	r3, [pc, #504]	@ (8005114 <_DrawBitmap+0x270>)
 8004f1c:	681e      	ldr	r6, [r3, #0]
 8004f1e:	2e00      	cmp	r6, #0
 8004f20:	d0f4      	beq.n	8004f0c <_DrawBitmap+0x68>
 8004f22:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8004f24:	9a02      	ldr	r2, [sp, #8]
 8004f26:	9301      	str	r3, [sp, #4]
 8004f28:	9b06      	ldr	r3, [sp, #24]
 8004f2a:	4621      	mov	r1, r4
 8004f2c:	9300      	str	r3, [sp, #0]
 8004f2e:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8004f30:	47b0      	blx	r6
 8004f32:	e356      	b.n	80055e2 <_DrawBitmap+0x73e>
 8004f34:	b944      	cbnz	r4, 8004f48 <_DrawBitmap+0xa4>
 8004f36:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8004f38:	3601      	adds	r6, #1
 8004f3a:	441c      	add	r4, r3
 8004f3c:	9b06      	ldr	r3, [sp, #24]
 8004f3e:	441d      	add	r5, r3
 8004f40:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8004f42:	429e      	cmp	r6, r3
 8004f44:	dbf6      	blt.n	8004f34 <_DrawBitmap+0x90>
 8004f46:	e347      	b.n	80055d8 <_DrawBitmap+0x734>
 8004f48:	2d00      	cmp	r5, #0
 8004f4a:	d0f4      	beq.n	8004f36 <_DrawBitmap+0x92>
 8004f4c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8004f4e:	4642      	mov	r2, r8
 8004f50:	4621      	mov	r1, r4
 8004f52:	4628      	mov	r0, r5
 8004f54:	f8d9 3000 	ldr.w	r3, [r9]
 8004f58:	4798      	blx	r3
 8004f5a:	2f00      	cmp	r7, #0
 8004f5c:	d0eb      	beq.n	8004f36 <_DrawBitmap+0x92>
 8004f5e:	68bb      	ldr	r3, [r7, #8]
 8004f60:	9a05      	ldr	r2, [sp, #20]
 8004f62:	f8d3 a004 	ldr.w	sl, [r3, #4]
 8004f66:	4432      	add	r2, r6
 8004f68:	9b02      	ldr	r3, [sp, #8]
 8004f6a:	4659      	mov	r1, fp
 8004f6c:	4638      	mov	r0, r7
 8004f6e:	47d0      	blx	sl
 8004f70:	e7e1      	b.n	8004f36 <_DrawBitmap+0x92>
 8004f72:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8004f74:	2b17      	cmp	r3, #23
 8004f76:	dd44      	ble.n	8005002 <_DrawBitmap+0x15e>
 8004f78:	f06f 0303 	mvn.w	r3, #3
 8004f7c:	fb03 f30b 	mul.w	r3, r3, fp
 8004f80:	9307      	str	r3, [sp, #28]
 8004f82:	f06f 0301 	mvn.w	r3, #1
 8004f86:	fb03 f30b 	mul.w	r3, r3, fp
 8004f8a:	9304      	str	r3, [sp, #16]
 8004f8c:	9b02      	ldr	r3, [sp, #8]
 8004f8e:	f04f 0800 	mov.w	r8, #0
 8004f92:	445b      	add	r3, fp
 8004f94:	9308      	str	r3, [sp, #32]
 8004f96:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8004f98:	4598      	cmp	r8, r3
 8004f9a:	f280 831d 	bge.w	80055d8 <_DrawBitmap+0x734>
 8004f9e:	9b05      	ldr	r3, [sp, #20]
 8004fa0:	eb03 0908 	add.w	r9, r3, r8
 8004fa4:	b934      	cbnz	r4, 8004fb4 <_DrawBitmap+0x110>
 8004fa6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8004fa8:	f108 0801 	add.w	r8, r8, #1
 8004fac:	441c      	add	r4, r3
 8004fae:	9b06      	ldr	r3, [sp, #24]
 8004fb0:	441d      	add	r5, r3
 8004fb2:	e7f0      	b.n	8004f96 <_DrawBitmap+0xf2>
 8004fb4:	2d00      	cmp	r5, #0
 8004fb6:	d0f6      	beq.n	8004fa6 <_DrawBitmap+0x102>
 8004fb8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8004fba:	b137      	cbz	r7, 8004fca <_DrawBitmap+0x126>
 8004fbc:	68bb      	ldr	r3, [r7, #8]
 8004fbe:	464a      	mov	r2, r9
 8004fc0:	685e      	ldr	r6, [r3, #4]
 8004fc2:	4659      	mov	r1, fp
 8004fc4:	9b02      	ldr	r3, [sp, #8]
 8004fc6:	4638      	mov	r0, r7
 8004fc8:	47b0      	blx	r6
 8004fca:	465e      	mov	r6, fp
 8004fcc:	9b07      	ldr	r3, [sp, #28]
 8004fce:	eb04 0a03 	add.w	sl, r4, r3
 8004fd2:	9b04      	ldr	r3, [sp, #16]
 8004fd4:	18eb      	adds	r3, r5, r3
 8004fd6:	9303      	str	r3, [sp, #12]
 8004fd8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004fda:	f85a 0026 	ldr.w	r0, [sl, r6, lsl #2]
 8004fde:	691b      	ldr	r3, [r3, #16]
 8004fe0:	681b      	ldr	r3, [r3, #0]
 8004fe2:	4798      	blx	r3
 8004fe4:	9b03      	ldr	r3, [sp, #12]
 8004fe6:	f823 0016 	strh.w	r0, [r3, r6, lsl #1]
 8004fea:	b12f      	cbz	r7, 8004ff8 <_DrawBitmap+0x154>
 8004fec:	68bb      	ldr	r3, [r7, #8]
 8004fee:	464a      	mov	r2, r9
 8004ff0:	681b      	ldr	r3, [r3, #0]
 8004ff2:	4631      	mov	r1, r6
 8004ff4:	4638      	mov	r0, r7
 8004ff6:	4798      	blx	r3
 8004ff8:	9b08      	ldr	r3, [sp, #32]
 8004ffa:	3601      	adds	r6, #1
 8004ffc:	429e      	cmp	r6, r3
 8004ffe:	d1eb      	bne.n	8004fd8 <_DrawBitmap+0x134>
 8005000:	e7d1      	b.n	8004fa6 <_DrawBitmap+0x102>
 8005002:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8005004:	2b08      	cmp	r3, #8
 8005006:	f040 8089 	bne.w	800511c <_DrawBitmap+0x278>
 800500a:	9b02      	ldr	r3, [sp, #8]
 800500c:	9e05      	ldr	r6, [sp, #20]
 800500e:	005b      	lsls	r3, r3, #1
 8005010:	9307      	str	r3, [sp, #28]
 8005012:	f06f 0301 	mvn.w	r3, #1
 8005016:	fb03 f30b 	mul.w	r3, r3, fp
 800501a:	9303      	str	r3, [sp, #12]
 800501c:	9b02      	ldr	r3, [sp, #8]
 800501e:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8005110 <_DrawBitmap+0x26c>
 8005022:	445b      	add	r3, fp
 8005024:	3c01      	subs	r4, #1
 8005026:	9304      	str	r3, [sp, #16]
 8005028:	9b05      	ldr	r3, [sp, #20]
 800502a:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800502c:	1af3      	subs	r3, r6, r3
 800502e:	429a      	cmp	r2, r3
 8005030:	f104 0101 	add.w	r1, r4, #1
 8005034:	f340 82d0 	ble.w	80055d8 <_DrawBitmap+0x734>
 8005038:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 800503a:	2b00      	cmp	r3, #0
 800503c:	d036      	beq.n	80050ac <_DrawBitmap+0x208>
 800503e:	f8d9 3000 	ldr.w	r3, [r9]
 8005042:	7c1b      	ldrb	r3, [r3, #16]
 8005044:	f013 0303 	ands.w	r3, r3, #3
 8005048:	d009      	beq.n	800505e <_DrawBitmap+0x1ba>
 800504a:	2b02      	cmp	r3, #2
 800504c:	d15a      	bne.n	8005104 <_DrawBitmap+0x260>
 800504e:	9b03      	ldr	r3, [sp, #12]
 8005050:	f8dd 803c 	ldr.w	r8, [sp, #60]	@ 0x3c
 8005054:	18eb      	adds	r3, r5, r3
 8005056:	9308      	str	r3, [sp, #32]
 8005058:	46a2      	mov	sl, r4
 800505a:	465f      	mov	r7, fp
 800505c:	e021      	b.n	80050a2 <_DrawBitmap+0x1fe>
 800505e:	9b07      	ldr	r3, [sp, #28]
 8005060:	4622      	mov	r2, r4
 8005062:	18e9      	adds	r1, r5, r3
 8005064:	462b      	mov	r3, r5
 8005066:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800506a:	9f1f      	ldr	r7, [sp, #124]	@ 0x7c
 800506c:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 8005070:	f823 0b02 	strh.w	r0, [r3], #2
 8005074:	428b      	cmp	r3, r1
 8005076:	d1f6      	bne.n	8005066 <_DrawBitmap+0x1c2>
 8005078:	e044      	b.n	8005104 <_DrawBitmap+0x260>
 800507a:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 800507c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8005080:	9a08      	ldr	r2, [sp, #32]
 8005082:	f822 3017 	strh.w	r3, [r2, r7, lsl #1]
 8005086:	f1b8 0f00 	cmp.w	r8, #0
 800508a:	d006      	beq.n	800509a <_DrawBitmap+0x1f6>
 800508c:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005090:	4632      	mov	r2, r6
 8005092:	681b      	ldr	r3, [r3, #0]
 8005094:	4639      	mov	r1, r7
 8005096:	4640      	mov	r0, r8
 8005098:	4798      	blx	r3
 800509a:	9b04      	ldr	r3, [sp, #16]
 800509c:	3701      	adds	r7, #1
 800509e:	42bb      	cmp	r3, r7
 80050a0:	d030      	beq.n	8005104 <_DrawBitmap+0x260>
 80050a2:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
 80050a6:	2b00      	cmp	r3, #0
 80050a8:	d0f7      	beq.n	800509a <_DrawBitmap+0x1f6>
 80050aa:	e7e6      	b.n	800507a <_DrawBitmap+0x1d6>
 80050ac:	f8d9 3000 	ldr.w	r3, [r9]
 80050b0:	7c1b      	ldrb	r3, [r3, #16]
 80050b2:	f013 0303 	ands.w	r3, r3, #3
 80050b6:	d009      	beq.n	80050cc <_DrawBitmap+0x228>
 80050b8:	2b02      	cmp	r3, #2
 80050ba:	d123      	bne.n	8005104 <_DrawBitmap+0x260>
 80050bc:	9b03      	ldr	r3, [sp, #12]
 80050be:	f8dd 803c 	ldr.w	r8, [sp, #60]	@ 0x3c
 80050c2:	18eb      	adds	r3, r5, r3
 80050c4:	9308      	str	r3, [sp, #32]
 80050c6:	46a2      	mov	sl, r4
 80050c8:	465f      	mov	r7, fp
 80050ca:	e016      	b.n	80050fa <_DrawBitmap+0x256>
 80050cc:	4b12      	ldr	r3, [pc, #72]	@ (8005118 <_DrawBitmap+0x274>)
 80050ce:	9a02      	ldr	r2, [sp, #8]
 80050d0:	4628      	mov	r0, r5
 80050d2:	681b      	ldr	r3, [r3, #0]
 80050d4:	4798      	blx	r3
 80050d6:	e015      	b.n	8005104 <_DrawBitmap+0x260>
 80050d8:	9a08      	ldr	r2, [sp, #32]
 80050da:	f822 3017 	strh.w	r3, [r2, r7, lsl #1]
 80050de:	f1b8 0f00 	cmp.w	r8, #0
 80050e2:	d006      	beq.n	80050f2 <_DrawBitmap+0x24e>
 80050e4:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80050e8:	4632      	mov	r2, r6
 80050ea:	681b      	ldr	r3, [r3, #0]
 80050ec:	4639      	mov	r1, r7
 80050ee:	4640      	mov	r0, r8
 80050f0:	4798      	blx	r3
 80050f2:	9b04      	ldr	r3, [sp, #16]
 80050f4:	3701      	adds	r7, #1
 80050f6:	429f      	cmp	r7, r3
 80050f8:	d004      	beq.n	8005104 <_DrawBitmap+0x260>
 80050fa:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
 80050fe:	2b00      	cmp	r3, #0
 8005100:	d0f7      	beq.n	80050f2 <_DrawBitmap+0x24e>
 8005102:	e7e9      	b.n	80050d8 <_DrawBitmap+0x234>
 8005104:	9b06      	ldr	r3, [sp, #24]
 8005106:	3601      	adds	r6, #1
 8005108:	441d      	add	r5, r3
 800510a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 800510c:	441c      	add	r4, r3
 800510e:	e78b      	b.n	8005028 <_DrawBitmap+0x184>
 8005110:	20000014 	.word	0x20000014
 8005114:	20000234 	.word	0x20000234
 8005118:	20000020 	.word	0x20000020
 800511c:	4baf      	ldr	r3, [pc, #700]	@ (80053dc <_DrawBitmap+0x538>)
 800511e:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8005120:	2a00      	cmp	r2, #0
 8005122:	bf08      	it	eq
 8005124:	461a      	moveq	r2, r3
 8005126:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8005128:	921f      	str	r2, [sp, #124]	@ 0x7c
 800512a:	005b      	lsls	r3, r3, #1
 800512c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800512e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8005130:	009b      	lsls	r3, r3, #2
 8005132:	930c      	str	r3, [sp, #48]	@ 0x30
 8005134:	1c63      	adds	r3, r4, #1
 8005136:	9303      	str	r3, [sp, #12]
 8005138:	1c83      	adds	r3, r0, #2
 800513a:	9307      	str	r3, [sp, #28]
 800513c:	9b05      	ldr	r3, [sp, #20]
 800513e:	9304      	str	r3, [sp, #16]
 8005140:	9b07      	ldr	r3, [sp, #28]
 8005142:	9a05      	ldr	r2, [sp, #20]
 8005144:	1e9c      	subs	r4, r3, #2
 8005146:	9b03      	ldr	r3, [sp, #12]
 8005148:	f103 3aff 	add.w	sl, r3, #4294967295
 800514c:	9b04      	ldr	r3, [sp, #16]
 800514e:	1a9b      	subs	r3, r3, r2
 8005150:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8005152:	429a      	cmp	r2, r3
 8005154:	f340 8240 	ble.w	80055d8 <_DrawBitmap+0x734>
 8005158:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 800515a:	2b02      	cmp	r3, #2
 800515c:	f000 80c9 	beq.w	80052f2 <_DrawBitmap+0x44e>
 8005160:	2b04      	cmp	r3, #4
 8005162:	f000 8164 	beq.w	800542e <_DrawBitmap+0x58a>
 8005166:	2b01      	cmp	r3, #1
 8005168:	f040 822a 	bne.w	80055c0 <_DrawBitmap+0x71c>
 800516c:	4b9c      	ldr	r3, [pc, #624]	@ (80053e0 <_DrawBitmap+0x53c>)
 800516e:	681b      	ldr	r3, [r3, #0]
 8005170:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 8005172:	f7fc ff6d 	bl	8002050 <GUI_ALLOC_LockH>
 8005176:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8005178:	4a9a      	ldr	r2, [pc, #616]	@ (80053e4 <_DrawBitmap+0x540>)
 800517a:	f1c3 0508 	rsb	r5, r3, #8
 800517e:	9b03      	ldr	r3, [sp, #12]
 8005180:	900e      	str	r0, [sp, #56]	@ 0x38
 8005182:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8005186:	f8dd 903c 	ldr.w	r9, [sp, #60]	@ 0x3c
 800518a:	5cd6      	ldrb	r6, [r2, r3]
 800518c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 800518e:	9f02      	ldr	r7, [sp, #8]
 8005190:	411e      	asrs	r6, r3
 8005192:	4b93      	ldr	r3, [pc, #588]	@ (80053e0 <_DrawBitmap+0x53c>)
 8005194:	681b      	ldr	r3, [r3, #0]
 8005196:	7c1b      	ldrb	r3, [r3, #16]
 8005198:	f003 0303 	and.w	r3, r3, #3
 800519c:	2b02      	cmp	r3, #2
 800519e:	d01f      	beq.n	80051e0 <_DrawBitmap+0x33c>
 80051a0:	2b03      	cmp	r3, #3
 80051a2:	d059      	beq.n	8005258 <_DrawBitmap+0x3b4>
 80051a4:	2b01      	cmp	r3, #1
 80051a6:	d057      	beq.n	8005258 <_DrawBitmap+0x3b4>
 80051a8:	42bd      	cmp	r5, r7
 80051aa:	bf28      	it	cs
 80051ac:	463d      	movcs	r5, r7
 80051ae:	4622      	mov	r2, r4
 80051b0:	462b      	mov	r3, r5
 80051b2:	1b7f      	subs	r7, r7, r5
 80051b4:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80051b6:	f006 0101 	and.w	r1, r6, #1
 80051ba:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
 80051be:	3b01      	subs	r3, #1
 80051c0:	f822 1b02 	strh.w	r1, [r2], #2
 80051c4:	ea4f 0656 	mov.w	r6, r6, lsr #1
 80051c8:	d1f4      	bne.n	80051b4 <_DrawBitmap+0x310>
 80051ca:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 80051ce:	2f00      	cmp	r7, #0
 80051d0:	f000 808b 	beq.w	80052ea <_DrawBitmap+0x446>
 80051d4:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
 80051d8:	4a82      	ldr	r2, [pc, #520]	@ (80053e4 <_DrawBitmap+0x540>)
 80051da:	2508      	movs	r5, #8
 80051dc:	5cd6      	ldrb	r6, [r2, r3]
 80051de:	e7e3      	b.n	80051a8 <_DrawBitmap+0x304>
 80051e0:	46d8      	mov	r8, fp
 80051e2:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80051e4:	889b      	ldrh	r3, [r3, #4]
 80051e6:	9308      	str	r3, [sp, #32]
 80051e8:	42bd      	cmp	r5, r7
 80051ea:	bf28      	it	cs
 80051ec:	463d      	movcs	r5, r7
 80051ee:	1b7f      	subs	r7, r7, r5
 80051f0:	f1b9 0f00 	cmp.w	r9, #0
 80051f4:	d024      	beq.n	8005240 <_DrawBitmap+0x39c>
 80051f6:	b91e      	cbnz	r6, 8005200 <_DrawBitmap+0x35c>
 80051f8:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 80051fc:	44a8      	add	r8, r5
 80051fe:	e023      	b.n	8005248 <_DrawBitmap+0x3a4>
 8005200:	07f2      	lsls	r2, r6, #31
 8005202:	d509      	bpl.n	8005218 <_DrawBitmap+0x374>
 8005204:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8005208:	9a04      	ldr	r2, [sp, #16]
 800520a:	681b      	ldr	r3, [r3, #0]
 800520c:	4641      	mov	r1, r8
 800520e:	4648      	mov	r0, r9
 8005210:	4798      	blx	r3
 8005212:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8005216:	8023      	strh	r3, [r4, #0]
 8005218:	3d01      	subs	r5, #1
 800521a:	f108 0801 	add.w	r8, r8, #1
 800521e:	f104 0402 	add.w	r4, r4, #2
 8005222:	d011      	beq.n	8005248 <_DrawBitmap+0x3a4>
 8005224:	0876      	lsrs	r6, r6, #1
 8005226:	e7e6      	b.n	80051f6 <_DrawBitmap+0x352>
 8005228:	07f3      	lsls	r3, r6, #31
 800522a:	bf48      	it	mi
 800522c:	f8bd 3020 	ldrhmi.w	r3, [sp, #32]
 8005230:	f104 0402 	add.w	r4, r4, #2
 8005234:	bf48      	it	mi
 8005236:	f824 3c02 	strhmi.w	r3, [r4, #-2]
 800523a:	3d01      	subs	r5, #1
 800523c:	d004      	beq.n	8005248 <_DrawBitmap+0x3a4>
 800523e:	0876      	lsrs	r6, r6, #1
 8005240:	2e00      	cmp	r6, #0
 8005242:	d1f1      	bne.n	8005228 <_DrawBitmap+0x384>
 8005244:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 8005248:	2f00      	cmp	r7, #0
 800524a:	d04e      	beq.n	80052ea <_DrawBitmap+0x446>
 800524c:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
 8005250:	4a64      	ldr	r2, [pc, #400]	@ (80053e4 <_DrawBitmap+0x540>)
 8005252:	2508      	movs	r5, #8
 8005254:	5cd6      	ldrb	r6, [r2, r3]
 8005256:	e7c7      	b.n	80051e8 <_DrawBitmap+0x344>
 8005258:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800525a:	46d8      	mov	r8, fp
 800525c:	691b      	ldr	r3, [r3, #16]
 800525e:	689b      	ldr	r3, [r3, #8]
 8005260:	4798      	blx	r3
 8005262:	b283      	uxth	r3, r0
 8005264:	9309      	str	r3, [sp, #36]	@ 0x24
 8005266:	9b03      	ldr	r3, [sp, #12]
 8005268:	9308      	str	r3, [sp, #32]
 800526a:	42bd      	cmp	r5, r7
 800526c:	bf28      	it	cs
 800526e:	463d      	movcs	r5, r7
 8005270:	1b7f      	subs	r7, r7, r5
 8005272:	f1b9 0f00 	cmp.w	r9, #0
 8005276:	d01c      	beq.n	80052b2 <_DrawBitmap+0x40e>
 8005278:	46a2      	mov	sl, r4
 800527a:	eb08 0305 	add.w	r3, r8, r5
 800527e:	930d      	str	r3, [sp, #52]	@ 0x34
 8005280:	07f0      	lsls	r0, r6, #31
 8005282:	d50c      	bpl.n	800529e <_DrawBitmap+0x3fa>
 8005284:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8005288:	9a04      	ldr	r2, [sp, #16]
 800528a:	681b      	ldr	r3, [r3, #0]
 800528c:	4641      	mov	r1, r8
 800528e:	4648      	mov	r0, r9
 8005290:	4798      	blx	r3
 8005292:	f8ba 3000 	ldrh.w	r3, [sl]
 8005296:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005298:	4053      	eors	r3, r2
 800529a:	f8aa 3000 	strh.w	r3, [sl]
 800529e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80052a0:	f108 0801 	add.w	r8, r8, #1
 80052a4:	4598      	cmp	r8, r3
 80052a6:	f10a 0a02 	add.w	sl, sl, #2
 80052aa:	ea4f 0656 	mov.w	r6, r6, lsr #1
 80052ae:	d1e7      	bne.n	8005280 <_DrawBitmap+0x3dc>
 80052b0:	e00f      	b.n	80052d2 <_DrawBitmap+0x42e>
 80052b2:	462a      	mov	r2, r5
 80052b4:	4623      	mov	r3, r4
 80052b6:	07f1      	lsls	r1, r6, #31
 80052b8:	bf44      	itt	mi
 80052ba:	8819      	ldrhmi	r1, [r3, #0]
 80052bc:	9809      	ldrmi	r0, [sp, #36]	@ 0x24
 80052be:	f103 0302 	add.w	r3, r3, #2
 80052c2:	bf44      	itt	mi
 80052c4:	4041      	eormi	r1, r0
 80052c6:	f823 1c02 	strhmi.w	r1, [r3, #-2]
 80052ca:	3a01      	subs	r2, #1
 80052cc:	ea4f 0656 	mov.w	r6, r6, lsr #1
 80052d0:	d1f1      	bne.n	80052b6 <_DrawBitmap+0x412>
 80052d2:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 80052d6:	b147      	cbz	r7, 80052ea <_DrawBitmap+0x446>
 80052d8:	9b08      	ldr	r3, [sp, #32]
 80052da:	4a42      	ldr	r2, [pc, #264]	@ (80053e4 <_DrawBitmap+0x540>)
 80052dc:	781b      	ldrb	r3, [r3, #0]
 80052de:	2508      	movs	r5, #8
 80052e0:	5cd6      	ldrb	r6, [r2, r3]
 80052e2:	9b08      	ldr	r3, [sp, #32]
 80052e4:	3301      	adds	r3, #1
 80052e6:	9308      	str	r3, [sp, #32]
 80052e8:	e7bf      	b.n	800526a <_DrawBitmap+0x3c6>
 80052ea:	a80e      	add	r0, sp, #56	@ 0x38
 80052ec:	f7fc febe 	bl	800206c <GUI_ALLOC_UnlockH>
 80052f0:	e166      	b.n	80055c0 <_DrawBitmap+0x71c>
 80052f2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80052f4:	f1c3 0504 	rsb	r5, r3, #4
 80052f8:	9b03      	ldr	r3, [sp, #12]
 80052fa:	b2ed      	uxtb	r5, r5
 80052fc:	f813 6c01 	ldrb.w	r6, [r3, #-1]
 8005300:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005302:	409e      	lsls	r6, r3
 8005304:	4b36      	ldr	r3, [pc, #216]	@ (80053e0 <_DrawBitmap+0x53c>)
 8005306:	b2f6      	uxtb	r6, r6
 8005308:	681b      	ldr	r3, [r3, #0]
 800530a:	7c1b      	ldrb	r3, [r3, #16]
 800530c:	f003 0303 	and.w	r3, r3, #3
 8005310:	2b01      	cmp	r3, #1
 8005312:	d009      	beq.n	8005328 <_DrawBitmap+0x484>
 8005314:	d30a      	bcc.n	800532c <_DrawBitmap+0x488>
 8005316:	2b02      	cmp	r3, #2
 8005318:	f040 8152 	bne.w	80055c0 <_DrawBitmap+0x71c>
 800531c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800531e:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8005322:	9308      	str	r3, [sp, #32]
 8005324:	465f      	mov	r7, fp
 8005326:	e036      	b.n	8005396 <_DrawBitmap+0x4f2>
 8005328:	9b02      	ldr	r3, [sp, #8]
 800532a:	e079      	b.n	8005420 <_DrawBitmap+0x57c>
 800532c:	9b02      	ldr	r3, [sp, #8]
 800532e:	429d      	cmp	r5, r3
 8005330:	bfc8      	it	gt
 8005332:	b2dd      	uxtbgt	r5, r3
 8005334:	462a      	mov	r2, r5
 8005336:	4621      	mov	r1, r4
 8005338:	1b5b      	subs	r3, r3, r5
 800533a:	9f1f      	ldr	r7, [sp, #124]	@ 0x7c
 800533c:	09b0      	lsrs	r0, r6, #6
 800533e:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 8005342:	3a01      	subs	r2, #1
 8005344:	00b6      	lsls	r6, r6, #2
 8005346:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 800534a:	f821 0b02 	strh.w	r0, [r1], #2
 800534e:	b2f6      	uxtb	r6, r6
 8005350:	d1f3      	bne.n	800533a <_DrawBitmap+0x496>
 8005352:	3d01      	subs	r5, #1
 8005354:	b2ed      	uxtb	r5, r5
 8005356:	3501      	adds	r5, #1
 8005358:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800535c:	2b00      	cmp	r3, #0
 800535e:	f000 812f 	beq.w	80055c0 <_DrawBitmap+0x71c>
 8005362:	f81a 6f01 	ldrb.w	r6, [sl, #1]!
 8005366:	2504      	movs	r5, #4
 8005368:	e7e1      	b.n	800532e <_DrawBitmap+0x48a>
 800536a:	f016 0fc0 	tst.w	r6, #192	@ 0xc0
 800536e:	d124      	bne.n	80053ba <_DrawBitmap+0x516>
 8005370:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005372:	f109 0901 	add.w	r9, r9, #1
 8005376:	00b6      	lsls	r6, r6, #2
 8005378:	4599      	cmp	r9, r3
 800537a:	b2f6      	uxtb	r6, r6
 800537c:	d1f5      	bne.n	800536a <_DrawBitmap+0x4c6>
 800537e:	1c6b      	adds	r3, r5, #1
 8005380:	3701      	adds	r7, #1
 8005382:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8005386:	442f      	add	r7, r5
 8005388:	f1b8 0f00 	cmp.w	r8, #0
 800538c:	f000 8118 	beq.w	80055c0 <_DrawBitmap+0x71c>
 8005390:	f81a 6f01 	ldrb.w	r6, [sl, #1]!
 8005394:	2504      	movs	r5, #4
 8005396:	4545      	cmp	r5, r8
 8005398:	bfc8      	it	gt
 800539a:	fa5f f588 	uxtbgt.w	r5, r8
 800539e:	ebc5 0808 	rsb	r8, r5, r8
 80053a2:	3d01      	subs	r5, #1
 80053a4:	b2ed      	uxtb	r5, r5
 80053a6:	1c7b      	adds	r3, r7, #1
 80053a8:	442b      	add	r3, r5
 80053aa:	930d      	str	r3, [sp, #52]	@ 0x34
 80053ac:	f06f 0301 	mvn.w	r3, #1
 80053b0:	fb03 4307 	mla	r3, r3, r7, r4
 80053b4:	46b9      	mov	r9, r7
 80053b6:	9309      	str	r3, [sp, #36]	@ 0x24
 80053b8:	e7d7      	b.n	800536a <_DrawBitmap+0x4c6>
 80053ba:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 80053bc:	09b3      	lsrs	r3, r6, #6
 80053be:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80053c2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80053c4:	f822 3019 	strh.w	r3, [r2, r9, lsl #1]
 80053c8:	9b08      	ldr	r3, [sp, #32]
 80053ca:	2b00      	cmp	r3, #0
 80053cc:	d0d0      	beq.n	8005370 <_DrawBitmap+0x4cc>
 80053ce:	689b      	ldr	r3, [r3, #8]
 80053d0:	9a04      	ldr	r2, [sp, #16]
 80053d2:	681b      	ldr	r3, [r3, #0]
 80053d4:	4649      	mov	r1, r9
 80053d6:	9808      	ldr	r0, [sp, #32]
 80053d8:	4798      	blx	r3
 80053da:	e7c9      	b.n	8005370 <_DrawBitmap+0x4cc>
 80053dc:	0800be40 	.word	0x0800be40
 80053e0:	20000014 	.word	0x20000014
 80053e4:	0800bed0 	.word	0x0800bed0
 80053e8:	f016 0fc0 	tst.w	r6, #192	@ 0xc0
 80053ec:	bf18      	it	ne
 80053ee:	8808      	ldrhne	r0, [r1, #0]
 80053f0:	f102 32ff 	add.w	r2, r2, #4294967295
 80053f4:	bf1c      	itt	ne
 80053f6:	f080 00ff 	eorne.w	r0, r0, #255	@ 0xff
 80053fa:	8008      	strhne	r0, [r1, #0]
 80053fc:	00b6      	lsls	r6, r6, #2
 80053fe:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 8005402:	f101 0102 	add.w	r1, r1, #2
 8005406:	b2f6      	uxtb	r6, r6
 8005408:	d1ee      	bne.n	80053e8 <_DrawBitmap+0x544>
 800540a:	3d01      	subs	r5, #1
 800540c:	b2ed      	uxtb	r5, r5
 800540e:	3501      	adds	r5, #1
 8005410:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 8005414:	2b00      	cmp	r3, #0
 8005416:	f000 80d3 	beq.w	80055c0 <_DrawBitmap+0x71c>
 800541a:	f81a 6f01 	ldrb.w	r6, [sl, #1]!
 800541e:	2504      	movs	r5, #4
 8005420:	429d      	cmp	r5, r3
 8005422:	bfc8      	it	gt
 8005424:	b2dd      	uxtbgt	r5, r3
 8005426:	1b5b      	subs	r3, r3, r5
 8005428:	462a      	mov	r2, r5
 800542a:	4621      	mov	r1, r4
 800542c:	e7dc      	b.n	80053e8 <_DrawBitmap+0x544>
 800542e:	9b03      	ldr	r3, [sp, #12]
 8005430:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8005432:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8005436:	4093      	lsls	r3, r2
 8005438:	4a6b      	ldr	r2, [pc, #428]	@ (80055e8 <_DrawBitmap+0x744>)
 800543a:	b2dd      	uxtb	r5, r3
 800543c:	6812      	ldr	r2, [r2, #0]
 800543e:	7c12      	ldrb	r2, [r2, #16]
 8005440:	f002 0203 	and.w	r2, r2, #3
 8005444:	2a01      	cmp	r2, #1
 8005446:	d003      	beq.n	8005450 <_DrawBitmap+0x5ac>
 8005448:	d308      	bcc.n	800545c <_DrawBitmap+0x5b8>
 800544a:	2a02      	cmp	r2, #2
 800544c:	d03b      	beq.n	80054c6 <_DrawBitmap+0x622>
 800544e:	e0b7      	b.n	80055c0 <_DrawBitmap+0x71c>
 8005450:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8005452:	9a02      	ldr	r2, [sp, #8]
 8005454:	f1c3 0302 	rsb	r3, r3, #2
 8005458:	b2db      	uxtb	r3, r3
 800545a:	e0aa      	b.n	80055b2 <_DrawBitmap+0x70e>
 800545c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 800545e:	b15b      	cbz	r3, 8005478 <_DrawBitmap+0x5d4>
 8005460:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8005462:	092d      	lsrs	r5, r5, #4
 8005464:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8005468:	9a03      	ldr	r2, [sp, #12]
 800546a:	8023      	strh	r3, [r4, #0]
 800546c:	9b02      	ldr	r3, [sp, #8]
 800546e:	9c07      	ldr	r4, [sp, #28]
 8005470:	3b01      	subs	r3, #1
 8005472:	7815      	ldrb	r5, [r2, #0]
 8005474:	4692      	mov	sl, r2
 8005476:	e000      	b.n	800547a <_DrawBitmap+0x5d6>
 8005478:	9b02      	ldr	r3, [sp, #8]
 800547a:	2b01      	cmp	r3, #1
 800547c:	dd1a      	ble.n	80054b4 <_DrawBitmap+0x610>
 800547e:	1059      	asrs	r1, r3, #1
 8005480:	1d22      	adds	r2, r4, #4
 8005482:	f003 0301 	and.w	r3, r3, #1
 8005486:	eb0a 0001 	add.w	r0, sl, r1
 800548a:	9f1f      	ldr	r7, [sp, #124]	@ 0x7c
 800548c:	092e      	lsrs	r6, r5, #4
 800548e:	f005 050f 	and.w	r5, r5, #15
 8005492:	f857 6026 	ldr.w	r6, [r7, r6, lsl #2]
 8005496:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 800549a:	f822 6c04 	strh.w	r6, [r2, #-4]
 800549e:	f822 5c02 	strh.w	r5, [r2, #-2]
 80054a2:	f81a 5f01 	ldrb.w	r5, [sl, #1]!
 80054a6:	463e      	mov	r6, r7
 80054a8:	4582      	cmp	sl, r0
 80054aa:	f102 0204 	add.w	r2, r2, #4
 80054ae:	d1ec      	bne.n	800548a <_DrawBitmap+0x5e6>
 80054b0:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80054b4:	2b00      	cmp	r3, #0
 80054b6:	f000 8083 	beq.w	80055c0 <_DrawBitmap+0x71c>
 80054ba:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80054bc:	092d      	lsrs	r5, r5, #4
 80054be:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80054c2:	8023      	strh	r3, [r4, #0]
 80054c4:	e07c      	b.n	80055c0 <_DrawBitmap+0x71c>
 80054c6:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 80054c8:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 80054ca:	b1c2      	cbz	r2, 80054fe <_DrawBitmap+0x65a>
 80054cc:	f013 0ff0 	tst.w	r3, #240	@ 0xf0
 80054d0:	d00b      	beq.n	80054ea <_DrawBitmap+0x646>
 80054d2:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80054d4:	092d      	lsrs	r5, r5, #4
 80054d6:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80054da:	8023      	strh	r3, [r4, #0]
 80054dc:	b12e      	cbz	r6, 80054ea <_DrawBitmap+0x646>
 80054de:	68b3      	ldr	r3, [r6, #8]
 80054e0:	9a04      	ldr	r2, [sp, #16]
 80054e2:	681b      	ldr	r3, [r3, #0]
 80054e4:	4659      	mov	r1, fp
 80054e6:	4630      	mov	r0, r6
 80054e8:	4798      	blx	r3
 80054ea:	9b02      	ldr	r3, [sp, #8]
 80054ec:	9c07      	ldr	r4, [sp, #28]
 80054ee:	f103 38ff 	add.w	r8, r3, #4294967295
 80054f2:	9b03      	ldr	r3, [sp, #12]
 80054f4:	f10b 0701 	add.w	r7, fp, #1
 80054f8:	781d      	ldrb	r5, [r3, #0]
 80054fa:	469a      	mov	sl, r3
 80054fc:	e00f      	b.n	800551e <_DrawBitmap+0x67a>
 80054fe:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8005502:	465f      	mov	r7, fp
 8005504:	e00b      	b.n	800551e <_DrawBitmap+0x67a>
 8005506:	f015 0ff0 	tst.w	r5, #240	@ 0xf0
 800550a:	d10c      	bne.n	8005526 <_DrawBitmap+0x682>
 800550c:	f015 050f 	ands.w	r5, r5, #15
 8005510:	d117      	bne.n	8005542 <_DrawBitmap+0x69e>
 8005512:	f81a 5f01 	ldrb.w	r5, [sl, #1]!
 8005516:	3404      	adds	r4, #4
 8005518:	3702      	adds	r7, #2
 800551a:	f1a8 0802 	sub.w	r8, r8, #2
 800551e:	f1b8 0f01 	cmp.w	r8, #1
 8005522:	dcf0      	bgt.n	8005506 <_DrawBitmap+0x662>
 8005524:	e01a      	b.n	800555c <_DrawBitmap+0x6b8>
 8005526:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8005528:	092b      	lsrs	r3, r5, #4
 800552a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800552e:	8023      	strh	r3, [r4, #0]
 8005530:	2e00      	cmp	r6, #0
 8005532:	d0eb      	beq.n	800550c <_DrawBitmap+0x668>
 8005534:	68b3      	ldr	r3, [r6, #8]
 8005536:	9a04      	ldr	r2, [sp, #16]
 8005538:	681b      	ldr	r3, [r3, #0]
 800553a:	4639      	mov	r1, r7
 800553c:	4630      	mov	r0, r6
 800553e:	4798      	blx	r3
 8005540:	e7e4      	b.n	800550c <_DrawBitmap+0x668>
 8005542:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8005544:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8005548:	8063      	strh	r3, [r4, #2]
 800554a:	2e00      	cmp	r6, #0
 800554c:	d0e1      	beq.n	8005512 <_DrawBitmap+0x66e>
 800554e:	68b3      	ldr	r3, [r6, #8]
 8005550:	9a04      	ldr	r2, [sp, #16]
 8005552:	681b      	ldr	r3, [r3, #0]
 8005554:	1c79      	adds	r1, r7, #1
 8005556:	4630      	mov	r0, r6
 8005558:	4798      	blx	r3
 800555a:	e7da      	b.n	8005512 <_DrawBitmap+0x66e>
 800555c:	f1b8 0f00 	cmp.w	r8, #0
 8005560:	d02e      	beq.n	80055c0 <_DrawBitmap+0x71c>
 8005562:	092d      	lsrs	r5, r5, #4
 8005564:	d02c      	beq.n	80055c0 <_DrawBitmap+0x71c>
 8005566:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8005568:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800556c:	8023      	strh	r3, [r4, #0]
 800556e:	b33e      	cbz	r6, 80055c0 <_DrawBitmap+0x71c>
 8005570:	68b3      	ldr	r3, [r6, #8]
 8005572:	9a04      	ldr	r2, [sp, #16]
 8005574:	681b      	ldr	r3, [r3, #0]
 8005576:	4639      	mov	r1, r7
 8005578:	4630      	mov	r0, r6
 800557a:	4798      	blx	r3
 800557c:	e020      	b.n	80055c0 <_DrawBitmap+0x71c>
 800557e:	f015 0fc0 	tst.w	r5, #192	@ 0xc0
 8005582:	bf18      	it	ne
 8005584:	8806      	ldrhne	r6, [r0, #0]
 8005586:	f101 31ff 	add.w	r1, r1, #4294967295
 800558a:	bf1c      	itt	ne
 800558c:	f086 06ff 	eorne.w	r6, r6, #255	@ 0xff
 8005590:	8006      	strhne	r6, [r0, #0]
 8005592:	012d      	lsls	r5, r5, #4
 8005594:	f011 01ff 	ands.w	r1, r1, #255	@ 0xff
 8005598:	f100 0002 	add.w	r0, r0, #2
 800559c:	b2ed      	uxtb	r5, r5
 800559e:	d1ee      	bne.n	800557e <_DrawBitmap+0x6da>
 80055a0:	3b01      	subs	r3, #1
 80055a2:	b2db      	uxtb	r3, r3
 80055a4:	3301      	adds	r3, #1
 80055a6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80055aa:	b14a      	cbz	r2, 80055c0 <_DrawBitmap+0x71c>
 80055ac:	f81a 5f01 	ldrb.w	r5, [sl, #1]!
 80055b0:	2302      	movs	r3, #2
 80055b2:	4293      	cmp	r3, r2
 80055b4:	bfc8      	it	gt
 80055b6:	b2d3      	uxtbgt	r3, r2
 80055b8:	1ad2      	subs	r2, r2, r3
 80055ba:	4619      	mov	r1, r3
 80055bc:	4620      	mov	r0, r4
 80055be:	e7de      	b.n	800557e <_DrawBitmap+0x6da>
 80055c0:	9b04      	ldr	r3, [sp, #16]
 80055c2:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80055c4:	3301      	adds	r3, #1
 80055c6:	9304      	str	r3, [sp, #16]
 80055c8:	9b03      	ldr	r3, [sp, #12]
 80055ca:	4413      	add	r3, r2
 80055cc:	9303      	str	r3, [sp, #12]
 80055ce:	9a06      	ldr	r2, [sp, #24]
 80055d0:	9b07      	ldr	r3, [sp, #28]
 80055d2:	4413      	add	r3, r2
 80055d4:	9307      	str	r3, [sp, #28]
 80055d6:	e5b3      	b.n	8005140 <_DrawBitmap+0x29c>
 80055d8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80055da:	b113      	cbz	r3, 80055e2 <_DrawBitmap+0x73e>
 80055dc:	a80f      	add	r0, sp, #60	@ 0x3c
 80055de:	f7fc fd45 	bl	800206c <GUI_ALLOC_UnlockH>
 80055e2:	b011      	add	sp, #68	@ 0x44
 80055e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80055e8:	20000014 	.word	0x20000014

080055ec <_GetDevProp>:
 80055ec:	2908      	cmp	r1, #8
 80055ee:	d004      	beq.n	80055fa <_GetDevProp+0xe>
 80055f0:	6800      	ldr	r0, [r0, #0]
 80055f2:	b120      	cbz	r0, 80055fe <_GetDevProp+0x12>
 80055f4:	68c3      	ldr	r3, [r0, #12]
 80055f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80055f8:	4718      	bx	r3
 80055fa:	2010      	movs	r0, #16
 80055fc:	4770      	bx	lr
 80055fe:	f04f 30ff 	mov.w	r0, #4294967295
 8005602:	4770      	bx	lr

08005604 <GUI_USAGE_DecUseCnt>:
 8005604:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005606:	4605      	mov	r5, r0
 8005608:	f7fc fd22 	bl	8002050 <GUI_ALLOC_LockH>
 800560c:	8984      	ldrh	r4, [r0, #12]
 800560e:	ab02      	add	r3, sp, #8
 8005610:	3c01      	subs	r4, #1
 8005612:	b224      	sxth	r4, r4
 8005614:	f843 0d04 	str.w	r0, [r3, #-4]!
 8005618:	8184      	strh	r4, [r0, #12]
 800561a:	4618      	mov	r0, r3
 800561c:	f7fc fd26 	bl	800206c <GUI_ALLOC_UnlockH>
 8005620:	b914      	cbnz	r4, 8005628 <GUI_USAGE_DecUseCnt+0x24>
 8005622:	4628      	mov	r0, r5
 8005624:	f7fc fd4e 	bl	80020c4 <GUI_ALLOC_Free>
 8005628:	b003      	add	sp, #12
 800562a:	bd30      	pop	{r4, r5, pc}

0800562c <GUI_USAGE_AddRect>:
 800562c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005630:	4605      	mov	r5, r0
 8005632:	4688      	mov	r8, r1
 8005634:	4699      	mov	r9, r3
 8005636:	9c08      	ldr	r4, [sp, #32]
 8005638:	4414      	add	r4, r2
 800563a:	68ab      	ldr	r3, [r5, #8]
 800563c:	1c56      	adds	r6, r2, #1
 800563e:	685f      	ldr	r7, [r3, #4]
 8005640:	4641      	mov	r1, r8
 8005642:	464b      	mov	r3, r9
 8005644:	4628      	mov	r0, r5
 8005646:	47b8      	blx	r7
 8005648:	42b4      	cmp	r4, r6
 800564a:	4632      	mov	r2, r6
 800564c:	d1f5      	bne.n	800563a <GUI_USAGE_AddRect+0xe>
 800564e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08005652 <_Convert16>:
 8005652:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005656:	4681      	mov	r9, r0
 8005658:	460d      	mov	r5, r1
 800565a:	4616      	mov	r6, r2
 800565c:	461f      	mov	r7, r3
 800565e:	4614      	mov	r4, r2
 8005660:	4688      	mov	r8, r1
 8005662:	f8dd b028 	ldr.w	fp, [sp, #40]	@ 0x28
 8005666:	f8dd a02c 	ldr.w	sl, [sp, #44]	@ 0x2c
 800566a:	f839 0b02 	ldrh.w	r0, [r9], #2
 800566e:	47d8      	blx	fp
 8005670:	47d0      	blx	sl
 8005672:	3c01      	subs	r4, #1
 8005674:	f848 0b04 	str.w	r0, [r8], #4
 8005678:	d1f7      	bne.n	800566a <_Convert16+0x18>
 800567a:	2f1f      	cmp	r7, #31
 800567c:	d806      	bhi.n	800568c <_Convert16+0x3a>
 800567e:	463a      	mov	r2, r7
 8005680:	4631      	mov	r1, r6
 8005682:	4628      	mov	r0, r5
 8005684:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005688:	f003 be4b 	b.w	8009322 <GUI__CompactPixelIndices>
 800568c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005690 <_Convert8>:
 8005690:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005694:	4680      	mov	r8, r0
 8005696:	460d      	mov	r5, r1
 8005698:	4616      	mov	r6, r2
 800569a:	461f      	mov	r7, r3
 800569c:	4689      	mov	r9, r1
 800569e:	4604      	mov	r4, r0
 80056a0:	f8dd b028 	ldr.w	fp, [sp, #40]	@ 0x28
 80056a4:	f8dd a02c 	ldr.w	sl, [sp, #44]	@ 0x2c
 80056a8:	f814 0b01 	ldrb.w	r0, [r4], #1
 80056ac:	47d8      	blx	fp
 80056ae:	47d0      	blx	sl
 80056b0:	1b33      	subs	r3, r6, r4
 80056b2:	eb18 0f03 	cmn.w	r8, r3
 80056b6:	f849 0b04 	str.w	r0, [r9], #4
 80056ba:	d1f5      	bne.n	80056a8 <_Convert8+0x18>
 80056bc:	2f1f      	cmp	r7, #31
 80056be:	d806      	bhi.n	80056ce <_Convert8+0x3e>
 80056c0:	463a      	mov	r2, r7
 80056c2:	4631      	mov	r1, r6
 80056c4:	4628      	mov	r0, r5
 80056c6:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80056ca:	f003 be2a 	b.w	8009322 <GUI__CompactPixelIndices>
 80056ce:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080056d4 <GUI_MEMDEV__WriteToActiveOpaque>:
 80056d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80056d8:	b09b      	sub	sp, #108	@ 0x6c
 80056da:	9108      	str	r1, [sp, #32]
 80056dc:	9209      	str	r2, [sp, #36]	@ 0x24
 80056de:	4605      	mov	r5, r0
 80056e0:	2800      	cmp	r0, #0
 80056e2:	f000 8399 	beq.w	8005e18 <GUI_MEMDEV__WriteToActiveOpaque+0x744>
 80056e6:	f7fc fcb3 	bl	8002050 <GUI_ALLOC_LockH>
 80056ea:	ab1a      	add	r3, sp, #104	@ 0x68
 80056ec:	f843 0d1c 	str.w	r0, [r3, #-28]!
 80056f0:	6944      	ldr	r4, [r0, #20]
 80056f2:	4618      	mov	r0, r3
 80056f4:	f7fc fcba 	bl	800206c <GUI_ALLOC_UnlockH>
 80056f8:	4628      	mov	r0, r5
 80056fa:	f004 fac3 	bl	8009c84 <GUI_MEMDEV_GetBitsPerPixel>
 80056fe:	2808      	cmp	r0, #8
 8005700:	4607      	mov	r7, r0
 8005702:	4ea5      	ldr	r6, [pc, #660]	@ (8005998 <GUI_MEMDEV__WriteToActiveOpaque+0x2c4>)
 8005704:	dd02      	ble.n	800570c <GUI_MEMDEV__WriteToActiveOpaque+0x38>
 8005706:	2c00      	cmp	r4, #0
 8005708:	f000 81c9 	beq.w	8005a9e <GUI_MEMDEV__WriteToActiveOpaque+0x3ca>
 800570c:	2301      	movs	r3, #1
 800570e:	2700      	movs	r7, #0
 8005710:	4628      	mov	r0, r5
 8005712:	9319      	str	r3, [sp, #100]	@ 0x64
 8005714:	930d      	str	r3, [sp, #52]	@ 0x34
 8005716:	9718      	str	r7, [sp, #96]	@ 0x60
 8005718:	f7fc fc9a 	bl	8002050 <GUI_ALLOC_LockH>
 800571c:	6802      	ldr	r2, [r0, #0]
 800571e:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8005722:	6912      	ldr	r2, [r2, #16]
 8005724:	930e      	str	r3, [sp, #56]	@ 0x38
 8005726:	6853      	ldr	r3, [r2, #4]
 8005728:	6832      	ldr	r2, [r6, #0]
 800572a:	f10d 0968 	add.w	r9, sp, #104	@ 0x68
 800572e:	f849 0d14 	str.w	r0, [r9, #-20]!
 8005732:	6904      	ldr	r4, [r0, #16]
 8005734:	f8d0 8014 	ldr.w	r8, [r0, #20]
 8005738:	f8d0 a00c 	ldr.w	sl, [r0, #12]
 800573c:	f9b0 b008 	ldrsh.w	fp, [r0, #8]
 8005740:	7c50      	ldrb	r0, [r2, #17]
 8005742:	930c      	str	r3, [sp, #48]	@ 0x30
 8005744:	f7fe f8b8 	bl	80038b8 <GUI_GetBitsPerPixelEx>
 8005748:	6832      	ldr	r2, [r6, #0]
 800574a:	900b      	str	r0, [sp, #44]	@ 0x2c
 800574c:	7c50      	ldrb	r0, [r2, #17]
 800574e:	f7fe f8d1 	bl	80038f4 <GUI_GetpfIndex2ColorEx>
 8005752:	900a      	str	r0, [sp, #40]	@ 0x28
 8005754:	4648      	mov	r0, r9
 8005756:	f7fc fc89 	bl	800206c <GUI_ALLOC_UnlockH>
 800575a:	2c08      	cmp	r4, #8
 800575c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800575e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005760:	d904      	bls.n	800576c <GUI_MEMDEV__WriteToActiveOpaque+0x98>
 8005762:	2c10      	cmp	r4, #16
 8005764:	bf8c      	ite	hi
 8005766:	2304      	movhi	r3, #4
 8005768:	2302      	movls	r3, #2
 800576a:	e005      	b.n	8005778 <GUI_MEMDEV__WriteToActiveOpaque+0xa4>
 800576c:	2c01      	cmp	r4, #1
 800576e:	d103      	bne.n	8005778 <GUI_MEMDEV__WriteToActiveOpaque+0xa4>
 8005770:	ab18      	add	r3, sp, #96	@ 0x60
 8005772:	940d      	str	r4, [sp, #52]	@ 0x34
 8005774:	930a      	str	r3, [sp, #40]	@ 0x28
 8005776:	e001      	b.n	800577c <GUI_MEMDEV__WriteToActiveOpaque+0xa8>
 8005778:	930d      	str	r3, [sp, #52]	@ 0x34
 800577a:	970a      	str	r7, [sp, #40]	@ 0x28
 800577c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800577e:	4293      	cmp	r3, r2
 8005780:	f000 80df 	beq.w	8005942 <GUI_MEMDEV__WriteToActiveOpaque+0x26e>
 8005784:	6833      	ldr	r3, [r6, #0]
 8005786:	7c58      	ldrb	r0, [r3, #17]
 8005788:	f7fe f8bc 	bl	8003904 <GUI_GetpfColor2IndexEx>
 800578c:	900f      	str	r0, [sp, #60]	@ 0x3c
 800578e:	ea4f 008b 	mov.w	r0, fp, lsl #2
 8005792:	f7fc fe2b 	bl	80023ec <GUI_ALLOC_AllocNoInit>
 8005796:	9010      	str	r0, [sp, #64]	@ 0x40
 8005798:	2800      	cmp	r0, #0
 800579a:	f000 833d 	beq.w	8005e18 <GUI_MEMDEV__WriteToActiveOpaque+0x744>
 800579e:	4628      	mov	r0, r5
 80057a0:	f004 fc32 	bl	800a008 <GUI_MEMDEV_GetDataPtr>
 80057a4:	4605      	mov	r5, r0
 80057a6:	f1b8 0f00 	cmp.w	r8, #0
 80057aa:	f000 80b9 	beq.w	8005920 <GUI_MEMDEV__WriteToActiveOpaque+0x24c>
 80057ae:	4640      	mov	r0, r8
 80057b0:	f7fc fc4e 	bl	8002050 <GUI_ALLOC_LockH>
 80057b4:	eb05 030a 	add.w	r3, r5, sl
 80057b8:	9311      	str	r3, [sp, #68]	@ 0x44
 80057ba:	2300      	movs	r3, #0
 80057bc:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
 80057c0:	9016      	str	r0, [sp, #88]	@ 0x58
 80057c2:	9309      	str	r3, [sp, #36]	@ 0x24
 80057c4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80057c6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80057c8:	ebca 0703 	rsb	r7, sl, r3
 80057cc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80057ce:	4293      	cmp	r3, r2
 80057d0:	f340 80a2 	ble.w	8005918 <GUI_MEMDEV__WriteToActiveOpaque+0x244>
 80057d4:	9816      	ldr	r0, [sp, #88]	@ 0x58
 80057d6:	2300      	movs	r3, #0
 80057d8:	9317      	str	r3, [sp, #92]	@ 0x5c
 80057da:	6883      	ldr	r3, [r0, #8]
 80057dc:	f10d 085c 	add.w	r8, sp, #92	@ 0x5c
 80057e0:	695b      	ldr	r3, [r3, #20]
 80057e2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80057e4:	4641      	mov	r1, r8
 80057e6:	4798      	blx	r3
 80057e8:	4583      	cmp	fp, r0
 80057ea:	4605      	mov	r5, r0
 80057ec:	d128      	bne.n	8005840 <GUI_MEMDEV__WriteToActiveOpaque+0x16c>
 80057ee:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80057f0:	f7fc fc2e 	bl	8002050 <GUI_ALLOC_LockH>
 80057f4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80057f6:	2c08      	cmp	r4, #8
 80057f8:	9301      	str	r3, [sp, #4]
 80057fa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80057fc:	4601      	mov	r1, r0
 80057fe:	9014      	str	r0, [sp, #80]	@ 0x50
 8005800:	9300      	str	r3, [sp, #0]
 8005802:	465a      	mov	r2, fp
 8005804:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005806:	4638      	mov	r0, r7
 8005808:	d902      	bls.n	8005810 <GUI_MEMDEV__WriteToActiveOpaque+0x13c>
 800580a:	f7ff ff22 	bl	8005652 <_Convert16>
 800580e:	e001      	b.n	8005814 <GUI_MEMDEV__WriteToActiveOpaque+0x140>
 8005810:	f7ff ff3e 	bl	8005690 <_Convert8>
 8005814:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005816:	ad1a      	add	r5, sp, #104	@ 0x68
 8005818:	9305      	str	r3, [sp, #20]
 800581a:	f855 3d18 	ldr.w	r3, [r5, #-24]!
 800581e:	9808      	ldr	r0, [sp, #32]
 8005820:	9304      	str	r3, [sp, #16]
 8005822:	2300      	movs	r3, #0
 8005824:	9303      	str	r3, [sp, #12]
 8005826:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005828:	465a      	mov	r2, fp
 800582a:	9302      	str	r3, [sp, #8]
 800582c:	2301      	movs	r3, #1
 800582e:	9301      	str	r3, [sp, #4]
 8005830:	9300      	str	r3, [sp, #0]
 8005832:	4649      	mov	r1, r9
 8005834:	f7fd fd74 	bl	8003320 <LCD_DrawBitmap>
 8005838:	4628      	mov	r0, r5
 800583a:	f7fc fc17 	bl	800206c <GUI_ALLOC_UnlockH>
 800583e:	e062      	b.n	8005906 <GUI_MEMDEV__WriteToActiveOpaque+0x232>
 8005840:	2c01      	cmp	r4, #1
 8005842:	d002      	beq.n	800584a <GUI_MEMDEV__WriteToActiveOpaque+0x176>
 8005844:	f04f 0801 	mov.w	r8, #1
 8005848:	e057      	b.n	80058fa <GUI_MEMDEV__WriteToActiveOpaque+0x226>
 800584a:	2d00      	cmp	r5, #0
 800584c:	d05b      	beq.n	8005906 <GUI_MEMDEV__WriteToActiveOpaque+0x232>
 800584e:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8005850:	9e08      	ldr	r6, [sp, #32]
 8005852:	f000 0307 	and.w	r3, r0, #7
 8005856:	9306      	str	r3, [sp, #24]
 8005858:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800585a:	462a      	mov	r2, r5
 800585c:	9305      	str	r3, [sp, #20]
 800585e:	2308      	movs	r3, #8
 8005860:	fb90 f3f3 	sdiv	r3, r0, r3
 8005864:	443b      	add	r3, r7
 8005866:	9304      	str	r3, [sp, #16]
 8005868:	2301      	movs	r3, #1
 800586a:	9302      	str	r3, [sp, #8]
 800586c:	9301      	str	r3, [sp, #4]
 800586e:	9300      	str	r3, [sp, #0]
 8005870:	4649      	mov	r1, r9
 8005872:	4430      	add	r0, r6
 8005874:	f8cd a00c 	str.w	sl, [sp, #12]
 8005878:	f7fd fc66 	bl	8003148 <LCD__DrawBitmap_1bpp>
 800587c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800587e:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8005880:	441d      	add	r5, r3
 8005882:	6883      	ldr	r3, [r0, #8]
 8005884:	9517      	str	r5, [sp, #92]	@ 0x5c
 8005886:	695b      	ldr	r3, [r3, #20]
 8005888:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800588a:	4641      	mov	r1, r8
 800588c:	4798      	blx	r3
 800588e:	4605      	mov	r5, r0
 8005890:	e7db      	b.n	800584a <GUI_MEMDEV__WriteToActiveOpaque+0x176>
 8005892:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8005894:	f7fc fbdc 	bl	8002050 <GUI_ALLOC_LockH>
 8005898:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800589a:	4601      	mov	r1, r0
 800589c:	9014      	str	r0, [sp, #80]	@ 0x50
 800589e:	9301      	str	r3, [sp, #4]
 80058a0:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 80058a2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80058a4:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
 80058a6:	2c08      	cmp	r4, #8
 80058a8:	9300      	str	r3, [sp, #0]
 80058aa:	462a      	mov	r2, r5
 80058ac:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80058ae:	fb00 7006 	mla	r0, r0, r6, r7
 80058b2:	d925      	bls.n	8005900 <GUI_MEMDEV__WriteToActiveOpaque+0x22c>
 80058b4:	f7ff fecd 	bl	8005652 <_Convert16>
 80058b8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80058ba:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 80058bc:	9305      	str	r3, [sp, #20]
 80058be:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80058c0:	9e08      	ldr	r6, [sp, #32]
 80058c2:	9304      	str	r3, [sp, #16]
 80058c4:	2300      	movs	r3, #0
 80058c6:	9303      	str	r3, [sp, #12]
 80058c8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80058ca:	462a      	mov	r2, r5
 80058cc:	4649      	mov	r1, r9
 80058ce:	9302      	str	r3, [sp, #8]
 80058d0:	4430      	add	r0, r6
 80058d2:	2301      	movs	r3, #1
 80058d4:	f8cd 8004 	str.w	r8, [sp, #4]
 80058d8:	f8cd 8000 	str.w	r8, [sp]
 80058dc:	f7fd fd20 	bl	8003320 <LCD_DrawBitmap>
 80058e0:	a814      	add	r0, sp, #80	@ 0x50
 80058e2:	f7fc fbc3 	bl	800206c <GUI_ALLOC_UnlockH>
 80058e6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80058e8:	9816      	ldr	r0, [sp, #88]	@ 0x58
 80058ea:	441d      	add	r5, r3
 80058ec:	6883      	ldr	r3, [r0, #8]
 80058ee:	9517      	str	r5, [sp, #92]	@ 0x5c
 80058f0:	695b      	ldr	r3, [r3, #20]
 80058f2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80058f4:	a917      	add	r1, sp, #92	@ 0x5c
 80058f6:	4798      	blx	r3
 80058f8:	4605      	mov	r5, r0
 80058fa:	2d00      	cmp	r5, #0
 80058fc:	d1c9      	bne.n	8005892 <GUI_MEMDEV__WriteToActiveOpaque+0x1be>
 80058fe:	e002      	b.n	8005906 <GUI_MEMDEV__WriteToActiveOpaque+0x232>
 8005900:	f7ff fec6 	bl	8005690 <_Convert8>
 8005904:	e7d8      	b.n	80058b8 <GUI_MEMDEV__WriteToActiveOpaque+0x1e4>
 8005906:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005908:	f109 0901 	add.w	r9, r9, #1
 800590c:	3301      	adds	r3, #1
 800590e:	9309      	str	r3, [sp, #36]	@ 0x24
 8005910:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8005912:	4453      	add	r3, sl
 8005914:	9311      	str	r3, [sp, #68]	@ 0x44
 8005916:	e755      	b.n	80057c4 <GUI_MEMDEV__WriteToActiveOpaque+0xf0>
 8005918:	a816      	add	r0, sp, #88	@ 0x58
 800591a:	f7fc fba7 	bl	800206c <GUI_ALLOC_UnlockH>
 800591e:	e00e      	b.n	800593e <GUI_MEMDEV__WriteToActiveOpaque+0x26a>
 8005920:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005922:	9004      	str	r0, [sp, #16]
 8005924:	9305      	str	r3, [sp, #20]
 8005926:	2301      	movs	r3, #1
 8005928:	9301      	str	r3, [sp, #4]
 800592a:	9300      	str	r3, [sp, #0]
 800592c:	f8cd a00c 	str.w	sl, [sp, #12]
 8005930:	9402      	str	r4, [sp, #8]
 8005932:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005934:	465a      	mov	r2, fp
 8005936:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8005938:	9808      	ldr	r0, [sp, #32]
 800593a:	f7fd fcf1 	bl	8003320 <LCD_DrawBitmap>
 800593e:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8005940:	e268      	b.n	8005e14 <GUI_MEMDEV__WriteToActiveOpaque+0x740>
 8005942:	4628      	mov	r0, r5
 8005944:	f004 fb60 	bl	800a008 <GUI_MEMDEV_GetDataPtr>
 8005948:	4607      	mov	r7, r0
 800594a:	f1b8 0f00 	cmp.w	r8, #0
 800594e:	f000 809a 	beq.w	8005a86 <GUI_MEMDEV__WriteToActiveOpaque+0x3b2>
 8005952:	4640      	mov	r0, r8
 8005954:	f7fc fb7c 	bl	8002050 <GUI_ALLOC_LockH>
 8005958:	2500      	movs	r5, #0
 800595a:	9016      	str	r0, [sp, #88]	@ 0x58
 800595c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800595e:	42ab      	cmp	r3, r5
 8005960:	f340 808d 	ble.w	8005a7e <GUI_MEMDEV__WriteToActiveOpaque+0x3aa>
 8005964:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8005966:	2300      	movs	r3, #0
 8005968:	9317      	str	r3, [sp, #92]	@ 0x5c
 800596a:	6883      	ldr	r3, [r0, #8]
 800596c:	f10d 085c 	add.w	r8, sp, #92	@ 0x5c
 8005970:	695b      	ldr	r3, [r3, #20]
 8005972:	462a      	mov	r2, r5
 8005974:	4641      	mov	r1, r8
 8005976:	4798      	blx	r3
 8005978:	4583      	cmp	fp, r0
 800597a:	4606      	mov	r6, r0
 800597c:	d126      	bne.n	80059cc <GUI_MEMDEV__WriteToActiveOpaque+0x2f8>
 800597e:	462e      	mov	r6, r5
 8005980:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8005982:	f106 0901 	add.w	r9, r6, #1
 8005986:	6883      	ldr	r3, [r0, #8]
 8005988:	464a      	mov	r2, r9
 800598a:	695b      	ldr	r3, [r3, #20]
 800598c:	4641      	mov	r1, r8
 800598e:	4798      	blx	r3
 8005990:	4583      	cmp	fp, r0
 8005992:	d103      	bne.n	800599c <GUI_MEMDEV__WriteToActiveOpaque+0x2c8>
 8005994:	464e      	mov	r6, r9
 8005996:	e7f3      	b.n	8005980 <GUI_MEMDEV__WriteToActiveOpaque+0x2ac>
 8005998:	20000014 	.word	0x20000014
 800599c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800599e:	ebc5 0806 	rsb	r8, r5, r6
 80059a2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80059a4:	f108 0801 	add.w	r8, r8, #1
 80059a8:	9305      	str	r3, [sp, #20]
 80059aa:	2301      	movs	r3, #1
 80059ac:	9704      	str	r7, [sp, #16]
 80059ae:	9301      	str	r3, [sp, #4]
 80059b0:	9300      	str	r3, [sp, #0]
 80059b2:	4429      	add	r1, r5
 80059b4:	f8cd a00c 	str.w	sl, [sp, #12]
 80059b8:	9402      	str	r4, [sp, #8]
 80059ba:	4643      	mov	r3, r8
 80059bc:	465a      	mov	r2, fp
 80059be:	9808      	ldr	r0, [sp, #32]
 80059c0:	f7fd fcae 	bl	8003320 <LCD_DrawBitmap>
 80059c4:	fb0a 7708 	mla	r7, sl, r8, r7
 80059c8:	4635      	mov	r5, r6
 80059ca:	e056      	b.n	8005a7a <GUI_MEMDEV__WriteToActiveOpaque+0x3a6>
 80059cc:	2c01      	cmp	r4, #1
 80059ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80059d0:	d004      	beq.n	80059dc <GUI_MEMDEV__WriteToActiveOpaque+0x308>
 80059d2:	442b      	add	r3, r5
 80059d4:	930b      	str	r3, [sp, #44]	@ 0x2c
 80059d6:	f04f 0901 	mov.w	r9, #1
 80059da:	e02b      	b.n	8005a34 <GUI_MEMDEV__WriteToActiveOpaque+0x360>
 80059dc:	46a0      	mov	r8, r4
 80059de:	eb03 0905 	add.w	r9, r3, r5
 80059e2:	b32e      	cbz	r6, 8005a30 <GUI_MEMDEV__WriteToActiveOpaque+0x35c>
 80059e4:	f8dd e05c 	ldr.w	lr, [sp, #92]	@ 0x5c
 80059e8:	9808      	ldr	r0, [sp, #32]
 80059ea:	f00e 0307 	and.w	r3, lr, #7
 80059ee:	9306      	str	r3, [sp, #24]
 80059f0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80059f2:	4632      	mov	r2, r6
 80059f4:	9305      	str	r3, [sp, #20]
 80059f6:	2308      	movs	r3, #8
 80059f8:	fb9e f3f3 	sdiv	r3, lr, r3
 80059fc:	443b      	add	r3, r7
 80059fe:	4470      	add	r0, lr
 8005a00:	9304      	str	r3, [sp, #16]
 8005a02:	4649      	mov	r1, r9
 8005a04:	2301      	movs	r3, #1
 8005a06:	f8cd a00c 	str.w	sl, [sp, #12]
 8005a0a:	f8cd 8008 	str.w	r8, [sp, #8]
 8005a0e:	f8cd 8004 	str.w	r8, [sp, #4]
 8005a12:	f8cd 8000 	str.w	r8, [sp]
 8005a16:	f7fd fb97 	bl	8003148 <LCD__DrawBitmap_1bpp>
 8005a1a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8005a1c:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8005a1e:	441e      	add	r6, r3
 8005a20:	6883      	ldr	r3, [r0, #8]
 8005a22:	9617      	str	r6, [sp, #92]	@ 0x5c
 8005a24:	695b      	ldr	r3, [r3, #20]
 8005a26:	462a      	mov	r2, r5
 8005a28:	a917      	add	r1, sp, #92	@ 0x5c
 8005a2a:	4798      	blx	r3
 8005a2c:	4606      	mov	r6, r0
 8005a2e:	e7d8      	b.n	80059e2 <GUI_MEMDEV__WriteToActiveOpaque+0x30e>
 8005a30:	4457      	add	r7, sl
 8005a32:	e022      	b.n	8005a7a <GUI_MEMDEV__WriteToActiveOpaque+0x3a6>
 8005a34:	2e00      	cmp	r6, #0
 8005a36:	d0fb      	beq.n	8005a30 <GUI_MEMDEV__WriteToActiveOpaque+0x35c>
 8005a38:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005a3a:	f8dd e05c 	ldr.w	lr, [sp, #92]	@ 0x5c
 8005a3e:	9305      	str	r3, [sp, #20]
 8005a40:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8005a42:	9808      	ldr	r0, [sp, #32]
 8005a44:	fb03 730e 	mla	r3, r3, lr, r7
 8005a48:	4632      	mov	r2, r6
 8005a4a:	4470      	add	r0, lr
 8005a4c:	9304      	str	r3, [sp, #16]
 8005a4e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8005a50:	2301      	movs	r3, #1
 8005a52:	f8cd a00c 	str.w	sl, [sp, #12]
 8005a56:	9402      	str	r4, [sp, #8]
 8005a58:	f8cd 9004 	str.w	r9, [sp, #4]
 8005a5c:	f8cd 9000 	str.w	r9, [sp]
 8005a60:	f7fd fc5e 	bl	8003320 <LCD_DrawBitmap>
 8005a64:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8005a66:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8005a68:	441e      	add	r6, r3
 8005a6a:	6883      	ldr	r3, [r0, #8]
 8005a6c:	9617      	str	r6, [sp, #92]	@ 0x5c
 8005a6e:	695b      	ldr	r3, [r3, #20]
 8005a70:	462a      	mov	r2, r5
 8005a72:	4641      	mov	r1, r8
 8005a74:	4798      	blx	r3
 8005a76:	4606      	mov	r6, r0
 8005a78:	e7dc      	b.n	8005a34 <GUI_MEMDEV__WriteToActiveOpaque+0x360>
 8005a7a:	3501      	adds	r5, #1
 8005a7c:	e76e      	b.n	800595c <GUI_MEMDEV__WriteToActiveOpaque+0x288>
 8005a7e:	a816      	add	r0, sp, #88	@ 0x58
 8005a80:	f7fc faf4 	bl	800206c <GUI_ALLOC_UnlockH>
 8005a84:	e1c8      	b.n	8005e18 <GUI_MEMDEV__WriteToActiveOpaque+0x744>
 8005a86:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005a88:	9004      	str	r0, [sp, #16]
 8005a8a:	9305      	str	r3, [sp, #20]
 8005a8c:	2301      	movs	r3, #1
 8005a8e:	9301      	str	r3, [sp, #4]
 8005a90:	9300      	str	r3, [sp, #0]
 8005a92:	f8cd a00c 	str.w	sl, [sp, #12]
 8005a96:	9402      	str	r4, [sp, #8]
 8005a98:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005a9a:	465a      	mov	r2, fp
 8005a9c:	e03a      	b.n	8005b14 <GUI_MEMDEV__WriteToActiveOpaque+0x440>
 8005a9e:	4628      	mov	r0, r5
 8005aa0:	f7fc fad6 	bl	8002050 <GUI_ALLOC_LockH>
 8005aa4:	4683      	mov	fp, r0
 8005aa6:	a81a      	add	r0, sp, #104	@ 0x68
 8005aa8:	f9bb 300a 	ldrsh.w	r3, [fp, #10]
 8005aac:	f840 bd10 	str.w	fp, [r0, #-16]!
 8005ab0:	f8db 2000 	ldr.w	r2, [fp]
 8005ab4:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005ab6:	f8db 300c 	ldr.w	r3, [fp, #12]
 8005aba:	f8d2 8010 	ldr.w	r8, [r2, #16]
 8005abe:	930c      	str	r3, [sp, #48]	@ 0x30
 8005ac0:	f9bb 4008 	ldrsh.w	r4, [fp, #8]
 8005ac4:	f7fc fad2 	bl	800206c <GUI_ALLOC_UnlockH>
 8005ac8:	6832      	ldr	r2, [r6, #0]
 8005aca:	f8d8 9004 	ldr.w	r9, [r8, #4]
 8005ace:	7c50      	ldrb	r0, [r2, #17]
 8005ad0:	4aa1      	ldr	r2, [pc, #644]	@ (8005d58 <GUI_MEMDEV__WriteToActiveOpaque+0x684>)
 8005ad2:	f852 2020 	ldr.w	r2, [r2, r0, lsl #2]
 8005ad6:	6916      	ldr	r6, [r2, #16]
 8005ad8:	6833      	ldr	r3, [r6, #0]
 8005ada:	930a      	str	r3, [sp, #40]	@ 0x28
 8005adc:	f7fd feec 	bl	80038b8 <GUI_GetBitsPerPixelEx>
 8005ae0:	2808      	cmp	r0, #8
 8005ae2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005ae4:	d906      	bls.n	8005af4 <GUI_MEMDEV__WriteToActiveOpaque+0x420>
 8005ae6:	2810      	cmp	r0, #16
 8005ae8:	bf8c      	ite	hi
 8005aea:	f04f 0a04 	movhi.w	sl, #4
 8005aee:	f04f 0a02 	movls.w	sl, #2
 8005af2:	e001      	b.n	8005af8 <GUI_MEMDEV__WriteToActiveOpaque+0x424>
 8005af4:	f04f 0a01 	mov.w	sl, #1
 8005af8:	45b0      	cmp	r8, r6
 8005afa:	d110      	bne.n	8005b1e <GUI_MEMDEV__WriteToActiveOpaque+0x44a>
 8005afc:	2200      	movs	r2, #0
 8005afe:	9205      	str	r2, [sp, #20]
 8005b00:	4622      	mov	r2, r4
 8005b02:	9303      	str	r3, [sp, #12]
 8005b04:	2301      	movs	r3, #1
 8005b06:	f10b 0018 	add.w	r0, fp, #24
 8005b0a:	9301      	str	r3, [sp, #4]
 8005b0c:	9300      	str	r3, [sp, #0]
 8005b0e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005b10:	9004      	str	r0, [sp, #16]
 8005b12:	9702      	str	r7, [sp, #8]
 8005b14:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8005b16:	9808      	ldr	r0, [sp, #32]
 8005b18:	f7fd fc02 	bl	8003320 <LCD_DrawBitmap>
 8005b1c:	e17c      	b.n	8005e18 <GUI_MEMDEV__WriteToActiveOpaque+0x744>
 8005b1e:	2f20      	cmp	r7, #32
 8005b20:	f040 80a2 	bne.w	8005c68 <GUI_MEMDEV__WriteToActiveOpaque+0x594>
 8005b24:	fb0a f004 	mul.w	r0, sl, r4
 8005b28:	f7fc fc60 	bl	80023ec <GUI_ALLOC_AllocNoInit>
 8005b2c:	900d      	str	r0, [sp, #52]	@ 0x34
 8005b2e:	2800      	cmp	r0, #0
 8005b30:	f000 8172 	beq.w	8005e18 <GUI_MEMDEV__WriteToActiveOpaque+0x744>
 8005b34:	f7fc fa8c 	bl	8002050 <GUI_ALLOC_LockH>
 8005b38:	9018      	str	r0, [sp, #96]	@ 0x60
 8005b3a:	4628      	mov	r0, r5
 8005b3c:	f7fc fa88 	bl	8002050 <GUI_ALLOC_LockH>
 8005b40:	9016      	str	r0, [sp, #88]	@ 0x58
 8005b42:	6933      	ldr	r3, [r6, #16]
 8005b44:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8005b48:	f100 0518 	add.w	r5, r0, #24
 8005b4c:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8005b50:	920c      	str	r2, [sp, #48]	@ 0x30
 8005b52:	b373      	cbz	r3, 8005bb2 <GUI_MEMDEV__WriteToActiveOpaque+0x4de>
 8005b54:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
 8005b58:	f04f 0901 	mov.w	r9, #1
 8005b5c:	f1ba 0f02 	cmp.w	sl, #2
 8005b60:	d005      	beq.n	8005b6e <GUI_MEMDEV__WriteToActiveOpaque+0x49a>
 8005b62:	f1ba 0f04 	cmp.w	sl, #4
 8005b66:	d002      	beq.n	8005b6e <GUI_MEMDEV__WriteToActiveOpaque+0x49a>
 8005b68:	f1ba 0f01 	cmp.w	sl, #1
 8005b6c:	d106      	bne.n	8005b7c <GUI_MEMDEV__WriteToActiveOpaque+0x4a8>
 8005b6e:	4628      	mov	r0, r5
 8005b70:	6937      	ldr	r7, [r6, #16]
 8005b72:	4653      	mov	r3, sl
 8005b74:	4622      	mov	r2, r4
 8005b76:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8005b78:	47b8      	blx	r7
 8005b7a:	445d      	add	r5, fp
 8005b7c:	2300      	movs	r3, #0
 8005b7e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8005b80:	9305      	str	r3, [sp, #20]
 8005b82:	9303      	str	r3, [sp, #12]
 8005b84:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005b86:	9204      	str	r2, [sp, #16]
 8005b88:	9302      	str	r3, [sp, #8]
 8005b8a:	4622      	mov	r2, r4
 8005b8c:	2301      	movs	r3, #1
 8005b8e:	f8cd 9004 	str.w	r9, [sp, #4]
 8005b92:	f8cd 9000 	str.w	r9, [sp]
 8005b96:	4641      	mov	r1, r8
 8005b98:	9808      	ldr	r0, [sp, #32]
 8005b9a:	f7fd fbc1 	bl	8003320 <LCD_DrawBitmap>
 8005b9e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005ba0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005ba2:	f108 0701 	add.w	r7, r8, #1
 8005ba6:	4413      	add	r3, r2
 8005ba8:	429f      	cmp	r7, r3
 8005baa:	f000 812c 	beq.w	8005e06 <GUI_MEMDEV__WriteToActiveOpaque+0x732>
 8005bae:	46b8      	mov	r8, r7
 8005bb0:	e7d4      	b.n	8005b5c <GUI_MEMDEV__WriteToActiveOpaque+0x488>
 8005bb2:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8005bb4:	461e      	mov	r6, r3
 8005bb6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005bb8:	f04f 0901 	mov.w	r9, #1
 8005bbc:	443b      	add	r3, r7
 8005bbe:	9309      	str	r3, [sp, #36]	@ 0x24
 8005bc0:	f1ba 0f02 	cmp.w	sl, #2
 8005bc4:	f8dd 8060 	ldr.w	r8, [sp, #96]	@ 0x60
 8005bc8:	d016      	beq.n	8005bf8 <GUI_MEMDEV__WriteToActiveOpaque+0x524>
 8005bca:	f1ba 0f04 	cmp.w	sl, #4
 8005bce:	d024      	beq.n	8005c1a <GUI_MEMDEV__WriteToActiveOpaque+0x546>
 8005bd0:	f1ba 0f01 	cmp.w	sl, #1
 8005bd4:	d130      	bne.n	8005c38 <GUI_MEMDEV__WriteToActiveOpaque+0x564>
 8005bd6:	4643      	mov	r3, r8
 8005bd8:	462a      	mov	r2, r5
 8005bda:	f852 0b04 	ldr.w	r0, [r2], #4
 8005bde:	930e      	str	r3, [sp, #56]	@ 0x38
 8005be0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005be2:	920b      	str	r2, [sp, #44]	@ 0x2c
 8005be4:	4798      	blx	r3
 8005be6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005be8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8005bea:	f803 0b01 	strb.w	r0, [r3], #1
 8005bee:	1ae1      	subs	r1, r4, r3
 8005bf0:	eb18 0f01 	cmn.w	r8, r1
 8005bf4:	d1f1      	bne.n	8005bda <GUI_MEMDEV__WriteToActiveOpaque+0x506>
 8005bf6:	e01e      	b.n	8005c36 <GUI_MEMDEV__WriteToActiveOpaque+0x562>
 8005bf8:	4643      	mov	r3, r8
 8005bfa:	462a      	mov	r2, r5
 8005bfc:	46a0      	mov	r8, r4
 8005bfe:	f852 0b04 	ldr.w	r0, [r2], #4
 8005c02:	930e      	str	r3, [sp, #56]	@ 0x38
 8005c04:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005c06:	920b      	str	r2, [sp, #44]	@ 0x2c
 8005c08:	4798      	blx	r3
 8005c0a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005c0c:	f1b8 0801 	subs.w	r8, r8, #1
 8005c10:	f823 0b02 	strh.w	r0, [r3], #2
 8005c14:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8005c16:	d1f2      	bne.n	8005bfe <GUI_MEMDEV__WriteToActiveOpaque+0x52a>
 8005c18:	e00d      	b.n	8005c36 <GUI_MEMDEV__WriteToActiveOpaque+0x562>
 8005c1a:	462a      	mov	r2, r5
 8005c1c:	4623      	mov	r3, r4
 8005c1e:	f852 0b04 	ldr.w	r0, [r2], #4
 8005c22:	930e      	str	r3, [sp, #56]	@ 0x38
 8005c24:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005c26:	920b      	str	r2, [sp, #44]	@ 0x2c
 8005c28:	4798      	blx	r3
 8005c2a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005c2c:	f848 0b04 	str.w	r0, [r8], #4
 8005c30:	3b01      	subs	r3, #1
 8005c32:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8005c34:	d1f3      	bne.n	8005c1e <GUI_MEMDEV__WriteToActiveOpaque+0x54a>
 8005c36:	445d      	add	r5, fp
 8005c38:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8005c3a:	9605      	str	r6, [sp, #20]
 8005c3c:	9304      	str	r3, [sp, #16]
 8005c3e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005c40:	9603      	str	r6, [sp, #12]
 8005c42:	9302      	str	r3, [sp, #8]
 8005c44:	f8cd 9004 	str.w	r9, [sp, #4]
 8005c48:	2301      	movs	r3, #1
 8005c4a:	f8cd 9000 	str.w	r9, [sp]
 8005c4e:	4622      	mov	r2, r4
 8005c50:	4639      	mov	r1, r7
 8005c52:	9808      	ldr	r0, [sp, #32]
 8005c54:	f7fd fb64 	bl	8003320 <LCD_DrawBitmap>
 8005c58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005c5a:	f107 0801 	add.w	r8, r7, #1
 8005c5e:	4543      	cmp	r3, r8
 8005c60:	f000 80d1 	beq.w	8005e06 <GUI_MEMDEV__WriteToActiveOpaque+0x732>
 8005c64:	4647      	mov	r7, r8
 8005c66:	e7ab      	b.n	8005bc0 <GUI_MEMDEV__WriteToActiveOpaque+0x4ec>
 8005c68:	2f10      	cmp	r7, #16
 8005c6a:	f040 80d5 	bne.w	8005e18 <GUI_MEMDEV__WriteToActiveOpaque+0x744>
 8005c6e:	fb04 f00a 	mul.w	r0, r4, sl
 8005c72:	f7fc fbbb 	bl	80023ec <GUI_ALLOC_AllocNoInit>
 8005c76:	900d      	str	r0, [sp, #52]	@ 0x34
 8005c78:	2800      	cmp	r0, #0
 8005c7a:	f000 80cd 	beq.w	8005e18 <GUI_MEMDEV__WriteToActiveOpaque+0x744>
 8005c7e:	f7fc f9e7 	bl	8002050 <GUI_ALLOC_LockH>
 8005c82:	9018      	str	r0, [sp, #96]	@ 0x60
 8005c84:	4628      	mov	r0, r5
 8005c86:	f7fc f9e3 	bl	8002050 <GUI_ALLOC_LockH>
 8005c8a:	9016      	str	r0, [sp, #88]	@ 0x58
 8005c8c:	6933      	ldr	r3, [r6, #16]
 8005c8e:	f100 0718 	add.w	r7, r0, #24
 8005c92:	b113      	cbz	r3, 8005c9a <GUI_MEMDEV__WriteToActiveOpaque+0x5c6>
 8005c94:	f8d8 3014 	ldr.w	r3, [r8, #20]
 8005c98:	b953      	cbnz	r3, 8005cb0 <GUI_MEMDEV__WriteToActiveOpaque+0x5dc>
 8005c9a:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8005c9e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8005ca0:	930c      	str	r3, [sp, #48]	@ 0x30
 8005ca2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005ca4:	0066      	lsls	r6, r4, #1
 8005ca6:	442b      	add	r3, r5
 8005ca8:	f04f 0b00 	mov.w	fp, #0
 8005cac:	9309      	str	r3, [sp, #36]	@ 0x24
 8005cae:	e083      	b.n	8005db8 <GUI_MEMDEV__WriteToActiveOpaque+0x6e4>
 8005cb0:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8005cb4:	0080      	lsls	r0, r0, #2
 8005cb6:	f7fc fb99 	bl	80023ec <GUI_ALLOC_AllocNoInit>
 8005cba:	900c      	str	r0, [sp, #48]	@ 0x30
 8005cbc:	b118      	cbz	r0, 8005cc6 <GUI_MEMDEV__WriteToActiveOpaque+0x5f2>
 8005cbe:	f7fc f9c7 	bl	8002050 <GUI_ALLOC_LockH>
 8005cc2:	9017      	str	r0, [sp, #92]	@ 0x5c
 8005cc4:	e001      	b.n	8005cca <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 8005cc6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005cc8:	9317      	str	r3, [sp, #92]	@ 0x5c
 8005cca:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8005ccc:	2b00      	cmp	r3, #0
 8005cce:	f000 809a 	beq.w	8005e06 <GUI_MEMDEV__WriteToActiveOpaque+0x732>
 8005cd2:	0063      	lsls	r3, r4, #1
 8005cd4:	930a      	str	r3, [sp, #40]	@ 0x28
 8005cd6:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8005cda:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8005cde:	930e      	str	r3, [sp, #56]	@ 0x38
 8005ce0:	f1ba 0f02 	cmp.w	sl, #2
 8005ce4:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8005ce8:	d006      	beq.n	8005cf8 <GUI_MEMDEV__WriteToActiveOpaque+0x624>
 8005cea:	f1ba 0f04 	cmp.w	sl, #4
 8005cee:	d005      	beq.n	8005cfc <GUI_MEMDEV__WriteToActiveOpaque+0x628>
 8005cf0:	f1ba 0f01 	cmp.w	sl, #1
 8005cf4:	d111      	bne.n	8005d1a <GUI_MEMDEV__WriteToActiveOpaque+0x646>
 8005cf6:	e001      	b.n	8005cfc <GUI_MEMDEV__WriteToActiveOpaque+0x628>
 8005cf8:	4653      	mov	r3, sl
 8005cfa:	e000      	b.n	8005cfe <GUI_MEMDEV__WriteToActiveOpaque+0x62a>
 8005cfc:	2302      	movs	r3, #2
 8005cfe:	4638      	mov	r0, r7
 8005d00:	4622      	mov	r2, r4
 8005d02:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8005d04:	f8d8 5014 	ldr.w	r5, [r8, #20]
 8005d08:	47a8      	blx	r5
 8005d0a:	4653      	mov	r3, sl
 8005d0c:	4622      	mov	r2, r4
 8005d0e:	4649      	mov	r1, r9
 8005d10:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8005d12:	6935      	ldr	r5, [r6, #16]
 8005d14:	47a8      	blx	r5
 8005d16:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005d18:	441f      	add	r7, r3
 8005d1a:	2300      	movs	r3, #0
 8005d1c:	9305      	str	r3, [sp, #20]
 8005d1e:	9303      	str	r3, [sp, #12]
 8005d20:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005d22:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8005d24:	9302      	str	r3, [sp, #8]
 8005d26:	2301      	movs	r3, #1
 8005d28:	9204      	str	r2, [sp, #16]
 8005d2a:	9301      	str	r3, [sp, #4]
 8005d2c:	9300      	str	r3, [sp, #0]
 8005d2e:	4622      	mov	r2, r4
 8005d30:	4659      	mov	r1, fp
 8005d32:	9808      	ldr	r0, [sp, #32]
 8005d34:	f7fd faf4 	bl	8003320 <LCD_DrawBitmap>
 8005d38:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005d3a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005d3c:	f10b 0901 	add.w	r9, fp, #1
 8005d40:	4413      	add	r3, r2
 8005d42:	4599      	cmp	r9, r3
 8005d44:	d001      	beq.n	8005d4a <GUI_MEMDEV__WriteToActiveOpaque+0x676>
 8005d46:	46cb      	mov	fp, r9
 8005d48:	e7ca      	b.n	8005ce0 <GUI_MEMDEV__WriteToActiveOpaque+0x60c>
 8005d4a:	a817      	add	r0, sp, #92	@ 0x5c
 8005d4c:	f7fc f98e 	bl	800206c <GUI_ALLOC_UnlockH>
 8005d50:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8005d52:	f7fc f9b7 	bl	80020c4 <GUI_ALLOC_Free>
 8005d56:	e056      	b.n	8005e06 <GUI_MEMDEV__WriteToActiveOpaque+0x732>
 8005d58:	20002c38 	.word	0x20002c38
 8005d5c:	f1ba 0f04 	cmp.w	sl, #4
 8005d60:	d041      	beq.n	8005de6 <GUI_MEMDEV__WriteToActiveOpaque+0x712>
 8005d62:	f1ba 0f01 	cmp.w	sl, #1
 8005d66:	d111      	bne.n	8005d8c <GUI_MEMDEV__WriteToActiveOpaque+0x6b8>
 8005d68:	4643      	mov	r3, r8
 8005d6a:	463a      	mov	r2, r7
 8005d6c:	f832 0b02 	ldrh.w	r0, [r2], #2
 8005d70:	930e      	str	r3, [sp, #56]	@ 0x38
 8005d72:	920b      	str	r2, [sp, #44]	@ 0x2c
 8005d74:	47c8      	blx	r9
 8005d76:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005d78:	4798      	blx	r3
 8005d7a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005d7c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8005d7e:	f803 0b01 	strb.w	r0, [r3], #1
 8005d82:	1ae1      	subs	r1, r4, r3
 8005d84:	eb18 0f01 	cmn.w	r8, r1
 8005d88:	d1f0      	bne.n	8005d6c <GUI_MEMDEV__WriteToActiveOpaque+0x698>
 8005d8a:	4437      	add	r7, r6
 8005d8c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8005d8e:	f8cd b014 	str.w	fp, [sp, #20]
 8005d92:	9304      	str	r3, [sp, #16]
 8005d94:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005d96:	f8cd b00c 	str.w	fp, [sp, #12]
 8005d9a:	9302      	str	r3, [sp, #8]
 8005d9c:	2301      	movs	r3, #1
 8005d9e:	9301      	str	r3, [sp, #4]
 8005da0:	9300      	str	r3, [sp, #0]
 8005da2:	4622      	mov	r2, r4
 8005da4:	4629      	mov	r1, r5
 8005da6:	9808      	ldr	r0, [sp, #32]
 8005da8:	f7fd faba 	bl	8003320 <LCD_DrawBitmap>
 8005dac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005dae:	f105 0801 	add.w	r8, r5, #1
 8005db2:	4543      	cmp	r3, r8
 8005db4:	d027      	beq.n	8005e06 <GUI_MEMDEV__WriteToActiveOpaque+0x732>
 8005db6:	4645      	mov	r5, r8
 8005db8:	f1ba 0f02 	cmp.w	sl, #2
 8005dbc:	f8dd 8060 	ldr.w	r8, [sp, #96]	@ 0x60
 8005dc0:	d1cc      	bne.n	8005d5c <GUI_MEMDEV__WriteToActiveOpaque+0x688>
 8005dc2:	4643      	mov	r3, r8
 8005dc4:	463a      	mov	r2, r7
 8005dc6:	46a0      	mov	r8, r4
 8005dc8:	f832 0b02 	ldrh.w	r0, [r2], #2
 8005dcc:	930e      	str	r3, [sp, #56]	@ 0x38
 8005dce:	920b      	str	r2, [sp, #44]	@ 0x2c
 8005dd0:	47c8      	blx	r9
 8005dd2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005dd4:	4798      	blx	r3
 8005dd6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005dd8:	f1b8 0801 	subs.w	r8, r8, #1
 8005ddc:	f823 0b02 	strh.w	r0, [r3], #2
 8005de0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8005de2:	d1f1      	bne.n	8005dc8 <GUI_MEMDEV__WriteToActiveOpaque+0x6f4>
 8005de4:	e7d1      	b.n	8005d8a <GUI_MEMDEV__WriteToActiveOpaque+0x6b6>
 8005de6:	463a      	mov	r2, r7
 8005de8:	4623      	mov	r3, r4
 8005dea:	f832 0b02 	ldrh.w	r0, [r2], #2
 8005dee:	930e      	str	r3, [sp, #56]	@ 0x38
 8005df0:	920b      	str	r2, [sp, #44]	@ 0x2c
 8005df2:	47c8      	blx	r9
 8005df4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005df6:	4798      	blx	r3
 8005df8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005dfa:	f848 0b04 	str.w	r0, [r8], #4
 8005dfe:	3b01      	subs	r3, #1
 8005e00:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8005e02:	d1f2      	bne.n	8005dea <GUI_MEMDEV__WriteToActiveOpaque+0x716>
 8005e04:	e7c1      	b.n	8005d8a <GUI_MEMDEV__WriteToActiveOpaque+0x6b6>
 8005e06:	a816      	add	r0, sp, #88	@ 0x58
 8005e08:	f7fc f930 	bl	800206c <GUI_ALLOC_UnlockH>
 8005e0c:	a818      	add	r0, sp, #96	@ 0x60
 8005e0e:	f7fc f92d 	bl	800206c <GUI_ALLOC_UnlockH>
 8005e12:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8005e14:	f7fc f956 	bl	80020c4 <GUI_ALLOC_Free>
 8005e18:	b01b      	add	sp, #108	@ 0x6c
 8005e1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005e1e:	bf00      	nop

08005e20 <_OnExit>:
 8005e20:	4b18      	ldr	r3, [pc, #96]	@ (8005e84 <_OnExit+0x64>)
 8005e22:	b570      	push	{r4, r5, r6, lr}
 8005e24:	2400      	movs	r4, #0
 8005e26:	601c      	str	r4, [r3, #0]
 8005e28:	4b17      	ldr	r3, [pc, #92]	@ (8005e88 <_OnExit+0x68>)
 8005e2a:	4d18      	ldr	r5, [pc, #96]	@ (8005e8c <_OnExit+0x6c>)
 8005e2c:	601c      	str	r4, [r3, #0]
 8005e2e:	605c      	str	r4, [r3, #4]
 8005e30:	4b17      	ldr	r3, [pc, #92]	@ (8005e90 <_OnExit+0x70>)
 8005e32:	4818      	ldr	r0, [pc, #96]	@ (8005e94 <_OnExit+0x74>)
 8005e34:	601c      	str	r4, [r3, #0]
 8005e36:	4b18      	ldr	r3, [pc, #96]	@ (8005e98 <_OnExit+0x78>)
 8005e38:	4a18      	ldr	r2, [pc, #96]	@ (8005e9c <_OnExit+0x7c>)
 8005e3a:	601c      	str	r4, [r3, #0]
 8005e3c:	4b18      	ldr	r3, [pc, #96]	@ (8005ea0 <_OnExit+0x80>)
 8005e3e:	7004      	strb	r4, [r0, #0]
 8005e40:	601c      	str	r4, [r3, #0]
 8005e42:	4b18      	ldr	r3, [pc, #96]	@ (8005ea4 <_OnExit+0x84>)
 8005e44:	6044      	str	r4, [r0, #4]
 8005e46:	6014      	str	r4, [r2, #0]
 8005e48:	6054      	str	r4, [r2, #4]
 8005e4a:	601c      	str	r4, [r3, #0]
 8005e4c:	6084      	str	r4, [r0, #8]
 8005e4e:	682b      	ldr	r3, [r5, #0]
 8005e50:	4621      	mov	r1, r4
 8005e52:	2218      	movs	r2, #24
 8005e54:	300c      	adds	r0, #12
 8005e56:	4798      	blx	r3
 8005e58:	4b13      	ldr	r3, [pc, #76]	@ (8005ea8 <_OnExit+0x88>)
 8005e5a:	4621      	mov	r1, r4
 8005e5c:	601c      	str	r4, [r3, #0]
 8005e5e:	4b13      	ldr	r3, [pc, #76]	@ (8005eac <_OnExit+0x8c>)
 8005e60:	2210      	movs	r2, #16
 8005e62:	601c      	str	r4, [r3, #0]
 8005e64:	605c      	str	r4, [r3, #4]
 8005e66:	4812      	ldr	r0, [pc, #72]	@ (8005eb0 <_OnExit+0x90>)
 8005e68:	682b      	ldr	r3, [r5, #0]
 8005e6a:	4798      	blx	r3
 8005e6c:	682b      	ldr	r3, [r5, #0]
 8005e6e:	4621      	mov	r1, r4
 8005e70:	2210      	movs	r2, #16
 8005e72:	4810      	ldr	r0, [pc, #64]	@ (8005eb4 <_OnExit+0x94>)
 8005e74:	4798      	blx	r3
 8005e76:	682b      	ldr	r3, [r5, #0]
 8005e78:	4621      	mov	r1, r4
 8005e7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005e7e:	2210      	movs	r2, #16
 8005e80:	480d      	ldr	r0, [pc, #52]	@ (8005eb8 <_OnExit+0x98>)
 8005e82:	4718      	bx	r3
 8005e84:	20002c90 	.word	0x20002c90
 8005e88:	20002c98 	.word	0x20002c98
 8005e8c:	20000024 	.word	0x20000024
 8005e90:	20002ca4 	.word	0x20002ca4
 8005e94:	20000238 	.word	0x20000238
 8005e98:	20002c50 	.word	0x20002c50
 8005e9c:	20002c64 	.word	0x20002c64
 8005ea0:	20002c84 	.word	0x20002c84
 8005ea4:	20002c94 	.word	0x20002c94
 8005ea8:	20002c60 	.word	0x20002c60
 8005eac:	20002c54 	.word	0x20002c54
 8005eb0:	20002cc8 	.word	0x20002cc8
 8005eb4:	20002cb8 	.word	0x20002cb8
 8005eb8:	20002ca8 	.word	0x20002ca8

08005ebc <_Paint1>:
 8005ebc:	b510      	push	{r4, lr}
 8005ebe:	4604      	mov	r4, r0
 8005ec0:	f7fc f8bc 	bl	800203c <GUI_ALLOC_h2p>
 8005ec4:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8005ec6:	4a05      	ldr	r2, [pc, #20]	@ (8005edc <_Paint1+0x20>)
 8005ec8:	f413 3f80 	tst.w	r3, #65536	@ 0x10000
 8005ecc:	4620      	mov	r0, r4
 8005ece:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005ed2:	4b03      	ldr	r3, [pc, #12]	@ (8005ee0 <_Paint1+0x24>)
 8005ed4:	bf08      	it	eq
 8005ed6:	4613      	moveq	r3, r2
 8005ed8:	4718      	bx	r3
 8005eda:	bf00      	nop
 8005edc:	08006dc5 	.word	0x08006dc5
 8005ee0:	0800a241 	.word	0x0800a241

08005ee4 <_Findy1>:
 8005ee4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005ee6:	4607      	mov	r7, r0
 8005ee8:	460c      	mov	r4, r1
 8005eea:	4616      	mov	r6, r2
 8005eec:	b085      	sub	sp, #20
 8005eee:	ad02      	add	r5, sp, #8
 8005ef0:	2f00      	cmp	r7, #0
 8005ef2:	d048      	beq.n	8005f86 <_Findy1+0xa2>
 8005ef4:	4638      	mov	r0, r7
 8005ef6:	f7fc f8ab 	bl	8002050 <GUI_ALLOC_LockH>
 8005efa:	6a87      	ldr	r7, [r0, #40]	@ 0x28
 8005efc:	4601      	mov	r1, r0
 8005efe:	07bb      	lsls	r3, r7, #30
 8005f00:	9001      	str	r0, [sp, #4]
 8005f02:	d53a      	bpl.n	8005f7a <_Findy1+0x96>
 8005f04:	b126      	cbz	r6, 8005f10 <_Findy1+0x2c>
 8005f06:	4632      	mov	r2, r6
 8005f08:	4628      	mov	r0, r5
 8005f0a:	f7fc ffea 	bl	8002ee2 <GUI__IntersectRects>
 8005f0e:	e002      	b.n	8005f16 <_Findy1+0x32>
 8005f10:	c803      	ldmia	r0, {r0, r1}
 8005f12:	e885 0003 	stmia.w	r5, {r0, r1}
 8005f16:	4629      	mov	r1, r5
 8005f18:	4620      	mov	r0, r4
 8005f1a:	f7fc fbed 	bl	80026f8 <GUI_RectsIntersect>
 8005f1e:	b360      	cbz	r0, 8005f7a <_Findy1+0x96>
 8005f20:	f017 0f01 	tst.w	r7, #1
 8005f24:	9b01      	ldr	r3, [sp, #4]
 8005f26:	d11c      	bne.n	8005f62 <_Findy1+0x7e>
 8005f28:	b13e      	cbz	r6, 8005f3a <_Findy1+0x56>
 8005f2a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8005f2e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8005f32:	4293      	cmp	r3, r2
 8005f34:	bfb8      	it	lt
 8005f36:	4613      	movlt	r3, r2
 8005f38:	e001      	b.n	8005f3e <_Findy1+0x5a>
 8005f3a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8005f3e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8005f42:	4293      	cmp	r3, r2
 8005f44:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8005f48:	dd05      	ble.n	8005f56 <_Findy1+0x72>
 8005f4a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8005f4e:	429a      	cmp	r2, r3
 8005f50:	db13      	blt.n	8005f7a <_Findy1+0x96>
 8005f52:	3b01      	subs	r3, #1
 8005f54:	e003      	b.n	8005f5e <_Findy1+0x7a>
 8005f56:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8005f5a:	429a      	cmp	r2, r3
 8005f5c:	dd0d      	ble.n	8005f7a <_Findy1+0x96>
 8005f5e:	80e3      	strh	r3, [r4, #6]
 8005f60:	e00b      	b.n	8005f7a <_Findy1+0x96>
 8005f62:	69df      	ldr	r7, [r3, #28]
 8005f64:	b14f      	cbz	r7, 8005f7a <_Findy1+0x96>
 8005f66:	4638      	mov	r0, r7
 8005f68:	462a      	mov	r2, r5
 8005f6a:	4621      	mov	r1, r4
 8005f6c:	f7ff ffba 	bl	8005ee4 <_Findy1>
 8005f70:	4638      	mov	r0, r7
 8005f72:	f7fc f863 	bl	800203c <GUI_ALLOC_h2p>
 8005f76:	6a07      	ldr	r7, [r0, #32]
 8005f78:	e7f4      	b.n	8005f64 <_Findy1+0x80>
 8005f7a:	9b01      	ldr	r3, [sp, #4]
 8005f7c:	a801      	add	r0, sp, #4
 8005f7e:	6a1f      	ldr	r7, [r3, #32]
 8005f80:	f7fc f874 	bl	800206c <GUI_ALLOC_UnlockH>
 8005f84:	e7b4      	b.n	8005ef0 <_Findy1+0xc>
 8005f86:	b005      	add	sp, #20
 8005f88:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005f8a <_Findx0>:
 8005f8a:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005f8e:	4606      	mov	r6, r0
 8005f90:	460f      	mov	r7, r1
 8005f92:	4690      	mov	r8, r2
 8005f94:	2500      	movs	r5, #0
 8005f96:	ac02      	add	r4, sp, #8
 8005f98:	2e00      	cmp	r6, #0
 8005f9a:	d035      	beq.n	8006008 <_Findx0+0x7e>
 8005f9c:	4630      	mov	r0, r6
 8005f9e:	f7fc f857 	bl	8002050 <GUI_ALLOC_LockH>
 8005fa2:	6a86      	ldr	r6, [r0, #40]	@ 0x28
 8005fa4:	4601      	mov	r1, r0
 8005fa6:	07b2      	lsls	r2, r6, #30
 8005fa8:	9001      	str	r0, [sp, #4]
 8005faa:	d527      	bpl.n	8005ffc <_Findx0+0x72>
 8005fac:	f1b8 0f00 	cmp.w	r8, #0
 8005fb0:	d004      	beq.n	8005fbc <_Findx0+0x32>
 8005fb2:	4642      	mov	r2, r8
 8005fb4:	4620      	mov	r0, r4
 8005fb6:	f7fc ff94 	bl	8002ee2 <GUI__IntersectRects>
 8005fba:	e002      	b.n	8005fc2 <_Findx0+0x38>
 8005fbc:	c803      	ldmia	r0, {r0, r1}
 8005fbe:	e884 0003 	stmia.w	r4, {r0, r1}
 8005fc2:	4621      	mov	r1, r4
 8005fc4:	4638      	mov	r0, r7
 8005fc6:	f7fc fb97 	bl	80026f8 <GUI_RectsIntersect>
 8005fca:	b1b8      	cbz	r0, 8005ffc <_Findx0+0x72>
 8005fcc:	07f3      	lsls	r3, r6, #31
 8005fce:	d405      	bmi.n	8005fdc <_Findx0+0x52>
 8005fd0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8005fd4:	2501      	movs	r5, #1
 8005fd6:	3301      	adds	r3, #1
 8005fd8:	803b      	strh	r3, [r7, #0]
 8005fda:	e00f      	b.n	8005ffc <_Findx0+0x72>
 8005fdc:	9b01      	ldr	r3, [sp, #4]
 8005fde:	69de      	ldr	r6, [r3, #28]
 8005fe0:	b166      	cbz	r6, 8005ffc <_Findx0+0x72>
 8005fe2:	4622      	mov	r2, r4
 8005fe4:	4639      	mov	r1, r7
 8005fe6:	4630      	mov	r0, r6
 8005fe8:	f7ff ffcf 	bl	8005f8a <_Findx0>
 8005fec:	2800      	cmp	r0, #0
 8005fee:	4630      	mov	r0, r6
 8005ff0:	bf18      	it	ne
 8005ff2:	2501      	movne	r5, #1
 8005ff4:	f7fc f822 	bl	800203c <GUI_ALLOC_h2p>
 8005ff8:	6a06      	ldr	r6, [r0, #32]
 8005ffa:	e7f1      	b.n	8005fe0 <_Findx0+0x56>
 8005ffc:	9b01      	ldr	r3, [sp, #4]
 8005ffe:	a801      	add	r0, sp, #4
 8006000:	6a1e      	ldr	r6, [r3, #32]
 8006002:	f7fc f833 	bl	800206c <GUI_ALLOC_UnlockH>
 8006006:	e7c7      	b.n	8005f98 <_Findx0+0xe>
 8006008:	4628      	mov	r0, r5
 800600a:	b004      	add	sp, #16
 800600c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006010 <_Findx1>:
 8006010:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006012:	4605      	mov	r5, r0
 8006014:	460e      	mov	r6, r1
 8006016:	4617      	mov	r7, r2
 8006018:	b085      	sub	sp, #20
 800601a:	ac02      	add	r4, sp, #8
 800601c:	b37d      	cbz	r5, 800607e <_Findx1+0x6e>
 800601e:	4628      	mov	r0, r5
 8006020:	f7fc f816 	bl	8002050 <GUI_ALLOC_LockH>
 8006024:	6a85      	ldr	r5, [r0, #40]	@ 0x28
 8006026:	4601      	mov	r1, r0
 8006028:	07aa      	lsls	r2, r5, #30
 800602a:	9001      	str	r0, [sp, #4]
 800602c:	d521      	bpl.n	8006072 <_Findx1+0x62>
 800602e:	b127      	cbz	r7, 800603a <_Findx1+0x2a>
 8006030:	463a      	mov	r2, r7
 8006032:	4620      	mov	r0, r4
 8006034:	f7fc ff55 	bl	8002ee2 <GUI__IntersectRects>
 8006038:	e002      	b.n	8006040 <_Findx1+0x30>
 800603a:	c803      	ldmia	r0, {r0, r1}
 800603c:	e884 0003 	stmia.w	r4, {r0, r1}
 8006040:	4621      	mov	r1, r4
 8006042:	4630      	mov	r0, r6
 8006044:	f7fc fb58 	bl	80026f8 <GUI_RectsIntersect>
 8006048:	b198      	cbz	r0, 8006072 <_Findx1+0x62>
 800604a:	07eb      	lsls	r3, r5, #31
 800604c:	d404      	bmi.n	8006058 <_Findx1+0x48>
 800604e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8006052:	3b01      	subs	r3, #1
 8006054:	80b3      	strh	r3, [r6, #4]
 8006056:	e00c      	b.n	8006072 <_Findx1+0x62>
 8006058:	9b01      	ldr	r3, [sp, #4]
 800605a:	69dd      	ldr	r5, [r3, #28]
 800605c:	b14d      	cbz	r5, 8006072 <_Findx1+0x62>
 800605e:	4628      	mov	r0, r5
 8006060:	4622      	mov	r2, r4
 8006062:	4631      	mov	r1, r6
 8006064:	f7ff ffd4 	bl	8006010 <_Findx1>
 8006068:	4628      	mov	r0, r5
 800606a:	f7fb ffe7 	bl	800203c <GUI_ALLOC_h2p>
 800606e:	6a05      	ldr	r5, [r0, #32]
 8006070:	e7f4      	b.n	800605c <_Findx1+0x4c>
 8006072:	9b01      	ldr	r3, [sp, #4]
 8006074:	a801      	add	r0, sp, #4
 8006076:	6a1d      	ldr	r5, [r3, #32]
 8006078:	f7fb fff8 	bl	800206c <GUI_ALLOC_UnlockH>
 800607c:	e7ce      	b.n	800601c <_Findx1+0xc>
 800607e:	b005      	add	sp, #20
 8006080:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08006084 <_Paint1Trans>:
 8006084:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006088:	4d21      	ldr	r5, [pc, #132]	@ (8006110 <_Paint1Trans+0x8c>)
 800608a:	4607      	mov	r7, r0
 800608c:	682b      	ldr	r3, [r5, #0]
 800608e:	ac02      	add	r4, sp, #8
 8006090:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 8006092:	f7fb ffdd 	bl	8002050 <GUI_ALLOC_LockH>
 8006096:	9000      	str	r0, [sp, #0]
 8006098:	4638      	mov	r0, r7
 800609a:	f7fb ffd9 	bl	8002050 <GUI_ALLOC_LockH>
 800609e:	4601      	mov	r1, r0
 80060a0:	9001      	str	r0, [sp, #4]
 80060a2:	f854 0d08 	ldr.w	r0, [r4, #-8]!
 80060a6:	3008      	adds	r0, #8
 80060a8:	f7fc fb26 	bl	80026f8 <GUI_RectsIntersect>
 80060ac:	4606      	mov	r6, r0
 80060ae:	b328      	cbz	r0, 80060fc <_Paint1Trans+0x78>
 80060b0:	9901      	ldr	r1, [sp, #4]
 80060b2:	9a00      	ldr	r2, [sp, #0]
 80060b4:	682b      	ldr	r3, [r5, #0]
 80060b6:	3208      	adds	r2, #8
 80060b8:	f101 0008 	add.w	r0, r1, #8
 80060bc:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 80060be:	f8d3 8050 	ldr.w	r8, [r3, #80]	@ 0x50
 80060c2:	f7fc ff0e 	bl	8002ee2 <GUI__IntersectRects>
 80060c6:	4620      	mov	r0, r4
 80060c8:	f7fb ffd0 	bl	800206c <GUI_ALLOC_UnlockH>
 80060cc:	9a01      	ldr	r2, [sp, #4]
 80060ce:	682b      	ldr	r3, [r5, #0]
 80060d0:	f9b2 1000 	ldrsh.w	r1, [r2]
 80060d4:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 80060d8:	4c0e      	ldr	r4, [pc, #56]	@ (8006114 <_Paint1Trans+0x90>)
 80060da:	64d9      	str	r1, [r3, #76]	@ 0x4c
 80060dc:	651a      	str	r2, [r3, #80]	@ 0x50
 80060de:	a801      	add	r0, sp, #4
 80060e0:	6027      	str	r7, [r4, #0]
 80060e2:	f7fb ffc3 	bl	800206c <GUI_ALLOC_UnlockH>
 80060e6:	4638      	mov	r0, r7
 80060e8:	f7ff fee8 	bl	8005ebc <_Paint1>
 80060ec:	2300      	movs	r3, #0
 80060ee:	6023      	str	r3, [r4, #0]
 80060f0:	682b      	ldr	r3, [r5, #0]
 80060f2:	64de      	str	r6, [r3, #76]	@ 0x4c
 80060f4:	f8c3 8050 	str.w	r8, [r3, #80]	@ 0x50
 80060f8:	2601      	movs	r6, #1
 80060fa:	e005      	b.n	8006108 <_Paint1Trans+0x84>
 80060fc:	4620      	mov	r0, r4
 80060fe:	f7fb ffb5 	bl	800206c <GUI_ALLOC_UnlockH>
 8006102:	a801      	add	r0, sp, #4
 8006104:	f7fb ffb2 	bl	800206c <GUI_ALLOC_UnlockH>
 8006108:	4630      	mov	r0, r6
 800610a:	b002      	add	sp, #8
 800610c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006110:	20000014 	.word	0x20000014
 8006114:	20002c50 	.word	0x20002c50

08006118 <_PaintTransChildren>:
 8006118:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800611c:	4605      	mov	r5, r0
 800611e:	f7fb ff97 	bl	8002050 <GUI_ALLOC_LockH>
 8006122:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8006124:	9001      	str	r0, [sp, #4]
 8006126:	079b      	lsls	r3, r3, #30
 8006128:	d405      	bmi.n	8006136 <_PaintTransChildren+0x1e>
 800612a:	a801      	add	r0, sp, #4
 800612c:	f7fb ff9e 	bl	800206c <GUI_ALLOC_UnlockH>
 8006130:	b003      	add	sp, #12
 8006132:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006136:	69c4      	ldr	r4, [r0, #28]
 8006138:	2c00      	cmp	r4, #0
 800613a:	d0f6      	beq.n	800612a <_PaintTransChildren+0x12>
 800613c:	4620      	mov	r0, r4
 800613e:	f7fb ff87 	bl	8002050 <GUI_ALLOC_LockH>
 8006142:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8006144:	9000      	str	r0, [sp, #0]
 8006146:	f003 0303 	and.w	r3, r3, #3
 800614a:	2b03      	cmp	r3, #3
 800614c:	d135      	bne.n	80061ba <_PaintTransChildren+0xa2>
 800614e:	9901      	ldr	r1, [sp, #4]
 8006150:	3108      	adds	r1, #8
 8006152:	f7fc fad1 	bl	80026f8 <GUI_RectsIntersect>
 8006156:	b380      	cbz	r0, 80061ba <_PaintTransChildren+0xa2>
 8006158:	9b01      	ldr	r3, [sp, #4]
 800615a:	a801      	add	r0, sp, #4
 800615c:	f9b3 9008 	ldrsh.w	r9, [r3, #8]
 8006160:	f9b3 800a 	ldrsh.w	r8, [r3, #10]
 8006164:	f9b3 700c 	ldrsh.w	r7, [r3, #12]
 8006168:	f9b3 600e 	ldrsh.w	r6, [r3, #14]
 800616c:	f7fb ff7e 	bl	800206c <GUI_ALLOC_UnlockH>
 8006170:	4668      	mov	r0, sp
 8006172:	f7fb ff7b 	bl	800206c <GUI_ALLOC_UnlockH>
 8006176:	4620      	mov	r0, r4
 8006178:	f7ff ff84 	bl	8006084 <_Paint1Trans>
 800617c:	b170      	cbz	r0, 800619c <_PaintTransChildren+0x84>
 800617e:	4620      	mov	r0, r4
 8006180:	f7fb ff5c 	bl	800203c <GUI_ALLOC_h2p>
 8006184:	9000      	str	r0, [sp, #0]
 8006186:	4620      	mov	r0, r4
 8006188:	f7ff ffc6 	bl	8006118 <_PaintTransChildren>
 800618c:	4620      	mov	r0, r4
 800618e:	f7fb ff55 	bl	800203c <GUI_ALLOC_h2p>
 8006192:	9000      	str	r0, [sp, #0]
 8006194:	4628      	mov	r0, r5
 8006196:	f7fb ff51 	bl	800203c <GUI_ALLOC_h2p>
 800619a:	9001      	str	r0, [sp, #4]
 800619c:	4628      	mov	r0, r5
 800619e:	f7fb ff57 	bl	8002050 <GUI_ALLOC_LockH>
 80061a2:	9001      	str	r0, [sp, #4]
 80061a4:	4620      	mov	r0, r4
 80061a6:	f7fb ff53 	bl	8002050 <GUI_ALLOC_LockH>
 80061aa:	9b01      	ldr	r3, [sp, #4]
 80061ac:	9000      	str	r0, [sp, #0]
 80061ae:	f8a3 9008 	strh.w	r9, [r3, #8]
 80061b2:	f8a3 800a 	strh.w	r8, [r3, #10]
 80061b6:	819f      	strh	r7, [r3, #12]
 80061b8:	81de      	strh	r6, [r3, #14]
 80061ba:	9b00      	ldr	r3, [sp, #0]
 80061bc:	4668      	mov	r0, sp
 80061be:	6a1c      	ldr	r4, [r3, #32]
 80061c0:	f7fb ff54 	bl	800206c <GUI_ALLOC_UnlockH>
 80061c4:	e7b8      	b.n	8006138 <_PaintTransChildren+0x20>
	...

080061c8 <WM__PaintWinAndOverlays>:
 80061c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80061ca:	4604      	mov	r4, r0
 80061cc:	f7fb ff40 	bl	8002050 <GUI_ALLOC_LockH>
 80061d0:	f640 0301 	movw	r3, #2049	@ 0x801
 80061d4:	6a82      	ldr	r2, [r0, #40]	@ 0x28
 80061d6:	9001      	str	r0, [sp, #4]
 80061d8:	4013      	ands	r3, r2
 80061da:	2b01      	cmp	r3, #1
 80061dc:	d005      	beq.n	80061ea <WM__PaintWinAndOverlays+0x22>
 80061de:	a801      	add	r0, sp, #4
 80061e0:	f7fb ff44 	bl	800206c <GUI_ALLOC_UnlockH>
 80061e4:	4620      	mov	r0, r4
 80061e6:	f7ff fe69 	bl	8005ebc <_Paint1>
 80061ea:	4b14      	ldr	r3, [pc, #80]	@ (800623c <WM__PaintWinAndOverlays+0x74>)
 80061ec:	681b      	ldr	r3, [r3, #0]
 80061ee:	b313      	cbz	r3, 8006236 <WM__PaintWinAndOverlays+0x6e>
 80061f0:	4620      	mov	r0, r4
 80061f2:	f7ff ff91 	bl	8006118 <_PaintTransChildren>
 80061f6:	4620      	mov	r0, r4
 80061f8:	f7fb ff20 	bl	800203c <GUI_ALLOC_h2p>
 80061fc:	6985      	ldr	r5, [r0, #24]
 80061fe:	6a04      	ldr	r4, [r0, #32]
 8006200:	b1cd      	cbz	r5, 8006236 <WM__PaintWinAndOverlays+0x6e>
 8006202:	b194      	cbz	r4, 800622a <WM__PaintWinAndOverlays+0x62>
 8006204:	4620      	mov	r0, r4
 8006206:	f7fb ff19 	bl	800203c <GUI_ALLOC_h2p>
 800620a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800620c:	f003 0303 	and.w	r3, r3, #3
 8006210:	2b03      	cmp	r3, #3
 8006212:	d102      	bne.n	800621a <WM__PaintWinAndOverlays+0x52>
 8006214:	4620      	mov	r0, r4
 8006216:	f7ff ff35 	bl	8006084 <_Paint1Trans>
 800621a:	4620      	mov	r0, r4
 800621c:	f7ff ff7c 	bl	8006118 <_PaintTransChildren>
 8006220:	4620      	mov	r0, r4
 8006222:	f7fb ff0b 	bl	800203c <GUI_ALLOC_h2p>
 8006226:	6a04      	ldr	r4, [r0, #32]
 8006228:	e7eb      	b.n	8006202 <WM__PaintWinAndOverlays+0x3a>
 800622a:	4628      	mov	r0, r5
 800622c:	f7fb ff06 	bl	800203c <GUI_ALLOC_h2p>
 8006230:	6a04      	ldr	r4, [r0, #32]
 8006232:	6985      	ldr	r5, [r0, #24]
 8006234:	e7e4      	b.n	8006200 <WM__PaintWinAndOverlays+0x38>
 8006236:	b003      	add	sp, #12
 8006238:	bd30      	pop	{r4, r5, pc}
 800623a:	bf00      	nop
 800623c:	20002ca4 	.word	0x20002ca4

08006240 <_cbPaintMemDev>:
 8006240:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8006244:	4d18      	ldr	r5, [pc, #96]	@ (80062a8 <_cbPaintMemDev+0x68>)
 8006246:	4682      	mov	sl, r0
 8006248:	682b      	ldr	r3, [r5, #0]
 800624a:	ac02      	add	r4, sp, #8
 800624c:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 800624e:	f7fb feff 	bl	8002050 <GUI_ALLOC_LockH>
 8006252:	682a      	ldr	r2, [r5, #0]
 8006254:	f844 0d04 	str.w	r0, [r4, #-4]!
 8006258:	3208      	adds	r2, #8
 800625a:	f100 0308 	add.w	r3, r0, #8
 800625e:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8006262:	f9b0 800a 	ldrsh.w	r8, [r0, #10]
 8006266:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 800626a:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 800626e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8006272:	e883 0003 	stmia.w	r3, {r0, r1}
 8006276:	4620      	mov	r0, r4
 8006278:	f7fb fef8 	bl	800206c <GUI_ALLOC_UnlockH>
 800627c:	f8da 0000 	ldr.w	r0, [sl]
 8006280:	f7ff ffa2 	bl	80061c8 <WM__PaintWinAndOverlays>
 8006284:	682b      	ldr	r3, [r5, #0]
 8006286:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 8006288:	f7fb fee2 	bl	8002050 <GUI_ALLOC_LockH>
 800628c:	9001      	str	r0, [sp, #4]
 800628e:	f8a0 9008 	strh.w	r9, [r0, #8]
 8006292:	f8a0 800a 	strh.w	r8, [r0, #10]
 8006296:	8187      	strh	r7, [r0, #12]
 8006298:	81c6      	strh	r6, [r0, #14]
 800629a:	4620      	mov	r0, r4
 800629c:	f7fb fee6 	bl	800206c <GUI_ALLOC_UnlockH>
 80062a0:	b002      	add	sp, #8
 80062a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80062a6:	bf00      	nop
 80062a8:	20000014 	.word	0x20000014

080062ac <WM__ClipAtParentBorders>:
 80062ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80062ae:	4606      	mov	r6, r0
 80062b0:	460d      	mov	r5, r1
 80062b2:	4628      	mov	r0, r5
 80062b4:	f7fb fecc 	bl	8002050 <GUI_ALLOC_LockH>
 80062b8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80062ba:	4601      	mov	r1, r0
 80062bc:	f013 0402 	ands.w	r4, r3, #2
 80062c0:	9001      	str	r0, [sp, #4]
 80062c2:	d104      	bne.n	80062ce <WM__ClipAtParentBorders+0x22>
 80062c4:	a801      	add	r0, sp, #4
 80062c6:	f7fb fed1 	bl	800206c <GUI_ALLOC_UnlockH>
 80062ca:	4620      	mov	r0, r4
 80062cc:	e016      	b.n	80062fc <WM__ClipAtParentBorders+0x50>
 80062ce:	4630      	mov	r0, r6
 80062d0:	f7fc fdea 	bl	8002ea8 <GUI__IntersectRect>
 80062d4:	9b01      	ldr	r3, [sp, #4]
 80062d6:	a801      	add	r0, sp, #4
 80062d8:	699c      	ldr	r4, [r3, #24]
 80062da:	b954      	cbnz	r4, 80062f2 <WM__ClipAtParentBorders+0x46>
 80062dc:	f7fb fec6 	bl	800206c <GUI_ALLOC_UnlockH>
 80062e0:	4b07      	ldr	r3, [pc, #28]	@ (8006300 <WM__ClipAtParentBorders+0x54>)
 80062e2:	681a      	ldr	r2, [r3, #0]
 80062e4:	4295      	cmp	r5, r2
 80062e6:	d008      	beq.n	80062fa <WM__ClipAtParentBorders+0x4e>
 80062e8:	6858      	ldr	r0, [r3, #4]
 80062ea:	1b43      	subs	r3, r0, r5
 80062ec:	4258      	negs	r0, r3
 80062ee:	4158      	adcs	r0, r3
 80062f0:	e004      	b.n	80062fc <WM__ClipAtParentBorders+0x50>
 80062f2:	f7fb febb 	bl	800206c <GUI_ALLOC_UnlockH>
 80062f6:	4625      	mov	r5, r4
 80062f8:	e7db      	b.n	80062b2 <WM__ClipAtParentBorders+0x6>
 80062fa:	2001      	movs	r0, #1
 80062fc:	b002      	add	sp, #8
 80062fe:	bd70      	pop	{r4, r5, r6, pc}
 8006300:	20002c54 	.word	0x20002c54

08006304 <WM__InsertWindowIntoList>:
 8006304:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8006308:	4606      	mov	r6, r0
 800630a:	460c      	mov	r4, r1
 800630c:	2900      	cmp	r1, #0
 800630e:	d04c      	beq.n	80063aa <WM__InsertWindowIntoList+0xa6>
 8006310:	f7fb fe9e 	bl	8002050 <GUI_ALLOC_LockH>
 8006314:	2300      	movs	r3, #0
 8006316:	6184      	str	r4, [r0, #24]
 8006318:	9001      	str	r0, [sp, #4]
 800631a:	6203      	str	r3, [r0, #32]
 800631c:	4620      	mov	r0, r4
 800631e:	f7fb fe97 	bl	8002050 <GUI_ALLOC_LockH>
 8006322:	69c7      	ldr	r7, [r0, #28]
 8006324:	ac04      	add	r4, sp, #16
 8006326:	f844 0d08 	str.w	r0, [r4, #-8]!
 800632a:	b92f      	cbnz	r7, 8006338 <WM__InsertWindowIntoList+0x34>
 800632c:	61c6      	str	r6, [r0, #28]
 800632e:	a801      	add	r0, sp, #4
 8006330:	f7fb fe9c 	bl	800206c <GUI_ALLOC_UnlockH>
 8006334:	4620      	mov	r0, r4
 8006336:	e036      	b.n	80063a6 <WM__InsertWindowIntoList+0xa2>
 8006338:	9b01      	ldr	r3, [sp, #4]
 800633a:	4638      	mov	r0, r7
 800633c:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
 800633e:	f7fb fe87 	bl	8002050 <GUI_ALLOC_LockH>
 8006342:	f10d 0810 	add.w	r8, sp, #16
 8006346:	f005 0508 	and.w	r5, r5, #8
 800634a:	f848 0d04 	str.w	r0, [r8, #-4]!
 800634e:	b975      	cbnz	r5, 800636e <WM__InsertWindowIntoList+0x6a>
 8006350:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8006352:	071a      	lsls	r2, r3, #28
 8006354:	d50b      	bpl.n	800636e <WM__InsertWindowIntoList+0x6a>
 8006356:	9b01      	ldr	r3, [sp, #4]
 8006358:	a801      	add	r0, sp, #4
 800635a:	621f      	str	r7, [r3, #32]
 800635c:	9b02      	ldr	r3, [sp, #8]
 800635e:	61de      	str	r6, [r3, #28]
 8006360:	f7fb fe84 	bl	800206c <GUI_ALLOC_UnlockH>
 8006364:	4620      	mov	r0, r4
 8006366:	f7fb fe81 	bl	800206c <GUI_ALLOC_UnlockH>
 800636a:	4640      	mov	r0, r8
 800636c:	e01b      	b.n	80063a6 <WM__InsertWindowIntoList+0xa2>
 800636e:	4620      	mov	r0, r4
 8006370:	f7fb fe7c 	bl	800206c <GUI_ALLOC_UnlockH>
 8006374:	4640      	mov	r0, r8
 8006376:	f7fb fe79 	bl	800206c <GUI_ALLOC_UnlockH>
 800637a:	4638      	mov	r0, r7
 800637c:	f7fb fe5e 	bl	800203c <GUI_ALLOC_h2p>
 8006380:	9003      	str	r0, [sp, #12]
 8006382:	9b03      	ldr	r3, [sp, #12]
 8006384:	6a1c      	ldr	r4, [r3, #32]
 8006386:	b90c      	cbnz	r4, 800638c <WM__InsertWindowIntoList+0x88>
 8006388:	621e      	str	r6, [r3, #32]
 800638a:	e00b      	b.n	80063a4 <WM__InsertWindowIntoList+0xa0>
 800638c:	4620      	mov	r0, r4
 800638e:	f7fb fe55 	bl	800203c <GUI_ALLOC_h2p>
 8006392:	2d00      	cmp	r5, #0
 8006394:	d1f4      	bne.n	8006380 <WM__InsertWindowIntoList+0x7c>
 8006396:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8006398:	071b      	lsls	r3, r3, #28
 800639a:	d5f1      	bpl.n	8006380 <WM__InsertWindowIntoList+0x7c>
 800639c:	9b03      	ldr	r3, [sp, #12]
 800639e:	621e      	str	r6, [r3, #32]
 80063a0:	9b01      	ldr	r3, [sp, #4]
 80063a2:	621c      	str	r4, [r3, #32]
 80063a4:	a801      	add	r0, sp, #4
 80063a6:	f7fb fe61 	bl	800206c <GUI_ALLOC_UnlockH>
 80063aa:	b004      	add	sp, #16
 80063ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080063b0 <WM__RemoveWindowFromList>:
 80063b0:	b570      	push	{r4, r5, r6, lr}
 80063b2:	4604      	mov	r4, r0
 80063b4:	f7fb fe42 	bl	800203c <GUI_ALLOC_h2p>
 80063b8:	4605      	mov	r5, r0
 80063ba:	6980      	ldr	r0, [r0, #24]
 80063bc:	b1a8      	cbz	r0, 80063ea <WM__RemoveWindowFromList+0x3a>
 80063be:	f7fb fe3d 	bl	800203c <GUI_ALLOC_h2p>
 80063c2:	69c3      	ldr	r3, [r0, #28]
 80063c4:	4606      	mov	r6, r0
 80063c6:	429c      	cmp	r4, r3
 80063c8:	d105      	bne.n	80063d6 <WM__RemoveWindowFromList+0x26>
 80063ca:	4620      	mov	r0, r4
 80063cc:	f7fb fe36 	bl	800203c <GUI_ALLOC_h2p>
 80063d0:	6a03      	ldr	r3, [r0, #32]
 80063d2:	61f3      	str	r3, [r6, #28]
 80063d4:	bd70      	pop	{r4, r5, r6, pc}
 80063d6:	b143      	cbz	r3, 80063ea <WM__RemoveWindowFromList+0x3a>
 80063d8:	4618      	mov	r0, r3
 80063da:	f7fb fe2f 	bl	800203c <GUI_ALLOC_h2p>
 80063de:	6a03      	ldr	r3, [r0, #32]
 80063e0:	429c      	cmp	r4, r3
 80063e2:	d1f8      	bne.n	80063d6 <WM__RemoveWindowFromList+0x26>
 80063e4:	6a2b      	ldr	r3, [r5, #32]
 80063e6:	6203      	str	r3, [r0, #32]
 80063e8:	bd70      	pop	{r4, r5, r6, pc}
 80063ea:	bd70      	pop	{r4, r5, r6, pc}

080063ec <WM__Client2Screen>:
 80063ec:	4603      	mov	r3, r0
 80063ee:	4608      	mov	r0, r1
 80063f0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80063f4:	f9b3 1000 	ldrsh.w	r1, [r3]
 80063f8:	f7fc b933 	b.w	8002662 <GUI_MoveRect>

080063fc <_SetClipRectUserIntersect>:
 80063fc:	4b11      	ldr	r3, [pc, #68]	@ (8006444 <_SetClipRectUserIntersect+0x48>)
 80063fe:	b530      	push	{r4, r5, lr}
 8006400:	681c      	ldr	r4, [r3, #0]
 8006402:	b085      	sub	sp, #20
 8006404:	6c62      	ldr	r2, [r4, #68]	@ 0x44
 8006406:	4605      	mov	r5, r0
 8006408:	b1ba      	cbz	r2, 800643a <_SetClipRectUserIntersect+0x3e>
 800640a:	6810      	ldr	r0, [r2, #0]
 800640c:	6851      	ldr	r1, [r2, #4]
 800640e:	ab02      	add	r3, sp, #8
 8006410:	c303      	stmia	r3!, {r0, r1}
 8006412:	4b0d      	ldr	r3, [pc, #52]	@ (8006448 <_SetClipRectUserIntersect+0x4c>)
 8006414:	6818      	ldr	r0, [r3, #0]
 8006416:	b900      	cbnz	r0, 800641a <_SetClipRectUserIntersect+0x1e>
 8006418:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
 800641a:	f7fb fe19 	bl	8002050 <GUI_ALLOC_LockH>
 800641e:	ac04      	add	r4, sp, #16
 8006420:	a902      	add	r1, sp, #8
 8006422:	f844 0d0c 	str.w	r0, [r4, #-12]!
 8006426:	f7ff ffe1 	bl	80063ec <WM__Client2Screen>
 800642a:	4620      	mov	r0, r4
 800642c:	f7fb fe1e 	bl	800206c <GUI_ALLOC_UnlockH>
 8006430:	a802      	add	r0, sp, #8
 8006432:	4629      	mov	r1, r5
 8006434:	f7fc fd38 	bl	8002ea8 <GUI__IntersectRect>
 8006438:	a802      	add	r0, sp, #8
 800643a:	f003 fb5d 	bl	8009af8 <LCD_SetClipRectEx>
 800643e:	b005      	add	sp, #20
 8006440:	bd30      	pop	{r4, r5, pc}
 8006442:	bf00      	nop
 8006444:	20000014 	.word	0x20000014
 8006448:	20002c50 	.word	0x20002c50

0800644c <WM__ActivateClipRect>:
 800644c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800644e:	4b0e      	ldr	r3, [pc, #56]	@ (8006488 <WM__ActivateClipRect+0x3c>)
 8006450:	681b      	ldr	r3, [r3, #0]
 8006452:	f893 2054 	ldrb.w	r2, [r3, #84]	@ 0x54
 8006456:	b10a      	cbz	r2, 800645c <WM__ActivateClipRect+0x10>
 8006458:	480c      	ldr	r0, [pc, #48]	@ (800648c <WM__ActivateClipRect+0x40>)
 800645a:	e011      	b.n	8006480 <WM__ActivateClipRect+0x34>
 800645c:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 800645e:	f7fb fdf7 	bl	8002050 <GUI_ALLOC_LockH>
 8006462:	ac02      	add	r4, sp, #8
 8006464:	9001      	str	r0, [sp, #4]
 8006466:	c803      	ldmia	r0, {r0, r1}
 8006468:	e884 0003 	stmia.w	r4, {r0, r1}
 800646c:	a801      	add	r0, sp, #4
 800646e:	f7fb fdfd 	bl	800206c <GUI_ALLOC_UnlockH>
 8006472:	4b07      	ldr	r3, [pc, #28]	@ (8006490 <WM__ActivateClipRect+0x44>)
 8006474:	6819      	ldr	r1, [r3, #0]
 8006476:	b111      	cbz	r1, 800647e <WM__ActivateClipRect+0x32>
 8006478:	4620      	mov	r0, r4
 800647a:	f7ff ff17 	bl	80062ac <WM__ClipAtParentBorders>
 800647e:	4620      	mov	r0, r4
 8006480:	f7ff ffbc 	bl	80063fc <_SetClipRectUserIntersect>
 8006484:	b004      	add	sp, #16
 8006486:	bd10      	pop	{r4, pc}
 8006488:	20000014 	.word	0x20000014
 800648c:	2000024c 	.word	0x2000024c
 8006490:	20002c50 	.word	0x20002c50

08006494 <WM__IsWindow>:
 8006494:	4b06      	ldr	r3, [pc, #24]	@ (80064b0 <WM__IsWindow+0x1c>)
 8006496:	b510      	push	{r4, lr}
 8006498:	4604      	mov	r4, r0
 800649a:	6818      	ldr	r0, [r3, #0]
 800649c:	b128      	cbz	r0, 80064aa <WM__IsWindow+0x16>
 800649e:	42a0      	cmp	r0, r4
 80064a0:	d004      	beq.n	80064ac <WM__IsWindow+0x18>
 80064a2:	f7fb fdcb 	bl	800203c <GUI_ALLOC_h2p>
 80064a6:	6940      	ldr	r0, [r0, #20]
 80064a8:	e7f8      	b.n	800649c <WM__IsWindow+0x8>
 80064aa:	bd10      	pop	{r4, pc}
 80064ac:	2001      	movs	r0, #1
 80064ae:	bd10      	pop	{r4, pc}
 80064b0:	20002c70 	.word	0x20002c70

080064b4 <WM__InvalidateDrawAndDescs>:
 80064b4:	b513      	push	{r0, r1, r4, lr}
 80064b6:	4604      	mov	r4, r0
 80064b8:	b300      	cbz	r0, 80064fc <WM__InvalidateDrawAndDescs+0x48>
 80064ba:	f7fb fdc9 	bl	8002050 <GUI_ALLOC_LockH>
 80064be:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80064c0:	9001      	str	r0, [sp, #4]
 80064c2:	079b      	lsls	r3, r3, #30
 80064c4:	d517      	bpl.n	80064f6 <WM__InvalidateDrawAndDescs+0x42>
 80064c6:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 80064c8:	b140      	cbz	r0, 80064dc <WM__InvalidateDrawAndDescs+0x28>
 80064ca:	4b0d      	ldr	r3, [pc, #52]	@ (8006500 <WM__InvalidateDrawAndDescs+0x4c>)
 80064cc:	681b      	ldr	r3, [r3, #0]
 80064ce:	429c      	cmp	r4, r3
 80064d0:	d004      	beq.n	80064dc <WM__InvalidateDrawAndDescs+0x28>
 80064d2:	f003 fbed 	bl	8009cb0 <GUI_MEMDEV_Delete>
 80064d6:	9b01      	ldr	r3, [sp, #4]
 80064d8:	2200      	movs	r2, #0
 80064da:	625a      	str	r2, [r3, #36]	@ 0x24
 80064dc:	4620      	mov	r0, r4
 80064de:	f000 fea5 	bl	800722c <WM_GetFirstChild>
 80064e2:	4604      	mov	r4, r0
 80064e4:	b13c      	cbz	r4, 80064f6 <WM__InvalidateDrawAndDescs+0x42>
 80064e6:	4620      	mov	r0, r4
 80064e8:	f7ff ffe4 	bl	80064b4 <WM__InvalidateDrawAndDescs>
 80064ec:	4620      	mov	r0, r4
 80064ee:	f7fb fda5 	bl	800203c <GUI_ALLOC_h2p>
 80064f2:	6a04      	ldr	r4, [r0, #32]
 80064f4:	e7f6      	b.n	80064e4 <WM__InvalidateDrawAndDescs+0x30>
 80064f6:	a801      	add	r0, sp, #4
 80064f8:	f7fb fdb8 	bl	800206c <GUI_ALLOC_UnlockH>
 80064fc:	b002      	add	sp, #8
 80064fe:	bd10      	pop	{r4, pc}
 8006500:	20002ca0 	.word	0x20002ca0

08006504 <WM__RectIsNZ>:
 8006504:	f9b0 2000 	ldrsh.w	r2, [r0]
 8006508:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800650c:	429a      	cmp	r2, r3
 800650e:	dc08      	bgt.n	8006522 <WM__RectIsNZ+0x1e>
 8006510:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8006514:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8006518:	4283      	cmp	r3, r0
 800651a:	bfcc      	ite	gt
 800651c:	2000      	movgt	r0, #0
 800651e:	2001      	movle	r0, #1
 8006520:	4770      	bx	lr
 8006522:	2000      	movs	r0, #0
 8006524:	4770      	bx	lr

08006526 <WM_SendMessage>:
 8006526:	b108      	cbz	r0, 800652c <WM_SendMessage+0x6>
 8006528:	f001 b9fa 	b.w	8007920 <WM__SendMessage>
 800652c:	4770      	bx	lr

0800652e <WM__SendMsgNoData>:
 800652e:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8006530:	ab04      	add	r3, sp, #16
 8006532:	f843 1d10 	str.w	r1, [r3, #-16]!
 8006536:	4619      	mov	r1, r3
 8006538:	9001      	str	r0, [sp, #4]
 800653a:	f001 f9f1 	bl	8007920 <WM__SendMessage>
 800653e:	b005      	add	sp, #20
 8006540:	f85d fb04 	ldr.w	pc, [sp], #4

08006544 <WM__GetClientRectWin>:
 8006544:	2300      	movs	r3, #0
 8006546:	800b      	strh	r3, [r1, #0]
 8006548:	8802      	ldrh	r2, [r0, #0]
 800654a:	804b      	strh	r3, [r1, #2]
 800654c:	8883      	ldrh	r3, [r0, #4]
 800654e:	1a9b      	subs	r3, r3, r2
 8006550:	808b      	strh	r3, [r1, #4]
 8006552:	8842      	ldrh	r2, [r0, #2]
 8006554:	88c3      	ldrh	r3, [r0, #6]
 8006556:	1a9b      	subs	r3, r3, r2
 8006558:	80cb      	strh	r3, [r1, #6]
 800655a:	4770      	bx	lr

0800655c <WM__GetTopLevelLayer>:
 800655c:	b510      	push	{r4, lr}
 800655e:	4604      	mov	r4, r0
 8006560:	f7fb fd6c 	bl	800203c <GUI_ALLOC_h2p>
 8006564:	6980      	ldr	r0, [r0, #24]
 8006566:	2800      	cmp	r0, #0
 8006568:	d1f9      	bne.n	800655e <WM__GetTopLevelLayer+0x2>
 800656a:	4b05      	ldr	r3, [pc, #20]	@ (8006580 <WM__GetTopLevelLayer+0x24>)
 800656c:	681a      	ldr	r2, [r3, #0]
 800656e:	4294      	cmp	r4, r2
 8006570:	d005      	beq.n	800657e <WM__GetTopLevelLayer+0x22>
 8006572:	6858      	ldr	r0, [r3, #4]
 8006574:	4284      	cmp	r4, r0
 8006576:	bf0c      	ite	eq
 8006578:	2001      	moveq	r0, #1
 800657a:	f04f 30ff 	movne.w	r0, #4294967295
 800657e:	bd10      	pop	{r4, pc}
 8006580:	20002c54 	.word	0x20002c54

08006584 <_Invalidate1Abs>:
 8006584:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006586:	b085      	sub	sp, #20
 8006588:	460d      	mov	r5, r1
 800658a:	4606      	mov	r6, r0
 800658c:	4617      	mov	r7, r2
 800658e:	f7fb fd55 	bl	800203c <GUI_ALLOC_h2p>
 8006592:	6a81      	ldr	r1, [r0, #40]	@ 0x28
 8006594:	9001      	str	r0, [sp, #4]
 8006596:	078b      	lsls	r3, r1, #30
 8006598:	d53e      	bpl.n	8006618 <_Invalidate1Abs+0x94>
 800659a:	4628      	mov	r0, r5
 800659c:	f7ff ffb2 	bl	8006504 <WM__RectIsNZ>
 80065a0:	2800      	cmp	r0, #0
 80065a2:	d039      	beq.n	8006618 <_Invalidate1Abs+0x94>
 80065a4:	f640 0301 	movw	r3, #2049	@ 0x801
 80065a8:	400b      	ands	r3, r1
 80065aa:	2b01      	cmp	r3, #1
 80065ac:	d034      	beq.n	8006618 <_Invalidate1Abs+0x94>
 80065ae:	4630      	mov	r0, r6
 80065b0:	f7fb fd4e 	bl	8002050 <GUI_ALLOC_LockH>
 80065b4:	ac02      	add	r4, sp, #8
 80065b6:	4602      	mov	r2, r0
 80065b8:	9001      	str	r0, [sp, #4]
 80065ba:	4629      	mov	r1, r5
 80065bc:	4620      	mov	r0, r4
 80065be:	f7fc fc90 	bl	8002ee2 <GUI__IntersectRects>
 80065c2:	4620      	mov	r0, r4
 80065c4:	f7ff ff9e 	bl	8006504 <WM__RectIsNZ>
 80065c8:	b318      	cbz	r0, 8006612 <_Invalidate1Abs+0x8e>
 80065ca:	f244 0120 	movw	r1, #16416	@ 0x4020
 80065ce:	9b01      	ldr	r3, [sp, #4]
 80065d0:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80065d2:	f103 0508 	add.w	r5, r3, #8
 80065d6:	4011      	ands	r1, r2
 80065d8:	b129      	cbz	r1, 80065e6 <_Invalidate1Abs+0x62>
 80065da:	4622      	mov	r2, r4
 80065dc:	4629      	mov	r1, r5
 80065de:	4628      	mov	r0, r5
 80065e0:	f7fc f814 	bl	800260c <GUI_MergeRect>
 80065e4:	e015      	b.n	8006612 <_Invalidate1Abs+0x8e>
 80065e6:	433a      	orrs	r2, r7
 80065e8:	e894 0003 	ldmia.w	r4, {r0, r1}
 80065ec:	e885 0003 	stmia.w	r5, {r0, r1}
 80065f0:	629a      	str	r2, [r3, #40]	@ 0x28
 80065f2:	4a0a      	ldr	r2, [pc, #40]	@ (800661c <_Invalidate1Abs+0x98>)
 80065f4:	4630      	mov	r0, r6
 80065f6:	8813      	ldrh	r3, [r2, #0]
 80065f8:	3301      	adds	r3, #1
 80065fa:	8013      	strh	r3, [r2, #0]
 80065fc:	f7ff ffae 	bl	800655c <WM__GetTopLevelLayer>
 8006600:	4a07      	ldr	r2, [pc, #28]	@ (8006620 <_Invalidate1Abs+0x9c>)
 8006602:	2301      	movs	r3, #1
 8006604:	fa03 f000 	lsl.w	r0, r3, r0
 8006608:	6813      	ldr	r3, [r2, #0]
 800660a:	4303      	orrs	r3, r0
 800660c:	6013      	str	r3, [r2, #0]
 800660e:	f7fc fc43 	bl	8002e98 <GUI_SignalEvent>
 8006612:	a801      	add	r0, sp, #4
 8006614:	f7fb fd2a 	bl	800206c <GUI_ALLOC_UnlockH>
 8006618:	b005      	add	sp, #20
 800661a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800661c:	20002c6c 	.word	0x20002c6c
 8006620:	20002c7c 	.word	0x20002c7c

08006624 <WM__Invalidate1Abs>:
 8006624:	2220      	movs	r2, #32
 8006626:	f7ff bfad 	b.w	8006584 <_Invalidate1Abs>

0800662a <WM_InvalidateWindowAndDescsEx>:
 800662a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800662c:	460f      	mov	r7, r1
 800662e:	b085      	sub	sp, #20
 8006630:	4615      	mov	r5, r2
 8006632:	4606      	mov	r6, r0
 8006634:	b348      	cbz	r0, 800668a <WM_InvalidateWindowAndDescsEx+0x60>
 8006636:	f7fb fd0b 	bl	8002050 <GUI_ALLOC_LockH>
 800663a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800663c:	ac04      	add	r4, sp, #16
 800663e:	079b      	lsls	r3, r3, #30
 8006640:	4602      	mov	r2, r0
 8006642:	f844 0d0c 	str.w	r0, [r4, #-12]!
 8006646:	d403      	bmi.n	8006650 <WM_InvalidateWindowAndDescsEx+0x26>
 8006648:	4620      	mov	r0, r4
 800664a:	f7fb fd0f 	bl	800206c <GUI_ALLOC_UnlockH>
 800664e:	e01c      	b.n	800668a <WM_InvalidateWindowAndDescsEx+0x60>
 8006650:	4639      	mov	r1, r7
 8006652:	a802      	add	r0, sp, #8
 8006654:	f7fc fc45 	bl	8002ee2 <GUI__IntersectRects>
 8006658:	2800      	cmp	r0, #0
 800665a:	d0f5      	beq.n	8006648 <WM_InvalidateWindowAndDescsEx+0x1e>
 800665c:	4620      	mov	r0, r4
 800665e:	f7fb fd05 	bl	800206c <GUI_ALLOC_UnlockH>
 8006662:	462a      	mov	r2, r5
 8006664:	a902      	add	r1, sp, #8
 8006666:	4630      	mov	r0, r6
 8006668:	f7ff ff8c 	bl	8006584 <_Invalidate1Abs>
 800666c:	4630      	mov	r0, r6
 800666e:	f000 fddd 	bl	800722c <WM_GetFirstChild>
 8006672:	4604      	mov	r4, r0
 8006674:	b14c      	cbz	r4, 800668a <WM_InvalidateWindowAndDescsEx+0x60>
 8006676:	4620      	mov	r0, r4
 8006678:	462a      	mov	r2, r5
 800667a:	a902      	add	r1, sp, #8
 800667c:	f7ff ffd5 	bl	800662a <WM_InvalidateWindowAndDescsEx>
 8006680:	4620      	mov	r0, r4
 8006682:	f7fb fcdb 	bl	800203c <GUI_ALLOC_h2p>
 8006686:	6a04      	ldr	r4, [r0, #32]
 8006688:	e7f4      	b.n	8006674 <WM_InvalidateWindowAndDescsEx+0x4a>
 800668a:	b005      	add	sp, #20
 800668c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800668e <WM__InvalidateRect>:
 800668e:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8006692:	4680      	mov	r8, r0
 8006694:	4617      	mov	r7, r2
 8006696:	461d      	mov	r5, r3
 8006698:	460c      	mov	r4, r1
 800669a:	b381      	cbz	r1, 80066fe <WM__InvalidateRect+0x70>
 800669c:	4608      	mov	r0, r1
 800669e:	f7fb fcd7 	bl	8002050 <GUI_ALLOC_LockH>
 80066a2:	6a86      	ldr	r6, [r0, #40]	@ 0x28
 80066a4:	4602      	mov	r2, r0
 80066a6:	07b3      	lsls	r3, r6, #30
 80066a8:	9001      	str	r0, [sp, #4]
 80066aa:	d525      	bpl.n	80066f8 <WM__InvalidateRect+0x6a>
 80066ac:	4641      	mov	r1, r8
 80066ae:	a802      	add	r0, sp, #8
 80066b0:	f7fc fc17 	bl	8002ee2 <GUI__IntersectRects>
 80066b4:	b300      	cbz	r0, 80066f8 <WM__InvalidateRect+0x6a>
 80066b6:	f640 0301 	movw	r3, #2049	@ 0x801
 80066ba:	4033      	ands	r3, r6
 80066bc:	2b01      	cmp	r3, #1
 80066be:	d107      	bne.n	80066d0 <WM__InvalidateRect+0x42>
 80066c0:	9901      	ldr	r1, [sp, #4]
 80066c2:	462b      	mov	r3, r5
 80066c4:	6a0a      	ldr	r2, [r1, #32]
 80066c6:	a802      	add	r0, sp, #8
 80066c8:	6989      	ldr	r1, [r1, #24]
 80066ca:	f7ff ffe0 	bl	800668e <WM__InvalidateRect>
 80066ce:	e004      	b.n	80066da <WM__InvalidateRect+0x4c>
 80066d0:	462a      	mov	r2, r5
 80066d2:	a902      	add	r1, sp, #8
 80066d4:	4620      	mov	r0, r4
 80066d6:	f7ff ff55 	bl	8006584 <_Invalidate1Abs>
 80066da:	9b01      	ldr	r3, [sp, #4]
 80066dc:	69dc      	ldr	r4, [r3, #28]
 80066de:	b15c      	cbz	r4, 80066f8 <WM__InvalidateRect+0x6a>
 80066e0:	42bc      	cmp	r4, r7
 80066e2:	d009      	beq.n	80066f8 <WM__InvalidateRect+0x6a>
 80066e4:	4620      	mov	r0, r4
 80066e6:	462a      	mov	r2, r5
 80066e8:	a902      	add	r1, sp, #8
 80066ea:	f7ff ff9e 	bl	800662a <WM_InvalidateWindowAndDescsEx>
 80066ee:	4620      	mov	r0, r4
 80066f0:	f7fb fca4 	bl	800203c <GUI_ALLOC_h2p>
 80066f4:	6a04      	ldr	r4, [r0, #32]
 80066f6:	e7f2      	b.n	80066de <WM__InvalidateRect+0x50>
 80066f8:	a801      	add	r0, sp, #4
 80066fa:	f7fb fcb7 	bl	800206c <GUI_ALLOC_UnlockH>
 80066fe:	b004      	add	sp, #16
 8006700:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006704 <WM__InvalidateParent>:
 8006704:	b570      	push	{r4, r5, r6, lr}
 8006706:	4605      	mov	r5, r0
 8006708:	4608      	mov	r0, r1
 800670a:	460c      	mov	r4, r1
 800670c:	4616      	mov	r6, r2
 800670e:	f7fb fc95 	bl	800203c <GUI_ALLOC_h2p>
 8006712:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8006714:	4632      	mov	r2, r6
 8006716:	f413 3f80 	tst.w	r3, #65536	@ 0x10000
 800671a:	4621      	mov	r1, r4
 800671c:	4628      	mov	r0, r5
 800671e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8006722:	bf14      	ite	ne
 8006724:	f44f 4380 	movne.w	r3, #16384	@ 0x4000
 8006728:	2320      	moveq	r3, #32
 800672a:	f7ff bfb0 	b.w	800668e <WM__InvalidateRect>

0800672e <WM__InvalidateRectEx>:
 800672e:	2320      	movs	r3, #32
 8006730:	f7ff bfad 	b.w	800668e <WM__InvalidateRect>

08006734 <WM__DetachWindow>:
 8006734:	b513      	push	{r0, r1, r4, lr}
 8006736:	4604      	mov	r4, r0
 8006738:	f7fb fc8a 	bl	8002050 <GUI_ALLOC_LockH>
 800673c:	6981      	ldr	r1, [r0, #24]
 800673e:	9001      	str	r0, [sp, #4]
 8006740:	b141      	cbz	r1, 8006754 <WM__DetachWindow+0x20>
 8006742:	6a02      	ldr	r2, [r0, #32]
 8006744:	f7ff fff3 	bl	800672e <WM__InvalidateRectEx>
 8006748:	4620      	mov	r0, r4
 800674a:	f7ff fe31 	bl	80063b0 <WM__RemoveWindowFromList>
 800674e:	9b01      	ldr	r3, [sp, #4]
 8006750:	2200      	movs	r2, #0
 8006752:	619a      	str	r2, [r3, #24]
 8006754:	a801      	add	r0, sp, #4
 8006756:	f7fb fc89 	bl	800206c <GUI_ALLOC_UnlockH>
 800675a:	b002      	add	sp, #8
 800675c:	bd10      	pop	{r4, pc}

0800675e <WM_InvalidateRect>:
 800675e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006760:	460f      	mov	r7, r1
 8006762:	b087      	sub	sp, #28
 8006764:	4605      	mov	r5, r0
 8006766:	2800      	cmp	r0, #0
 8006768:	d033      	beq.n	80067d2 <WM_InvalidateRect+0x74>
 800676a:	f7fb fc71 	bl	8002050 <GUI_ALLOC_LockH>
 800676e:	6a86      	ldr	r6, [r0, #40]	@ 0x28
 8006770:	9001      	str	r0, [sp, #4]
 8006772:	07b2      	lsls	r2, r6, #30
 8006774:	d52a      	bpl.n	80067cc <WM_InvalidateRect+0x6e>
 8006776:	c803      	ldmia	r0, {r0, r1}
 8006778:	ac04      	add	r4, sp, #16
 800677a:	03f3      	lsls	r3, r6, #15
 800677c:	e884 0003 	stmia.w	r4, {r0, r1}
 8006780:	d502      	bpl.n	8006788 <WM_InvalidateRect+0x2a>
 8006782:	4628      	mov	r0, r5
 8006784:	f7ff fe96 	bl	80064b4 <WM__InvalidateDrawAndDescs>
 8006788:	b15f      	cbz	r7, 80067a2 <WM_InvalidateRect+0x44>
 800678a:	6838      	ldr	r0, [r7, #0]
 800678c:	6879      	ldr	r1, [r7, #4]
 800678e:	ab02      	add	r3, sp, #8
 8006790:	c303      	stmia	r3!, {r0, r1}
 8006792:	a902      	add	r1, sp, #8
 8006794:	9801      	ldr	r0, [sp, #4]
 8006796:	f7ff fe29 	bl	80063ec <WM__Client2Screen>
 800679a:	a902      	add	r1, sp, #8
 800679c:	4620      	mov	r0, r4
 800679e:	f7fc fb83 	bl	8002ea8 <GUI__IntersectRect>
 80067a2:	4629      	mov	r1, r5
 80067a4:	4620      	mov	r0, r4
 80067a6:	f7ff fd81 	bl	80062ac <WM__ClipAtParentBorders>
 80067aa:	b178      	cbz	r0, 80067cc <WM_InvalidateRect+0x6e>
 80067ac:	f640 0301 	movw	r3, #2049	@ 0x801
 80067b0:	4033      	ands	r3, r6
 80067b2:	2b01      	cmp	r3, #1
 80067b4:	d106      	bne.n	80067c4 <WM_InvalidateRect+0x66>
 80067b6:	9b01      	ldr	r3, [sp, #4]
 80067b8:	4620      	mov	r0, r4
 80067ba:	6a1a      	ldr	r2, [r3, #32]
 80067bc:	6999      	ldr	r1, [r3, #24]
 80067be:	f7ff ffb6 	bl	800672e <WM__InvalidateRectEx>
 80067c2:	e003      	b.n	80067cc <WM_InvalidateRect+0x6e>
 80067c4:	4621      	mov	r1, r4
 80067c6:	4628      	mov	r0, r5
 80067c8:	f7ff ff2c 	bl	8006624 <WM__Invalidate1Abs>
 80067cc:	a801      	add	r0, sp, #4
 80067ce:	f7fb fc4d 	bl	800206c <GUI_ALLOC_UnlockH>
 80067d2:	b007      	add	sp, #28
 80067d4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080067d6 <WM_InvalidateWindow>:
 80067d6:	2100      	movs	r1, #0
 80067d8:	f7ff bfc1 	b.w	800675e <WM_InvalidateRect>

080067dc <WM__SelectTopLevelLayer>:
 80067dc:	b508      	push	{r3, lr}
 80067de:	f7ff febd 	bl	800655c <WM__GetTopLevelLayer>
 80067e2:	2800      	cmp	r0, #0
 80067e4:	db03      	blt.n	80067ee <WM__SelectTopLevelLayer+0x12>
 80067e6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80067ea:	f002 bafd 	b.w	8008de8 <GUI_SelectLayer>
 80067ee:	bd08      	pop	{r3, pc}

080067f0 <WM_SelectWindow>:
 80067f0:	4b0d      	ldr	r3, [pc, #52]	@ (8006828 <WM_SelectWindow+0x38>)
 80067f2:	b570      	push	{r4, r5, r6, lr}
 80067f4:	681a      	ldr	r2, [r3, #0]
 80067f6:	4604      	mov	r4, r0
 80067f8:	6c96      	ldr	r6, [r2, #72]	@ 0x48
 80067fa:	461d      	mov	r5, r3
 80067fc:	b908      	cbnz	r0, 8006802 <WM_SelectWindow+0x12>
 80067fe:	4b0b      	ldr	r3, [pc, #44]	@ (800682c <WM_SelectWindow+0x3c>)
 8006800:	681c      	ldr	r4, [r3, #0]
 8006802:	6494      	str	r4, [r2, #72]	@ 0x48
 8006804:	4620      	mov	r0, r4
 8006806:	f7ff ffe9 	bl	80067dc <WM__SelectTopLevelLayer>
 800680a:	f7fc fe9b 	bl	8003544 <LCD_SetClipRectMax>
 800680e:	4620      	mov	r0, r4
 8006810:	f7fb fc14 	bl	800203c <GUI_ALLOC_h2p>
 8006814:	682b      	ldr	r3, [r5, #0]
 8006816:	f9b0 2000 	ldrsh.w	r2, [r0]
 800681a:	64da      	str	r2, [r3, #76]	@ 0x4c
 800681c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8006820:	4630      	mov	r0, r6
 8006822:	651a      	str	r2, [r3, #80]	@ 0x50
 8006824:	bd70      	pop	{r4, r5, r6, pc}
 8006826:	bf00      	nop
 8006828:	20000014 	.word	0x20000014
 800682c:	20002c70 	.word	0x20002c70

08006830 <WM_CreateWindowAsChild>:
 8006830:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006834:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8006838:	4698      	mov	r8, r3
 800683a:	4b4e      	ldr	r3, [pc, #312]	@ (8006974 <WM_CreateWindowAsChild+0x144>)
 800683c:	4605      	mov	r5, r0
 800683e:	460e      	mov	r6, r1
 8006840:	4617      	mov	r7, r2
 8006842:	f8d3 9000 	ldr.w	r9, [r3]
 8006846:	f1ba 0f00 	cmp.w	sl, #0
 800684a:	d128      	bne.n	800689e <WM_CreateWindowAsChild+0x6e>
 800684c:	4b4a      	ldr	r3, [pc, #296]	@ (8006978 <WM_CreateWindowAsChild+0x148>)
 800684e:	881b      	ldrh	r3, [r3, #0]
 8006850:	b353      	cbz	r3, 80068a8 <WM_CreateWindowAsChild+0x78>
 8006852:	4b4a      	ldr	r3, [pc, #296]	@ (800697c <WM_CreateWindowAsChild+0x14c>)
 8006854:	681b      	ldr	r3, [r3, #0]
 8006856:	7c5a      	ldrb	r2, [r3, #17]
 8006858:	4b49      	ldr	r3, [pc, #292]	@ (8006980 <WM_CreateWindowAsChild+0x150>)
 800685a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800685e:	1c5a      	adds	r2, r3, #1
 8006860:	2a01      	cmp	r2, #1
 8006862:	d921      	bls.n	80068a8 <WM_CreateWindowAsChild+0x78>
 8006864:	469a      	mov	sl, r3
 8006866:	4650      	mov	r0, sl
 8006868:	f7fb fbf2 	bl	8002050 <GUI_ALLOC_LockH>
 800686c:	f9b0 1000 	ldrsh.w	r1, [r0]
 8006870:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8006874:	9001      	str	r0, [sp, #4]
 8006876:	440d      	add	r5, r1
 8006878:	4416      	add	r6, r2
 800687a:	b91f      	cbnz	r7, 8006884 <WM_CreateWindowAsChild+0x54>
 800687c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8006880:	1a5f      	subs	r7, r3, r1
 8006882:	3701      	adds	r7, #1
 8006884:	f1b8 0f00 	cmp.w	r8, #0
 8006888:	d105      	bne.n	8006896 <WM_CreateWindowAsChild+0x66>
 800688a:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800688e:	ebc2 0803 	rsb	r8, r2, r3
 8006892:	f108 0801 	add.w	r8, r8, #1
 8006896:	a801      	add	r0, sp, #4
 8006898:	f7fb fbe8 	bl	800206c <GUI_ALLOC_UnlockH>
 800689c:	e004      	b.n	80068a8 <WM_CreateWindowAsChild+0x78>
 800689e:	f1ba 3fff 	cmp.w	sl, #4294967295
 80068a2:	d1e0      	bne.n	8006866 <WM_CreateWindowAsChild+0x36>
 80068a4:	f04f 0a00 	mov.w	sl, #0
 80068a8:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80068aa:	302c      	adds	r0, #44	@ 0x2c
 80068ac:	f7fb fdaa 	bl	8002404 <GUI_ALLOC_AllocZero>
 80068b0:	4604      	mov	r4, r0
 80068b2:	2800      	cmp	r0, #0
 80068b4:	d059      	beq.n	800696a <WM_CreateWindowAsChild+0x13a>
 80068b6:	4a30      	ldr	r2, [pc, #192]	@ (8006978 <WM_CreateWindowAsChild+0x148>)
 80068b8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80068ba:	f10d 0b08 	add.w	fp, sp, #8
 80068be:	ea49 0903 	orr.w	r9, r9, r3
 80068c2:	8813      	ldrh	r3, [r2, #0]
 80068c4:	3301      	adds	r3, #1
 80068c6:	8013      	strh	r3, [r2, #0]
 80068c8:	f7fb fbc2 	bl	8002050 <GUI_ALLOC_LockH>
 80068cc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80068ce:	6a82      	ldr	r2, [r0, #40]	@ 0x28
 80068d0:	6103      	str	r3, [r0, #16]
 80068d2:	4b2c      	ldr	r3, [pc, #176]	@ (8006984 <WM_CreateWindowAsChild+0x154>)
 80068d4:	f84b 0d08 	str.w	r0, [fp, #-8]!
 80068d8:	ea09 0303 	and.w	r3, r9, r3
 80068dc:	8005      	strh	r5, [r0, #0]
 80068de:	8046      	strh	r6, [r0, #2]
 80068e0:	443d      	add	r5, r7
 80068e2:	4446      	add	r6, r8
 80068e4:	4313      	orrs	r3, r2
 80068e6:	3d01      	subs	r5, #1
 80068e8:	3e01      	subs	r6, #1
 80068ea:	6283      	str	r3, [r0, #40]	@ 0x28
 80068ec:	8085      	strh	r5, [r0, #4]
 80068ee:	80c6      	strh	r6, [r0, #6]
 80068f0:	4658      	mov	r0, fp
 80068f2:	f7fb fbbb 	bl	800206c <GUI_ALLOC_UnlockH>
 80068f6:	4b24      	ldr	r3, [pc, #144]	@ (8006988 <WM_CreateWindowAsChild+0x158>)
 80068f8:	6818      	ldr	r0, [r3, #0]
 80068fa:	b148      	cbz	r0, 8006910 <WM_CreateWindowAsChild+0xe0>
 80068fc:	f7fb fb9e 	bl	800203c <GUI_ALLOC_h2p>
 8006900:	4605      	mov	r5, r0
 8006902:	4620      	mov	r0, r4
 8006904:	f7fb fb9a 	bl	800203c <GUI_ALLOC_h2p>
 8006908:	696b      	ldr	r3, [r5, #20]
 800690a:	6143      	str	r3, [r0, #20]
 800690c:	616c      	str	r4, [r5, #20]
 800690e:	e000      	b.n	8006912 <WM_CreateWindowAsChild+0xe2>
 8006910:	601c      	str	r4, [r3, #0]
 8006912:	4651      	mov	r1, sl
 8006914:	4620      	mov	r0, r4
 8006916:	f7ff fcf5 	bl	8006304 <WM__InsertWindowIntoList>
 800691a:	f019 0f20 	tst.w	r9, #32
 800691e:	d002      	beq.n	8006926 <WM_CreateWindowAsChild+0xf6>
 8006920:	4620      	mov	r0, r4
 8006922:	f7ff ff65 	bl	80067f0 <WM_SelectWindow>
 8006926:	f019 0f01 	tst.w	r9, #1
 800692a:	bf1f      	itttt	ne
 800692c:	4a17      	ldrne	r2, [pc, #92]	@ (800698c <WM_CreateWindowAsChild+0x15c>)
 800692e:	6813      	ldrne	r3, [r2, #0]
 8006930:	3301      	addne	r3, #1
 8006932:	6013      	strne	r3, [r2, #0]
 8006934:	f019 0f40 	tst.w	r9, #64	@ 0x40
 8006938:	d002      	beq.n	8006940 <WM_CreateWindowAsChild+0x110>
 800693a:	4620      	mov	r0, r4
 800693c:	f000 fcec 	bl	8007318 <WM_BringToBottom>
 8006940:	f019 0f02 	tst.w	r9, #2
 8006944:	d00d      	beq.n	8006962 <WM_CreateWindowAsChild+0x132>
 8006946:	4620      	mov	r0, r4
 8006948:	f7fb fb82 	bl	8002050 <GUI_ALLOC_LockH>
 800694c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800694e:	9000      	str	r0, [sp, #0]
 8006950:	f043 0302 	orr.w	r3, r3, #2
 8006954:	6283      	str	r3, [r0, #40]	@ 0x28
 8006956:	4658      	mov	r0, fp
 8006958:	f7fb fb88 	bl	800206c <GUI_ALLOC_UnlockH>
 800695c:	4620      	mov	r0, r4
 800695e:	f7ff ff3a 	bl	80067d6 <WM_InvalidateWindow>
 8006962:	2101      	movs	r1, #1
 8006964:	4620      	mov	r0, r4
 8006966:	f7ff fde2 	bl	800652e <WM__SendMsgNoData>
 800696a:	4620      	mov	r0, r4
 800696c:	b003      	add	sp, #12
 800696e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006972:	bf00      	nop
 8006974:	20002c84 	.word	0x20002c84
 8006978:	20002c4c 	.word	0x20002c4c
 800697c:	20000014 	.word	0x20000014
 8006980:	20002c54 	.word	0x20002c54
 8006984:	003f3f9f 	.word	0x003f3f9f
 8006988:	20002c70 	.word	0x20002c70
 800698c:	20002ca4 	.word	0x20002ca4

08006990 <WM_DeleteWindow>:
 8006990:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006992:	4604      	mov	r4, r0
 8006994:	2800      	cmp	r0, #0
 8006996:	d071      	beq.n	8006a7c <WM_DeleteWindow+0xec>
 8006998:	f7ff fd7c 	bl	8006494 <WM__IsWindow>
 800699c:	2800      	cmp	r0, #0
 800699e:	d06d      	beq.n	8006a7c <WM_DeleteWindow+0xec>
 80069a0:	4620      	mov	r0, r4
 80069a2:	f7ff fddb 	bl	800655c <WM__GetTopLevelLayer>
 80069a6:	210b      	movs	r1, #11
 80069a8:	4605      	mov	r5, r0
 80069aa:	4620      	mov	r0, r4
 80069ac:	f7ff fdbf 	bl	800652e <WM__SendMsgNoData>
 80069b0:	4620      	mov	r0, r4
 80069b2:	f000 ff16 	bl	80077e2 <WM__DeleteAssocTimer>
 80069b6:	4620      	mov	r0, r4
 80069b8:	f7fb fb4a 	bl	8002050 <GUI_ALLOC_LockH>
 80069bc:	9001      	str	r0, [sp, #4]
 80069be:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 80069c0:	b108      	cbz	r0, 80069c6 <WM_DeleteWindow+0x36>
 80069c2:	f003 f975 	bl	8009cb0 <GUI_MEMDEV_Delete>
 80069c6:	4b2e      	ldr	r3, [pc, #184]	@ (8006a80 <WM_DeleteWindow+0xf0>)
 80069c8:	2100      	movs	r1, #0
 80069ca:	6099      	str	r1, [r3, #8]
 80069cc:	4b2d      	ldr	r3, [pc, #180]	@ (8006a84 <WM_DeleteWindow+0xf4>)
 80069ce:	4a2e      	ldr	r2, [pc, #184]	@ (8006a88 <WM_DeleteWindow+0xf8>)
 80069d0:	681b      	ldr	r3, [r3, #0]
 80069d2:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80069d6:	4284      	cmp	r4, r0
 80069d8:	bf08      	it	eq
 80069da:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 80069de:	4a2b      	ldr	r2, [pc, #172]	@ (8006a8c <WM_DeleteWindow+0xfc>)
 80069e0:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 80069e4:	428c      	cmp	r4, r1
 80069e6:	bf04      	itt	eq
 80069e8:	2100      	moveq	r1, #0
 80069ea:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 80069ee:	4b28      	ldr	r3, [pc, #160]	@ (8006a90 <WM_DeleteWindow+0x100>)
 80069f0:	2200      	movs	r2, #0
 80069f2:	681b      	ldr	r3, [r3, #0]
 80069f4:	b12b      	cbz	r3, 8006a02 <WM_DeleteWindow+0x72>
 80069f6:	6859      	ldr	r1, [r3, #4]
 80069f8:	428c      	cmp	r4, r1
 80069fa:	bf08      	it	eq
 80069fc:	605a      	streq	r2, [r3, #4]
 80069fe:	681b      	ldr	r3, [r3, #0]
 8006a00:	e7f8      	b.n	80069f4 <WM_DeleteWindow+0x64>
 8006a02:	2107      	movs	r1, #7
 8006a04:	4620      	mov	r0, r4
 8006a06:	f000 fd98 	bl	800753a <WM_NotifyParent>
 8006a0a:	9e01      	ldr	r6, [sp, #4]
 8006a0c:	69f0      	ldr	r0, [r6, #28]
 8006a0e:	f7ff ffbf 	bl	8006990 <WM_DeleteWindow>
 8006a12:	69f3      	ldr	r3, [r6, #28]
 8006a14:	2b00      	cmp	r3, #0
 8006a16:	d1f9      	bne.n	8006a0c <WM_DeleteWindow+0x7c>
 8006a18:	4620      	mov	r0, r4
 8006a1a:	f7ff fe8b 	bl	8006734 <WM__DetachWindow>
 8006a1e:	4b1d      	ldr	r3, [pc, #116]	@ (8006a94 <WM_DeleteWindow+0x104>)
 8006a20:	6818      	ldr	r0, [r3, #0]
 8006a22:	b150      	cbz	r0, 8006a3a <WM_DeleteWindow+0xaa>
 8006a24:	f7fb fb0a 	bl	800203c <GUI_ALLOC_h2p>
 8006a28:	4606      	mov	r6, r0
 8006a2a:	6940      	ldr	r0, [r0, #20]
 8006a2c:	4284      	cmp	r4, r0
 8006a2e:	d1f8      	bne.n	8006a22 <WM_DeleteWindow+0x92>
 8006a30:	4620      	mov	r0, r4
 8006a32:	f7fb fb03 	bl	800203c <GUI_ALLOC_h2p>
 8006a36:	6943      	ldr	r3, [r0, #20]
 8006a38:	6173      	str	r3, [r6, #20]
 8006a3a:	9b01      	ldr	r3, [sp, #4]
 8006a3c:	a801      	add	r0, sp, #4
 8006a3e:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8006a40:	07d1      	lsls	r1, r2, #31
 8006a42:	bf41      	itttt	mi
 8006a44:	4914      	ldrmi	r1, [pc, #80]	@ (8006a98 <WM_DeleteWindow+0x108>)
 8006a46:	680b      	ldrmi	r3, [r1, #0]
 8006a48:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8006a4c:	600b      	strmi	r3, [r1, #0]
 8006a4e:	0693      	lsls	r3, r2, #26
 8006a50:	bf41      	itttt	mi
 8006a52:	4a12      	ldrmi	r2, [pc, #72]	@ (8006a9c <WM_DeleteWindow+0x10c>)
 8006a54:	8813      	ldrhmi	r3, [r2, #0]
 8006a56:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8006a5a:	8013      	strhmi	r3, [r2, #0]
 8006a5c:	f7fb fb06 	bl	800206c <GUI_ALLOC_UnlockH>
 8006a60:	4a0f      	ldr	r2, [pc, #60]	@ (8006aa0 <WM_DeleteWindow+0x110>)
 8006a62:	4620      	mov	r0, r4
 8006a64:	8813      	ldrh	r3, [r2, #0]
 8006a66:	3b01      	subs	r3, #1
 8006a68:	8013      	strh	r3, [r2, #0]
 8006a6a:	f7fb fb2b 	bl	80020c4 <GUI_ALLOC_Free>
 8006a6e:	2d00      	cmp	r5, #0
 8006a70:	db04      	blt.n	8006a7c <WM_DeleteWindow+0xec>
 8006a72:	4b0c      	ldr	r3, [pc, #48]	@ (8006aa4 <WM_DeleteWindow+0x114>)
 8006a74:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8006a78:	f7ff feba 	bl	80067f0 <WM_SelectWindow>
 8006a7c:	b002      	add	sp, #8
 8006a7e:	bd70      	pop	{r4, r5, r6, pc}
 8006a80:	20000238 	.word	0x20000238
 8006a84:	20002c74 	.word	0x20002c74
 8006a88:	20002c64 	.word	0x20002c64
 8006a8c:	20002c98 	.word	0x20002c98
 8006a90:	20002c90 	.word	0x20002c90
 8006a94:	20002c70 	.word	0x20002c70
 8006a98:	20002ca4 	.word	0x20002ca4
 8006a9c:	20002c6c 	.word	0x20002c6c
 8006aa0:	20002c4c 	.word	0x20002c4c
 8006aa4:	20002c54 	.word	0x20002c54

08006aa8 <_Exec1Input>:
 8006aa8:	4b1b      	ldr	r3, [pc, #108]	@ (8006b18 <_Exec1Input+0x70>)
 8006aaa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006aac:	685a      	ldr	r2, [r3, #4]
 8006aae:	461d      	mov	r5, r3
 8006ab0:	b1ca      	cbz	r2, 8006ae6 <_Exec1Input+0x3e>
 8006ab2:	4b1a      	ldr	r3, [pc, #104]	@ (8006b1c <_Exec1Input+0x74>)
 8006ab4:	681c      	ldr	r4, [r3, #0]
 8006ab6:	b1ac      	cbz	r4, 8006ae4 <_Exec1Input+0x3c>
 8006ab8:	4620      	mov	r0, r4
 8006aba:	f7fb fac9 	bl	8002050 <GUI_ALLOC_LockH>
 8006abe:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8006ac0:	9001      	str	r0, [sp, #4]
 8006ac2:	f413 4f00 	tst.w	r3, #32768	@ 0x8000
 8006ac6:	6946      	ldr	r6, [r0, #20]
 8006ac8:	d007      	beq.n	8006ada <_Exec1Input+0x32>
 8006aca:	a801      	add	r0, sp, #4
 8006acc:	f7fb face 	bl	800206c <GUI_ALLOC_UnlockH>
 8006ad0:	4620      	mov	r0, r4
 8006ad2:	f7ff ff5d 	bl	8006990 <WM_DeleteWindow>
 8006ad6:	4634      	mov	r4, r6
 8006ad8:	e7ed      	b.n	8006ab6 <_Exec1Input+0xe>
 8006ada:	a801      	add	r0, sp, #4
 8006adc:	4634      	mov	r4, r6
 8006ade:	f7fb fac5 	bl	800206c <GUI_ALLOC_UnlockH>
 8006ae2:	e7e8      	b.n	8006ab6 <_Exec1Input+0xe>
 8006ae4:	606c      	str	r4, [r5, #4]
 8006ae6:	4b0e      	ldr	r3, [pc, #56]	@ (8006b20 <_Exec1Input+0x78>)
 8006ae8:	681b      	ldr	r3, [r3, #0]
 8006aea:	b103      	cbz	r3, 8006aee <_Exec1Input+0x46>
 8006aec:	4798      	blx	r3
 8006aee:	4b0d      	ldr	r3, [pc, #52]	@ (8006b24 <_Exec1Input+0x7c>)
 8006af0:	681b      	ldr	r3, [r3, #0]
 8006af2:	b953      	cbnz	r3, 8006b0a <_Exec1Input+0x62>
 8006af4:	4b0c      	ldr	r3, [pc, #48]	@ (8006b28 <_Exec1Input+0x80>)
 8006af6:	681b      	ldr	r3, [r3, #0]
 8006af8:	f893 0054 	ldrb.w	r0, [r3, #84]	@ 0x54
 8006afc:	b148      	cbz	r0, 8006b12 <_Exec1Input+0x6a>
 8006afe:	f7fc f975 	bl	8002dec <GUI_PollKeyMsg>
 8006b02:	3000      	adds	r0, #0
 8006b04:	bf18      	it	ne
 8006b06:	2001      	movne	r0, #1
 8006b08:	e003      	b.n	8006b12 <_Exec1Input+0x6a>
 8006b0a:	4798      	blx	r3
 8006b0c:	2800      	cmp	r0, #0
 8006b0e:	d0f1      	beq.n	8006af4 <_Exec1Input+0x4c>
 8006b10:	2001      	movs	r0, #1
 8006b12:	b002      	add	sp, #8
 8006b14:	bd70      	pop	{r4, r5, r6, pc}
 8006b16:	bf00      	nop
 8006b18:	20000238 	.word	0x20000238
 8006b1c:	20002c70 	.word	0x20002c70
 8006b20:	20002c5c 	.word	0x20002c5c
 8006b24:	20002c44 	.word	0x20002c44
 8006b28:	20000014 	.word	0x20000014

08006b2c <WM__GetNextIVR>:
 8006b2c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8006b30:	4f5d      	ldr	r7, [pc, #372]	@ (8006ca8 <WM__GetNextIVR+0x17c>)
 8006b32:	683b      	ldr	r3, [r7, #0]
 8006b34:	f893 0054 	ldrb.w	r0, [r3, #84]	@ 0x54
 8006b38:	2800      	cmp	r0, #0
 8006b3a:	f000 80b1 	beq.w	8006ca0 <WM__GetNextIVR+0x174>
 8006b3e:	4a5b      	ldr	r2, [pc, #364]	@ (8006cac <WM__GetNextIVR+0x180>)
 8006b40:	6a13      	ldr	r3, [r2, #32]
 8006b42:	4614      	mov	r4, r2
 8006b44:	2b01      	cmp	r3, #1
 8006b46:	dd03      	ble.n	8006b50 <WM__GetNextIVR+0x24>
 8006b48:	3b01      	subs	r3, #1
 8006b4a:	6213      	str	r3, [r2, #32]
 8006b4c:	2000      	movs	r0, #0
 8006b4e:	e0a7      	b.n	8006ca0 <WM__GetNextIVR+0x174>
 8006b50:	69d3      	ldr	r3, [r2, #28]
 8006b52:	ad02      	add	r5, sp, #8
 8006b54:	3301      	adds	r3, #1
 8006b56:	f102 0614 	add.w	r6, r2, #20
 8006b5a:	e896 0003 	ldmia.w	r6, {r0, r1}
 8006b5e:	61d3      	str	r3, [r2, #28]
 8006b60:	e885 0003 	stmia.w	r5, {r0, r1}
 8006b64:	b923      	cbnz	r3, 8006b70 <WM__GetNextIVR+0x44>
 8006b66:	8993      	ldrh	r3, [r2, #12]
 8006b68:	f8ad 3008 	strh.w	r3, [sp, #8]
 8006b6c:	89d3      	ldrh	r3, [r2, #14]
 8006b6e:	e010      	b.n	8006b92 <WM__GetNextIVR+0x66>
 8006b70:	8b13      	ldrh	r3, [r2, #24]
 8006b72:	8ad2      	ldrh	r2, [r2, #22]
 8006b74:	3301      	adds	r3, #1
 8006b76:	f8ad 200a 	strh.w	r2, [sp, #10]
 8006b7a:	f9b4 2010 	ldrsh.w	r2, [r4, #16]
 8006b7e:	b21b      	sxth	r3, r3
 8006b80:	429a      	cmp	r2, r3
 8006b82:	f8ad 3008 	strh.w	r3, [sp, #8]
 8006b86:	da06      	bge.n	8006b96 <WM__GetNextIVR+0x6a>
 8006b88:	89a3      	ldrh	r3, [r4, #12]
 8006b8a:	f8ad 3008 	strh.w	r3, [sp, #8]
 8006b8e:	8b63      	ldrh	r3, [r4, #26]
 8006b90:	3301      	adds	r3, #1
 8006b92:	f8ad 300a 	strh.w	r3, [sp, #10]
 8006b96:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8006b9a:	f9b4 3012 	ldrsh.w	r3, [r4, #18]
 8006b9e:	f8df 810c 	ldr.w	r8, [pc, #268]	@ 8006cac <WM__GetNextIVR+0x180>
 8006ba2:	429a      	cmp	r2, r3
 8006ba4:	dd04      	ble.n	8006bb0 <WM__GetNextIVR+0x84>
 8006ba6:	6a23      	ldr	r3, [r4, #32]
 8006ba8:	2000      	movs	r0, #0
 8006baa:	3b01      	subs	r3, #1
 8006bac:	6223      	str	r3, [r4, #32]
 8006bae:	e077      	b.n	8006ca0 <WM__GetNextIVR+0x174>
 8006bb0:	683b      	ldr	r3, [r7, #0]
 8006bb2:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 8006bb4:	f7fb fa4c 	bl	8002050 <GUI_ALLOC_LockH>
 8006bb8:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8006bbc:	f9b8 300c 	ldrsh.w	r3, [r8, #12]
 8006bc0:	9001      	str	r0, [sp, #4]
 8006bc2:	429a      	cmp	r2, r3
 8006bc4:	d11c      	bne.n	8006c00 <WM__GetNextIVR+0xd4>
 8006bc6:	f8b8 3012 	ldrh.w	r3, [r8, #18]
 8006bca:	f8ad 300e 	strh.w	r3, [sp, #14]
 8006bce:	f8b8 3010 	ldrh.w	r3, [r8, #16]
 8006bd2:	f8ad 300c 	strh.w	r3, [sp, #12]
 8006bd6:	4b34      	ldr	r3, [pc, #208]	@ (8006ca8 <WM__GetNextIVR+0x17c>)
 8006bd8:	681b      	ldr	r3, [r3, #0]
 8006bda:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8006bdc:	b15a      	cbz	r2, 8006bf6 <WM__GetNextIVR+0xca>
 8006bde:	4610      	mov	r0, r2
 8006be0:	f7fb fa2c 	bl	800203c <GUI_ALLOC_h2p>
 8006be4:	4680      	mov	r8, r0
 8006be6:	2200      	movs	r2, #0
 8006be8:	4629      	mov	r1, r5
 8006bea:	6a00      	ldr	r0, [r0, #32]
 8006bec:	f7ff f97a 	bl	8005ee4 <_Findy1>
 8006bf0:	f8d8 2018 	ldr.w	r2, [r8, #24]
 8006bf4:	e7f2      	b.n	8006bdc <WM__GetNextIVR+0xb0>
 8006bf6:	9b01      	ldr	r3, [sp, #4]
 8006bf8:	4629      	mov	r1, r5
 8006bfa:	69d8      	ldr	r0, [r3, #28]
 8006bfc:	f7ff f972 	bl	8005ee4 <_Findy1>
 8006c00:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8006c04:	f8ad 300c 	strh.w	r3, [sp, #12]
 8006c08:	683b      	ldr	r3, [r7, #0]
 8006c0a:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8006c0c:	b16a      	cbz	r2, 8006c2a <WM__GetNextIVR+0xfe>
 8006c0e:	4610      	mov	r0, r2
 8006c10:	f7fb fa14 	bl	800203c <GUI_ALLOC_h2p>
 8006c14:	2200      	movs	r2, #0
 8006c16:	4680      	mov	r8, r0
 8006c18:	4629      	mov	r1, r5
 8006c1a:	6a00      	ldr	r0, [r0, #32]
 8006c1c:	f7ff f9b5 	bl	8005f8a <_Findx0>
 8006c20:	2800      	cmp	r0, #0
 8006c22:	d1ed      	bne.n	8006c00 <WM__GetNextIVR+0xd4>
 8006c24:	f8d8 2018 	ldr.w	r2, [r8, #24]
 8006c28:	e7f0      	b.n	8006c0c <WM__GetNextIVR+0xe0>
 8006c2a:	9b01      	ldr	r3, [sp, #4]
 8006c2c:	4629      	mov	r1, r5
 8006c2e:	69d8      	ldr	r0, [r3, #28]
 8006c30:	f7ff f9ab 	bl	8005f8a <_Findx0>
 8006c34:	2800      	cmp	r0, #0
 8006c36:	d1e3      	bne.n	8006c00 <WM__GetNextIVR+0xd4>
 8006c38:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8006c3c:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8006c40:	f8ad 300c 	strh.w	r3, [sp, #12]
 8006c44:	429a      	cmp	r2, r3
 8006c46:	dd07      	ble.n	8006c58 <WM__GetNextIVR+0x12c>
 8006c48:	e895 0003 	ldmia.w	r5, {r0, r1}
 8006c4c:	e886 0003 	stmia.w	r6, {r0, r1}
 8006c50:	a801      	add	r0, sp, #4
 8006c52:	f7fb fa0b 	bl	800206c <GUI_ALLOC_UnlockH>
 8006c56:	e797      	b.n	8006b88 <WM__GetNextIVR+0x5c>
 8006c58:	683b      	ldr	r3, [r7, #0]
 8006c5a:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8006c5c:	b152      	cbz	r2, 8006c74 <WM__GetNextIVR+0x148>
 8006c5e:	4610      	mov	r0, r2
 8006c60:	f7fb f9ec 	bl	800203c <GUI_ALLOC_h2p>
 8006c64:	4607      	mov	r7, r0
 8006c66:	2200      	movs	r2, #0
 8006c68:	4629      	mov	r1, r5
 8006c6a:	6a00      	ldr	r0, [r0, #32]
 8006c6c:	f7ff f9d0 	bl	8006010 <_Findx1>
 8006c70:	69ba      	ldr	r2, [r7, #24]
 8006c72:	e7f3      	b.n	8006c5c <WM__GetNextIVR+0x130>
 8006c74:	af04      	add	r7, sp, #16
 8006c76:	f857 3d0c 	ldr.w	r3, [r7, #-12]!
 8006c7a:	4629      	mov	r1, r5
 8006c7c:	69d8      	ldr	r0, [r3, #28]
 8006c7e:	f7ff f9c7 	bl	8006010 <_Findx1>
 8006c82:	4638      	mov	r0, r7
 8006c84:	f7fb f9f2 	bl	800206c <GUI_ALLOC_UnlockH>
 8006c88:	f644 6320 	movw	r3, #20000	@ 0x4e20
 8006c8c:	69e2      	ldr	r2, [r4, #28]
 8006c8e:	429a      	cmp	r2, r3
 8006c90:	dc89      	bgt.n	8006ba6 <WM__GetNextIVR+0x7a>
 8006c92:	e895 0003 	ldmia.w	r5, {r0, r1}
 8006c96:	e886 0003 	stmia.w	r6, {r0, r1}
 8006c9a:	f7ff fbd7 	bl	800644c <WM__ActivateClipRect>
 8006c9e:	2001      	movs	r0, #1
 8006ca0:	b004      	add	sp, #16
 8006ca2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006ca6:	bf00      	nop
 8006ca8:	20000014 	.word	0x20000014
 8006cac:	20000238 	.word	0x20000238

08006cb0 <WM__InitIVRSearch>:
 8006cb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006cb4:	4e39      	ldr	r6, [pc, #228]	@ (8006d9c <WM__InitIVRSearch+0xec>)
 8006cb6:	b086      	sub	sp, #24
 8006cb8:	6832      	ldr	r2, [r6, #0]
 8006cba:	4680      	mov	r8, r0
 8006cbc:	f892 3054 	ldrb.w	r3, [r2, #84]	@ 0x54
 8006cc0:	b913      	cbnz	r3, 8006cc8 <WM__InitIVRSearch+0x18>
 8006cc2:	f7ff fbc3 	bl	800644c <WM__ActivateClipRect>
 8006cc6:	e064      	b.n	8006d92 <WM__InitIVRSearch+0xe2>
 8006cc8:	4f35      	ldr	r7, [pc, #212]	@ (8006da0 <WM__InitIVRSearch+0xf0>)
 8006cca:	6a3b      	ldr	r3, [r7, #32]
 8006ccc:	463d      	mov	r5, r7
 8006cce:	3301      	adds	r3, #1
 8006cd0:	2b01      	cmp	r3, #1
 8006cd2:	623b      	str	r3, [r7, #32]
 8006cd4:	dc5d      	bgt.n	8006d92 <WM__InitIVRSearch+0xe2>
 8006cd6:	6c90      	ldr	r0, [r2, #72]	@ 0x48
 8006cd8:	f7fb f9ba 	bl	8002050 <GUI_ALLOC_LockH>
 8006cdc:	f04f 33ff 	mov.w	r3, #4294967295
 8006ce0:	61fb      	str	r3, [r7, #28]
 8006ce2:	4b30      	ldr	r3, [pc, #192]	@ (8006da4 <WM__InitIVRSearch+0xf4>)
 8006ce4:	9000      	str	r0, [sp, #0]
 8006ce6:	781b      	ldrb	r3, [r3, #0]
 8006ce8:	b113      	cbz	r3, 8006cf0 <WM__InitIVRSearch+0x40>
 8006cea:	ab02      	add	r3, sp, #8
 8006cec:	3008      	adds	r0, #8
 8006cee:	e004      	b.n	8006cfa <WM__InitIVRSearch+0x4a>
 8006cf0:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8006cf2:	f013 0402 	ands.w	r4, r3, #2
 8006cf6:	d00c      	beq.n	8006d12 <WM__InitIVRSearch+0x62>
 8006cf8:	ab02      	add	r3, sp, #8
 8006cfa:	c803      	ldmia	r0, {r0, r1}
 8006cfc:	ac02      	add	r4, sp, #8
 8006cfe:	e883 0003 	stmia.w	r3, {r0, r1}
 8006d02:	f1b8 0f00 	cmp.w	r8, #0
 8006d06:	d00c      	beq.n	8006d22 <WM__InitIVRSearch+0x72>
 8006d08:	4641      	mov	r1, r8
 8006d0a:	4620      	mov	r0, r4
 8006d0c:	f7fc f8cc 	bl	8002ea8 <GUI__IntersectRect>
 8006d10:	e007      	b.n	8006d22 <WM__InitIVRSearch+0x72>
 8006d12:	6a3b      	ldr	r3, [r7, #32]
 8006d14:	4668      	mov	r0, sp
 8006d16:	3b01      	subs	r3, #1
 8006d18:	623b      	str	r3, [r7, #32]
 8006d1a:	f7fb f9a7 	bl	800206c <GUI_ALLOC_UnlockH>
 8006d1e:	4620      	mov	r0, r4
 8006d20:	e038      	b.n	8006d94 <WM__InitIVRSearch+0xe4>
 8006d22:	6833      	ldr	r3, [r6, #0]
 8006d24:	4f20      	ldr	r7, [pc, #128]	@ (8006da8 <WM__InitIVRSearch+0xf8>)
 8006d26:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8006d28:	b1c2      	cbz	r2, 8006d5c <WM__InitIVRSearch+0xac>
 8006d2a:	9b00      	ldr	r3, [sp, #0]
 8006d2c:	6810      	ldr	r0, [r2, #0]
 8006d2e:	6851      	ldr	r1, [r2, #4]
 8006d30:	9301      	str	r3, [sp, #4]
 8006d32:	ab04      	add	r3, sp, #16
 8006d34:	c303      	stmia	r3!, {r0, r1}
 8006d36:	683b      	ldr	r3, [r7, #0]
 8006d38:	b133      	cbz	r3, 8006d48 <WM__InitIVRSearch+0x98>
 8006d3a:	a801      	add	r0, sp, #4
 8006d3c:	f7fb f996 	bl	800206c <GUI_ALLOC_UnlockH>
 8006d40:	6838      	ldr	r0, [r7, #0]
 8006d42:	f7fb f985 	bl	8002050 <GUI_ALLOC_LockH>
 8006d46:	9001      	str	r0, [sp, #4]
 8006d48:	a904      	add	r1, sp, #16
 8006d4a:	9801      	ldr	r0, [sp, #4]
 8006d4c:	f7ff fb4e 	bl	80063ec <WM__Client2Screen>
 8006d50:	4620      	mov	r0, r4
 8006d52:	a904      	add	r1, sp, #16
 8006d54:	f7fc f8a8 	bl	8002ea8 <GUI__IntersectRect>
 8006d58:	a801      	add	r0, sp, #4
 8006d5a:	e000      	b.n	8006d5e <WM__InitIVRSearch+0xae>
 8006d5c:	4668      	mov	r0, sp
 8006d5e:	f7fb f985 	bl	800206c <GUI_ALLOC_UnlockH>
 8006d62:	6839      	ldr	r1, [r7, #0]
 8006d64:	b119      	cbz	r1, 8006d6e <WM__InitIVRSearch+0xbe>
 8006d66:	4620      	mov	r0, r4
 8006d68:	f7ff faa0 	bl	80062ac <WM__ClipAtParentBorders>
 8006d6c:	b128      	cbz	r0, 8006d7a <WM__InitIVRSearch+0xca>
 8006d6e:	6833      	ldr	r3, [r6, #0]
 8006d70:	4620      	mov	r0, r4
 8006d72:	6c99      	ldr	r1, [r3, #72]	@ 0x48
 8006d74:	f7ff fa9a 	bl	80062ac <WM__ClipAtParentBorders>
 8006d78:	b918      	cbnz	r0, 8006d82 <WM__InitIVRSearch+0xd2>
 8006d7a:	6a2b      	ldr	r3, [r5, #32]
 8006d7c:	3b01      	subs	r3, #1
 8006d7e:	622b      	str	r3, [r5, #32]
 8006d80:	e008      	b.n	8006d94 <WM__InitIVRSearch+0xe4>
 8006d82:	4b0a      	ldr	r3, [pc, #40]	@ (8006dac <WM__InitIVRSearch+0xfc>)
 8006d84:	e894 0003 	ldmia.w	r4, {r0, r1}
 8006d88:	e883 0003 	stmia.w	r3, {r0, r1}
 8006d8c:	f7ff fece 	bl	8006b2c <WM__GetNextIVR>
 8006d90:	e000      	b.n	8006d94 <WM__InitIVRSearch+0xe4>
 8006d92:	2001      	movs	r0, #1
 8006d94:	b006      	add	sp, #24
 8006d96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006d9a:	bf00      	nop
 8006d9c:	20000014 	.word	0x20000014
 8006da0:	20000238 	.word	0x20000238
 8006da4:	20002c80 	.word	0x20002c80
 8006da8:	20002c50 	.word	0x20002c50
 8006dac:	20000244 	.word	0x20000244

08006db0 <WM_SetDefault>:
 8006db0:	b508      	push	{r3, lr}
 8006db2:	f7fb fd25 	bl	8002800 <GL_SetDefault>
 8006db6:	4b02      	ldr	r3, [pc, #8]	@ (8006dc0 <WM_SetDefault+0x10>)
 8006db8:	2200      	movs	r2, #0
 8006dba:	681b      	ldr	r3, [r3, #0]
 8006dbc:	645a      	str	r2, [r3, #68]	@ 0x44
 8006dbe:	bd08      	pop	{r3, pc}
 8006dc0:	20000014 	.word	0x20000014

08006dc4 <WM__Paint1>:
 8006dc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006dc6:	b089      	sub	sp, #36	@ 0x24
 8006dc8:	4604      	mov	r4, r0
 8006dca:	f7fb f941 	bl	8002050 <GUI_ALLOC_LockH>
 8006dce:	ae02      	add	r6, sp, #8
 8006dd0:	6907      	ldr	r7, [r0, #16]
 8006dd2:	6a85      	ldr	r5, [r0, #40]	@ 0x28
 8006dd4:	9001      	str	r0, [sp, #4]
 8006dd6:	3008      	adds	r0, #8
 8006dd8:	c803      	ldmia	r0, {r0, r1}
 8006dda:	e886 0003 	stmia.w	r6, {r0, r1}
 8006dde:	a801      	add	r0, sp, #4
 8006de0:	f7fb f944 	bl	800206c <GUI_ALLOC_UnlockH>
 8006de4:	2f00      	cmp	r7, #0
 8006de6:	d032      	beq.n	8006e4e <WM__Paint1+0x8a>
 8006de8:	07ab      	lsls	r3, r5, #30
 8006dea:	d530      	bpl.n	8006e4e <WM__Paint1+0x8a>
 8006dec:	212e      	movs	r1, #46	@ 0x2e
 8006dee:	4620      	mov	r0, r4
 8006df0:	f000 fb93 	bl	800751a <WM_SendMessageNoPara>
 8006df4:	4b17      	ldr	r3, [pc, #92]	@ (8006e54 <WM__Paint1+0x90>)
 8006df6:	f415 5f80 	tst.w	r5, #4096	@ 0x1000
 8006dfa:	781a      	ldrb	r2, [r3, #0]
 8006dfc:	461d      	mov	r5, r3
 8006dfe:	f102 0201 	add.w	r2, r2, #1
 8006e02:	701a      	strb	r2, [r3, #0]
 8006e04:	d00a      	beq.n	8006e1c <WM__Paint1+0x58>
 8006e06:	230f      	movs	r3, #15
 8006e08:	9405      	str	r4, [sp, #20]
 8006e0a:	9304      	str	r3, [sp, #16]
 8006e0c:	9607      	str	r6, [sp, #28]
 8006e0e:	f7ff ffcf 	bl	8006db0 <WM_SetDefault>
 8006e12:	a904      	add	r1, sp, #16
 8006e14:	4620      	mov	r0, r4
 8006e16:	f000 fd83 	bl	8007920 <WM__SendMessage>
 8006e1a:	e011      	b.n	8006e40 <WM__Paint1+0x7c>
 8006e1c:	4630      	mov	r0, r6
 8006e1e:	f7ff ff47 	bl	8006cb0 <WM__InitIVRSearch>
 8006e22:	b168      	cbz	r0, 8006e40 <WM__Paint1+0x7c>
 8006e24:	270f      	movs	r7, #15
 8006e26:	9405      	str	r4, [sp, #20]
 8006e28:	9704      	str	r7, [sp, #16]
 8006e2a:	9607      	str	r6, [sp, #28]
 8006e2c:	f7ff ffc0 	bl	8006db0 <WM_SetDefault>
 8006e30:	a904      	add	r1, sp, #16
 8006e32:	4620      	mov	r0, r4
 8006e34:	f000 fd74 	bl	8007920 <WM__SendMessage>
 8006e38:	f7ff fe78 	bl	8006b2c <WM__GetNextIVR>
 8006e3c:	2800      	cmp	r0, #0
 8006e3e:	d1f2      	bne.n	8006e26 <WM__Paint1+0x62>
 8006e40:	782b      	ldrb	r3, [r5, #0]
 8006e42:	212f      	movs	r1, #47	@ 0x2f
 8006e44:	3b01      	subs	r3, #1
 8006e46:	4620      	mov	r0, r4
 8006e48:	702b      	strb	r3, [r5, #0]
 8006e4a:	f000 fb66 	bl	800751a <WM_SendMessageNoPara>
 8006e4e:	b009      	add	sp, #36	@ 0x24
 8006e50:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006e52:	bf00      	nop
 8006e54:	20002c80 	.word	0x20002c80

08006e58 <WM__Paint>:
 8006e58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006e5c:	b088      	sub	sp, #32
 8006e5e:	9003      	str	r0, [sp, #12]
 8006e60:	f7fb f8f6 	bl	8002050 <GUI_ALLOC_LockH>
 8006e64:	4603      	mov	r3, r0
 8006e66:	f244 0420 	movw	r4, #16416	@ 0x4020
 8006e6a:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
 8006e6c:	f100 0208 	add.w	r2, r0, #8
 8006e70:	ae06      	add	r6, sp, #24
 8006e72:	9005      	str	r0, [sp, #20]
 8006e74:	402c      	ands	r4, r5
 8006e76:	e892 0003 	ldmia.w	r2, {r0, r1}
 8006e7a:	e886 0003 	stmia.w	r6, {r0, r1}
 8006e7e:	a805      	add	r0, sp, #20
 8006e80:	699f      	ldr	r7, [r3, #24]
 8006e82:	f8d3 8010 	ldr.w	r8, [r3, #16]
 8006e86:	f7fb f8f1 	bl	800206c <GUI_ALLOC_UnlockH>
 8006e8a:	2c00      	cmp	r4, #0
 8006e8c:	d035      	beq.n	8006efa <WM__Paint+0xa2>
 8006e8e:	f1b8 0f00 	cmp.w	r8, #0
 8006e92:	d017      	beq.n	8006ec4 <WM__Paint+0x6c>
 8006e94:	9903      	ldr	r1, [sp, #12]
 8006e96:	4630      	mov	r0, r6
 8006e98:	f7ff fa08 	bl	80062ac <WM__ClipAtParentBorders>
 8006e9c:	b190      	cbz	r0, 8006ec4 <WM__Paint+0x6c>
 8006e9e:	9803      	ldr	r0, [sp, #12]
 8006ea0:	f7ff fca6 	bl	80067f0 <WM_SelectWindow>
 8006ea4:	0769      	lsls	r1, r5, #29
 8006ea6:	d50f      	bpl.n	8006ec8 <WM__Paint+0x70>
 8006ea8:	b127      	cbz	r7, 8006eb4 <WM__Paint+0x5c>
 8006eaa:	f005 0501 	and.w	r5, r5, #1
 8006eae:	f085 0501 	eor.w	r5, r5, #1
 8006eb2:	e000      	b.n	8006eb6 <WM__Paint+0x5e>
 8006eb4:	2501      	movs	r5, #1
 8006eb6:	9500      	str	r5, [sp, #0]
 8006eb8:	2300      	movs	r3, #0
 8006eba:	aa03      	add	r2, sp, #12
 8006ebc:	4911      	ldr	r1, [pc, #68]	@ (8006f04 <WM__Paint+0xac>)
 8006ebe:	4630      	mov	r0, r6
 8006ec0:	f002 ffd4 	bl	8009e6c <GUI_MEMDEV_Draw>
 8006ec4:	2400      	movs	r4, #0
 8006ec6:	e003      	b.n	8006ed0 <WM__Paint+0x78>
 8006ec8:	9803      	ldr	r0, [sp, #12]
 8006eca:	f7ff f97d 	bl	80061c8 <WM__PaintWinAndOverlays>
 8006ece:	2401      	movs	r4, #1
 8006ed0:	9803      	ldr	r0, [sp, #12]
 8006ed2:	f7fb f8bd 	bl	8002050 <GUI_ALLOC_LockH>
 8006ed6:	6a82      	ldr	r2, [r0, #40]	@ 0x28
 8006ed8:	9005      	str	r0, [sp, #20]
 8006eda:	f422 4380 	bic.w	r3, r2, #16384	@ 0x4000
 8006ede:	f023 0320 	bic.w	r3, r3, #32
 8006ee2:	0492      	lsls	r2, r2, #18
 8006ee4:	bf48      	it	mi
 8006ee6:	f043 0304 	orrmi.w	r3, r3, #4
 8006eea:	6283      	str	r3, [r0, #40]	@ 0x28
 8006eec:	a805      	add	r0, sp, #20
 8006eee:	f7fb f8bd 	bl	800206c <GUI_ALLOC_UnlockH>
 8006ef2:	4a05      	ldr	r2, [pc, #20]	@ (8006f08 <WM__Paint+0xb0>)
 8006ef4:	8813      	ldrh	r3, [r2, #0]
 8006ef6:	3b01      	subs	r3, #1
 8006ef8:	8013      	strh	r3, [r2, #0]
 8006efa:	4620      	mov	r0, r4
 8006efc:	b008      	add	sp, #32
 8006efe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006f02:	bf00      	nop
 8006f04:	08006241 	.word	0x08006241
 8006f08:	20002c6c 	.word	0x20002c6c

08006f0c <_Exec1Draw>:
 8006f0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006f10:	4b1d      	ldr	r3, [pc, #116]	@ (8006f88 <_Exec1Draw+0x7c>)
 8006f12:	b09f      	sub	sp, #124	@ 0x7c
 8006f14:	681a      	ldr	r2, [r3, #0]
 8006f16:	461d      	mov	r5, r3
 8006f18:	f892 0054 	ldrb.w	r0, [r2, #84]	@ 0x54
 8006f1c:	2800      	cmp	r0, #0
 8006f1e:	d02f      	beq.n	8006f80 <_Exec1Draw+0x74>
 8006f20:	4b1a      	ldr	r3, [pc, #104]	@ (8006f8c <_Exec1Draw+0x80>)
 8006f22:	8818      	ldrh	r0, [r3, #0]
 8006f24:	461f      	mov	r7, r3
 8006f26:	b358      	cbz	r0, 8006f80 <_Exec1Draw+0x74>
 8006f28:	4b19      	ldr	r3, [pc, #100]	@ (8006f90 <_Exec1Draw+0x84>)
 8006f2a:	689c      	ldr	r4, [r3, #8]
 8006f2c:	461e      	mov	r6, r3
 8006f2e:	b90c      	cbnz	r4, 8006f34 <_Exec1Draw+0x28>
 8006f30:	4b18      	ldr	r3, [pc, #96]	@ (8006f94 <_Exec1Draw+0x88>)
 8006f32:	681c      	ldr	r4, [r3, #0]
 8006f34:	a801      	add	r0, sp, #4
 8006f36:	f7fb fbfd 	bl	8002734 <GUI_SaveContext_W>
 8006f3a:	682b      	ldr	r3, [r5, #0]
 8006f3c:	f8d3 8030 	ldr.w	r8, [r3, #48]	@ 0x30
 8006f40:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
 8006f42:	b924      	cbnz	r4, 8006f4e <_Exec1Draw+0x42>
 8006f44:	2400      	movs	r4, #0
 8006f46:	e00d      	b.n	8006f64 <_Exec1Draw+0x58>
 8006f48:	f1b9 0f00 	cmp.w	r9, #0
 8006f4c:	d10a      	bne.n	8006f64 <_Exec1Draw+0x58>
 8006f4e:	4620      	mov	r0, r4
 8006f50:	f7ff ff82 	bl	8006e58 <WM__Paint>
 8006f54:	4681      	mov	r9, r0
 8006f56:	4620      	mov	r0, r4
 8006f58:	f7fb f870 	bl	800203c <GUI_ALLOC_h2p>
 8006f5c:	6944      	ldr	r4, [r0, #20]
 8006f5e:	2c00      	cmp	r4, #0
 8006f60:	d1f2      	bne.n	8006f48 <_Exec1Draw+0x3c>
 8006f62:	e7ef      	b.n	8006f44 <_Exec1Draw+0x38>
 8006f64:	4640      	mov	r0, r8
 8006f66:	60b4      	str	r4, [r6, #8]
 8006f68:	f7fb fc03 	bl	8002772 <GUI_SetColor>
 8006f6c:	4628      	mov	r0, r5
 8006f6e:	f7fb fbfe 	bl	800276e <GUI_SetBkColor>
 8006f72:	a801      	add	r0, sp, #4
 8006f74:	f7fb fbe8 	bl	8002748 <GUI_RestoreContext>
 8006f78:	8838      	ldrh	r0, [r7, #0]
 8006f7a:	3000      	adds	r0, #0
 8006f7c:	bf18      	it	ne
 8006f7e:	2001      	movne	r0, #1
 8006f80:	b01f      	add	sp, #124	@ 0x7c
 8006f82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006f86:	bf00      	nop
 8006f88:	20000014 	.word	0x20000014
 8006f8c:	20002c6c 	.word	0x20002c6c
 8006f90:	20000238 	.word	0x20000238
 8006f94:	20002c70 	.word	0x20002c70

08006f98 <WM_Exec>:
 8006f98:	4b18      	ldr	r3, [pc, #96]	@ (8006ffc <WM_Exec+0x64>)
 8006f9a:	b570      	push	{r4, r5, r6, lr}
 8006f9c:	681b      	ldr	r3, [r3, #0]
 8006f9e:	b103      	cbz	r3, 8006fa2 <WM_Exec+0xa>
 8006fa0:	4798      	blx	r3
 8006fa2:	2500      	movs	r5, #0
 8006fa4:	f7ff fd80 	bl	8006aa8 <_Exec1Input>
 8006fa8:	b108      	cbz	r0, 8006fae <WM_Exec+0x16>
 8006faa:	2501      	movs	r5, #1
 8006fac:	e7fa      	b.n	8006fa4 <WM_Exec+0xc>
 8006fae:	4b14      	ldr	r3, [pc, #80]	@ (8007000 <WM_Exec+0x68>)
 8006fb0:	681b      	ldr	r3, [r3, #0]
 8006fb2:	f893 4054 	ldrb.w	r4, [r3, #84]	@ 0x54
 8006fb6:	b144      	cbz	r4, 8006fca <WM_Exec+0x32>
 8006fb8:	4b12      	ldr	r3, [pc, #72]	@ (8007004 <WM_Exec+0x6c>)
 8006fba:	881c      	ldrh	r4, [r3, #0]
 8006fbc:	b12c      	cbz	r4, 8006fca <WM_Exec+0x32>
 8006fbe:	4b12      	ldr	r3, [pc, #72]	@ (8007008 <WM_Exec+0x70>)
 8006fc0:	681b      	ldr	r3, [r3, #0]
 8006fc2:	b1a3      	cbz	r3, 8006fee <WM_Exec+0x56>
 8006fc4:	681b      	ldr	r3, [r3, #0]
 8006fc6:	4798      	blx	r3
 8006fc8:	2401      	movs	r4, #1
 8006fca:	f7ff ff9f 	bl	8006f0c <_Exec1Draw>
 8006fce:	4606      	mov	r6, r0
 8006fd0:	b108      	cbz	r0, 8006fd6 <WM_Exec+0x3e>
 8006fd2:	2501      	movs	r5, #1
 8006fd4:	e7f9      	b.n	8006fca <WM_Exec+0x32>
 8006fd6:	b174      	cbz	r4, 8006ff6 <WM_Exec+0x5e>
 8006fd8:	4b0b      	ldr	r3, [pc, #44]	@ (8007008 <WM_Exec+0x70>)
 8006fda:	681b      	ldr	r3, [r3, #0]
 8006fdc:	b123      	cbz	r3, 8006fe8 <WM_Exec+0x50>
 8006fde:	685b      	ldr	r3, [r3, #4]
 8006fe0:	4798      	blx	r3
 8006fe2:	4b0a      	ldr	r3, [pc, #40]	@ (800700c <WM_Exec+0x74>)
 8006fe4:	601e      	str	r6, [r3, #0]
 8006fe6:	e006      	b.n	8006ff6 <WM_Exec+0x5e>
 8006fe8:	f002 fc50 	bl	800988c <GUI__ManageCache>
 8006fec:	e003      	b.n	8006ff6 <WM_Exec+0x5e>
 8006fee:	2001      	movs	r0, #1
 8006ff0:	f002 fc4c 	bl	800988c <GUI__ManageCache>
 8006ff4:	e7e8      	b.n	8006fc8 <WM_Exec+0x30>
 8006ff6:	4628      	mov	r0, r5
 8006ff8:	bd70      	pop	{r4, r5, r6, pc}
 8006ffa:	bf00      	nop
 8006ffc:	20002c60 	.word	0x20002c60
 8007000:	20000014 	.word	0x20000014
 8007004:	20002c6c 	.word	0x20002c6c
 8007008:	20002c94 	.word	0x20002c94
 800700c:	20002c7c 	.word	0x20002c7c

08007010 <WM_Activate>:
 8007010:	4b02      	ldr	r3, [pc, #8]	@ (800701c <WM_Activate+0xc>)
 8007012:	2201      	movs	r2, #1
 8007014:	681b      	ldr	r3, [r3, #0]
 8007016:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54
 800701a:	4770      	bx	lr
 800701c:	20000014 	.word	0x20000014

08007020 <WM_Deactivate>:
 8007020:	4b03      	ldr	r3, [pc, #12]	@ (8007030 <WM_Deactivate+0x10>)
 8007022:	2200      	movs	r2, #0
 8007024:	681b      	ldr	r3, [r3, #0]
 8007026:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54
 800702a:	f7fc ba8b 	b.w	8003544 <LCD_SetClipRectMax>
 800702e:	bf00      	nop
 8007030:	20000014 	.word	0x20000014

08007034 <WM_DefaultProc>:
 8007034:	b510      	push	{r4, lr}
 8007036:	4604      	mov	r4, r0
 8007038:	6823      	ldr	r3, [r4, #0]
 800703a:	6840      	ldr	r0, [r0, #4]
 800703c:	2b17      	cmp	r3, #23
 800703e:	d010      	beq.n	8007062 <WM_DefaultProc+0x2e>
 8007040:	dc07      	bgt.n	8007052 <WM_DefaultProc+0x1e>
 8007042:	2b0e      	cmp	r3, #14
 8007044:	d00f      	beq.n	8007066 <WM_DefaultProc+0x32>
 8007046:	2b14      	cmp	r3, #20
 8007048:	d115      	bne.n	8007076 <WM_DefaultProc+0x42>
 800704a:	68e1      	ldr	r1, [r4, #12]
 800704c:	f000 fd18 	bl	8007a80 <WM__GetClientRectEx>
 8007050:	e011      	b.n	8007076 <WM_DefaultProc+0x42>
 8007052:	2b22      	cmp	r3, #34	@ 0x22
 8007054:	d00c      	beq.n	8007070 <WM_DefaultProc+0x3c>
 8007056:	2b28      	cmp	r3, #40	@ 0x28
 8007058:	d10d      	bne.n	8007076 <WM_DefaultProc+0x42>
 800705a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800705e:	f7ff bbba 	b.w	80067d6 <WM_InvalidateWindow>
 8007062:	60e0      	str	r0, [r4, #12]
 8007064:	bd10      	pop	{r4, pc}
 8007066:	4621      	mov	r1, r4
 8007068:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800706c:	f000 ba57 	b.w	800751e <WM_SendToParent>
 8007070:	f06f 4370 	mvn.w	r3, #4026531840	@ 0xf0000000
 8007074:	e000      	b.n	8007078 <WM_DefaultProc+0x44>
 8007076:	2300      	movs	r3, #0
 8007078:	60e3      	str	r3, [r4, #12]
 800707a:	bd10      	pop	{r4, pc}

0800707c <_cbBackWin>:
 800707c:	6803      	ldr	r3, [r0, #0]
 800707e:	b510      	push	{r4, lr}
 8007080:	2b0e      	cmp	r3, #14
 8007082:	4604      	mov	r4, r0
 8007084:	d002      	beq.n	800708c <_cbBackWin+0x10>
 8007086:	2b0f      	cmp	r3, #15
 8007088:	d009      	beq.n	800709e <_cbBackWin+0x22>
 800708a:	e020      	b.n	80070ce <_cbBackWin+0x52>
 800708c:	68c3      	ldr	r3, [r0, #12]
 800708e:	685a      	ldr	r2, [r3, #4]
 8007090:	2a01      	cmp	r2, #1
 8007092:	d121      	bne.n	80070d8 <_cbBackWin+0x5c>
 8007094:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007098:	6818      	ldr	r0, [r3, #0]
 800709a:	f7fb be9f 	b.w	8002ddc <GUI_StoreKey>
 800709e:	4a0f      	ldr	r2, [pc, #60]	@ (80070dc <_cbBackWin+0x60>)
 80070a0:	6843      	ldr	r3, [r0, #4]
 80070a2:	6811      	ldr	r1, [r2, #0]
 80070a4:	428b      	cmp	r3, r1
 80070a6:	d006      	beq.n	80070b6 <_cbBackWin+0x3a>
 80070a8:	6852      	ldr	r2, [r2, #4]
 80070aa:	4293      	cmp	r3, r2
 80070ac:	bf0c      	ite	eq
 80070ae:	2301      	moveq	r3, #1
 80070b0:	f04f 33ff 	movne.w	r3, #4294967295
 80070b4:	e000      	b.n	80070b8 <_cbBackWin+0x3c>
 80070b6:	2300      	movs	r3, #0
 80070b8:	4a09      	ldr	r2, [pc, #36]	@ (80070e0 <_cbBackWin+0x64>)
 80070ba:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80070be:	f06f 4370 	mvn.w	r3, #4026531840	@ 0xf0000000
 80070c2:	4298      	cmp	r0, r3
 80070c4:	d003      	beq.n	80070ce <_cbBackWin+0x52>
 80070c6:	f7fb fb52 	bl	800276e <GUI_SetBkColor>
 80070ca:	f7fb fc5b 	bl	8002984 <GUI_Clear>
 80070ce:	4620      	mov	r0, r4
 80070d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80070d4:	f7ff bfae 	b.w	8007034 <WM_DefaultProc>
 80070d8:	bd10      	pop	{r4, pc}
 80070da:	bf00      	nop
 80070dc:	20002c54 	.word	0x20002c54
 80070e0:	20002c88 	.word	0x20002c88

080070e4 <WM_Init>:
 80070e4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80070e8:	4d2a      	ldr	r5, [pc, #168]	@ (8007194 <WM_Init+0xb0>)
 80070ea:	7828      	ldrb	r0, [r5, #0]
 80070ec:	2800      	cmp	r0, #0
 80070ee:	d14d      	bne.n	800718c <WM_Init+0xa8>
 80070f0:	4604      	mov	r4, r0
 80070f2:	4b29      	ldr	r3, [pc, #164]	@ (8007198 <WM_Init+0xb4>)
 80070f4:	4e29      	ldr	r6, [pc, #164]	@ (800719c <WM_Init+0xb8>)
 80070f6:	6018      	str	r0, [r3, #0]
 80070f8:	4b29      	ldr	r3, [pc, #164]	@ (80071a0 <WM_Init+0xbc>)
 80070fa:	4f2a      	ldr	r7, [pc, #168]	@ (80071a4 <WM_Init+0xc0>)
 80070fc:	681b      	ldr	r3, [r3, #0]
 80070fe:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 80071d0 <WM_Init+0xec>
 8007102:	6458      	str	r0, [r3, #68]	@ 0x44
 8007104:	4b28      	ldr	r3, [pc, #160]	@ (80071a8 <WM_Init+0xc4>)
 8007106:	60a8      	str	r0, [r5, #8]
 8007108:	8018      	strh	r0, [r3, #0]
 800710a:	4b28      	ldr	r3, [pc, #160]	@ (80071ac <WM_Init+0xc8>)
 800710c:	8018      	strh	r0, [r3, #0]
 800710e:	4620      	mov	r0, r4
 8007110:	f7fb fd20 	bl	8002b54 <GUI_DEVICE__GetpDriver>
 8007114:	b1a8      	cbz	r0, 8007142 <WM_Init+0x5e>
 8007116:	f04f 32ff 	mov.w	r2, #4294967295
 800711a:	2302      	movs	r3, #2
 800711c:	e88d 000c 	stmia.w	sp, {r2, r3}
 8007120:	f643 73ff 	movw	r3, #16383	@ 0x3fff
 8007124:	2100      	movs	r1, #0
 8007126:	461a      	mov	r2, r3
 8007128:	9103      	str	r1, [sp, #12]
 800712a:	9602      	str	r6, [sp, #8]
 800712c:	4608      	mov	r0, r1
 800712e:	f7ff fb7f 	bl	8006830 <WM_CreateWindowAsChild>
 8007132:	f06f 4370 	mvn.w	r3, #4026531840	@ 0xf0000000
 8007136:	f847 0024 	str.w	r0, [r7, r4, lsl #2]
 800713a:	f848 3024 	str.w	r3, [r8, r4, lsl #2]
 800713e:	f7ff fb4a 	bl	80067d6 <WM_InvalidateWindow>
 8007142:	3401      	adds	r4, #1
 8007144:	2c02      	cmp	r4, #2
 8007146:	d1e2      	bne.n	800710e <WM_Init+0x2a>
 8007148:	4819      	ldr	r0, [pc, #100]	@ (80071b0 <WM_Init+0xcc>)
 800714a:	f000 fc91 	bl	8007a70 <WM__AddCriticalHandle>
 800714e:	4819      	ldr	r0, [pc, #100]	@ (80071b4 <WM_Init+0xd0>)
 8007150:	f000 fc8e 	bl	8007a70 <WM__AddCriticalHandle>
 8007154:	4818      	ldr	r0, [pc, #96]	@ (80071b8 <WM_Init+0xd4>)
 8007156:	f000 fc8b 	bl	8007a70 <WM__AddCriticalHandle>
 800715a:	4818      	ldr	r0, [pc, #96]	@ (80071bc <WM_Init+0xd8>)
 800715c:	f000 fc88 	bl	8007a70 <WM__AddCriticalHandle>
 8007160:	4817      	ldr	r0, [pc, #92]	@ (80071c0 <WM_Init+0xdc>)
 8007162:	f000 fc85 	bl	8007a70 <WM__AddCriticalHandle>
 8007166:	4817      	ldr	r0, [pc, #92]	@ (80071c4 <WM_Init+0xe0>)
 8007168:	f000 fc82 	bl	8007a70 <WM__AddCriticalHandle>
 800716c:	4b0d      	ldr	r3, [pc, #52]	@ (80071a4 <WM_Init+0xc0>)
 800716e:	6818      	ldr	r0, [r3, #0]
 8007170:	f7ff fb3e 	bl	80067f0 <WM_SelectWindow>
 8007174:	f7ff ff4c 	bl	8007010 <WM_Activate>
 8007178:	2301      	movs	r3, #1
 800717a:	702b      	strb	r3, [r5, #0]
 800717c:	4812      	ldr	r0, [pc, #72]	@ (80071c8 <WM_Init+0xe4>)
 800717e:	4b13      	ldr	r3, [pc, #76]	@ (80071cc <WM_Init+0xe8>)
 8007180:	626b      	str	r3, [r5, #36]	@ 0x24
 8007182:	b004      	add	sp, #16
 8007184:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007188:	f7fb bcd2 	b.w	8002b30 <GUI__RegisterExit>
 800718c:	b004      	add	sp, #16
 800718e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007192:	bf00      	nop
 8007194:	20000238 	.word	0x20000238
 8007198:	20002c70 	.word	0x20002c70
 800719c:	0800707d 	.word	0x0800707d
 80071a0:	20000014 	.word	0x20000014
 80071a4:	20002c54 	.word	0x20002c54
 80071a8:	20002c6c 	.word	0x20002c6c
 80071ac:	20002c4c 	.word	0x20002c4c
 80071b0:	20002cc8 	.word	0x20002cc8
 80071b4:	20002cb8 	.word	0x20002cb8
 80071b8:	20002ca8 	.word	0x20002ca8
 80071bc:	20002cd0 	.word	0x20002cd0
 80071c0:	20002cc0 	.word	0x20002cc0
 80071c4:	20002cb0 	.word	0x20002cb0
 80071c8:	2000025c 	.word	0x2000025c
 80071cc:	08005e21 	.word	0x08005e21
 80071d0:	20002c88 	.word	0x20002c88

080071d4 <WM_ForEachDesc>:
 80071d4:	f000 bb2a 	b.w	800782c <WM__ForEachDesc>

080071d8 <WM_GetClientRectEx>:
 80071d8:	f000 bc52 	b.w	8007a80 <WM__GetClientRectEx>

080071dc <WM_GetClientRect>:
 80071dc:	4b04      	ldr	r3, [pc, #16]	@ (80071f0 <WM_GetClientRect+0x14>)
 80071de:	4601      	mov	r1, r0
 80071e0:	6818      	ldr	r0, [r3, #0]
 80071e2:	b910      	cbnz	r0, 80071ea <WM_GetClientRect+0xe>
 80071e4:	4b03      	ldr	r3, [pc, #12]	@ (80071f4 <WM_GetClientRect+0x18>)
 80071e6:	681b      	ldr	r3, [r3, #0]
 80071e8:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 80071ea:	f000 bc49 	b.w	8007a80 <WM__GetClientRectEx>
 80071ee:	bf00      	nop
 80071f0:	20002c50 	.word	0x20002c50
 80071f4:	20000014 	.word	0x20000014

080071f8 <WM_GetClientWindow>:
 80071f8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80071fa:	2300      	movs	r3, #0
 80071fc:	9303      	str	r3, [sp, #12]
 80071fe:	a904      	add	r1, sp, #16
 8007200:	2317      	movs	r3, #23
 8007202:	f841 3d10 	str.w	r3, [r1, #-16]!
 8007206:	f7ff f98e 	bl	8006526 <WM_SendMessage>
 800720a:	9803      	ldr	r0, [sp, #12]
 800720c:	b005      	add	sp, #20
 800720e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08007214 <WM_GetDesktopWindow>:
 8007214:	4b03      	ldr	r3, [pc, #12]	@ (8007224 <WM_GetDesktopWindow+0x10>)
 8007216:	681b      	ldr	r3, [r3, #0]
 8007218:	7c5a      	ldrb	r2, [r3, #17]
 800721a:	4b03      	ldr	r3, [pc, #12]	@ (8007228 <WM_GetDesktopWindow+0x14>)
 800721c:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8007220:	4770      	bx	lr
 8007222:	bf00      	nop
 8007224:	20000014 	.word	0x20000014
 8007228:	20002c54 	.word	0x20002c54

0800722c <WM_GetFirstChild>:
 800722c:	b508      	push	{r3, lr}
 800722e:	4603      	mov	r3, r0
 8007230:	b110      	cbz	r0, 8007238 <WM_GetFirstChild+0xc>
 8007232:	f7fa ff03 	bl	800203c <GUI_ALLOC_h2p>
 8007236:	69c3      	ldr	r3, [r0, #28]
 8007238:	4618      	mov	r0, r3
 800723a:	bd08      	pop	{r3, pc}

0800723c <WM_GetFocusedWindow>:
 800723c:	4b02      	ldr	r3, [pc, #8]	@ (8007248 <WM_GetFocusedWindow+0xc>)
 800723e:	681a      	ldr	r2, [r3, #0]
 8007240:	4b02      	ldr	r3, [pc, #8]	@ (800724c <WM_GetFocusedWindow+0x10>)
 8007242:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8007246:	4770      	bx	lr
 8007248:	20002c74 	.word	0x20002c74
 800724c:	20002c64 	.word	0x20002c64

08007250 <WM_GetId>:
 8007250:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8007252:	4604      	mov	r4, r0
 8007254:	2210      	movs	r2, #16
 8007256:	2100      	movs	r1, #0
 8007258:	4668      	mov	r0, sp
 800725a:	f003 ffb3 	bl	800b1c4 <memset>
 800725e:	2315      	movs	r3, #21
 8007260:	4620      	mov	r0, r4
 8007262:	4669      	mov	r1, sp
 8007264:	9300      	str	r3, [sp, #0]
 8007266:	f7ff f95e 	bl	8006526 <WM_SendMessage>
 800726a:	9803      	ldr	r0, [sp, #12]
 800726c:	b004      	add	sp, #16
 800726e:	bd10      	pop	{r4, pc}

08007270 <_GetDialogItem>:
 8007270:	b570      	push	{r4, r5, r6, lr}
 8007272:	4606      	mov	r6, r0
 8007274:	460d      	mov	r5, r1
 8007276:	f7fa fee1 	bl	800203c <GUI_ALLOC_h2p>
 800727a:	69c4      	ldr	r4, [r0, #28]
 800727c:	b14c      	cbz	r4, 8007292 <_GetDialogItem+0x22>
 800727e:	4620      	mov	r0, r4
 8007280:	f7ff ffe6 	bl	8007250 <WM_GetId>
 8007284:	42a8      	cmp	r0, r5
 8007286:	4620      	mov	r0, r4
 8007288:	d014      	beq.n	80072b4 <_GetDialogItem+0x44>
 800728a:	f7fa fed7 	bl	800203c <GUI_ALLOC_h2p>
 800728e:	6a04      	ldr	r4, [r0, #32]
 8007290:	e7f4      	b.n	800727c <_GetDialogItem+0xc>
 8007292:	4630      	mov	r0, r6
 8007294:	f7fa fed2 	bl	800203c <GUI_ALLOC_h2p>
 8007298:	69c4      	ldr	r4, [r0, #28]
 800729a:	b14c      	cbz	r4, 80072b0 <_GetDialogItem+0x40>
 800729c:	4629      	mov	r1, r5
 800729e:	4620      	mov	r0, r4
 80072a0:	f7ff ffe6 	bl	8007270 <_GetDialogItem>
 80072a4:	b930      	cbnz	r0, 80072b4 <_GetDialogItem+0x44>
 80072a6:	4620      	mov	r0, r4
 80072a8:	f7fa fec8 	bl	800203c <GUI_ALLOC_h2p>
 80072ac:	6a04      	ldr	r4, [r0, #32]
 80072ae:	e7f4      	b.n	800729a <_GetDialogItem+0x2a>
 80072b0:	4620      	mov	r0, r4
 80072b2:	bd70      	pop	{r4, r5, r6, pc}
 80072b4:	bd70      	pop	{r4, r5, r6, pc}

080072b6 <WM_GetDialogItem>:
 80072b6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80072b8:	460d      	mov	r5, r1
 80072ba:	4604      	mov	r4, r0
 80072bc:	b1c8      	cbz	r0, 80072f2 <WM_GetDialogItem+0x3c>
 80072be:	f7fa fec7 	bl	8002050 <GUI_ALLOC_LockH>
 80072c2:	ab02      	add	r3, sp, #8
 80072c4:	f843 0d04 	str.w	r0, [r3, #-4]!
 80072c8:	69c4      	ldr	r4, [r0, #28]
 80072ca:	4618      	mov	r0, r3
 80072cc:	f7fa fece 	bl	800206c <GUI_ALLOC_UnlockH>
 80072d0:	b17c      	cbz	r4, 80072f2 <WM_GetDialogItem+0x3c>
 80072d2:	4620      	mov	r0, r4
 80072d4:	f7ff ffbc 	bl	8007250 <WM_GetId>
 80072d8:	4285      	cmp	r5, r0
 80072da:	d00a      	beq.n	80072f2 <WM_GetDialogItem+0x3c>
 80072dc:	4629      	mov	r1, r5
 80072de:	4620      	mov	r0, r4
 80072e0:	f7ff ffc6 	bl	8007270 <_GetDialogItem>
 80072e4:	b920      	cbnz	r0, 80072f0 <WM_GetDialogItem+0x3a>
 80072e6:	4620      	mov	r0, r4
 80072e8:	f7fa fea8 	bl	800203c <GUI_ALLOC_h2p>
 80072ec:	6a04      	ldr	r4, [r0, #32]
 80072ee:	e7ef      	b.n	80072d0 <WM_GetDialogItem+0x1a>
 80072f0:	4604      	mov	r4, r0
 80072f2:	4620      	mov	r0, r4
 80072f4:	b003      	add	sp, #12
 80072f6:	bd30      	pop	{r4, r5, pc}

080072f8 <WM_GetWindowOrgX>:
 80072f8:	b508      	push	{r3, lr}
 80072fa:	b120      	cbz	r0, 8007306 <WM_GetWindowOrgX+0xe>
 80072fc:	f7fa fe9e 	bl	800203c <GUI_ALLOC_h2p>
 8007300:	f9b0 0000 	ldrsh.w	r0, [r0]
 8007304:	bd08      	pop	{r3, pc}
 8007306:	bd08      	pop	{r3, pc}

08007308 <WM_GetParent>:
 8007308:	b508      	push	{r3, lr}
 800730a:	4603      	mov	r3, r0
 800730c:	b110      	cbz	r0, 8007314 <WM_GetParent+0xc>
 800730e:	f7fa fe95 	bl	800203c <GUI_ALLOC_h2p>
 8007312:	6983      	ldr	r3, [r0, #24]
 8007314:	4618      	mov	r0, r3
 8007316:	bd08      	pop	{r3, pc}

08007318 <WM_BringToBottom>:
 8007318:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800731c:	4604      	mov	r4, r0
 800731e:	b087      	sub	sp, #28
 8007320:	2800      	cmp	r0, #0
 8007322:	d039      	beq.n	8007398 <WM_BringToBottom+0x80>
 8007324:	f7fa fe94 	bl	8002050 <GUI_ALLOC_LockH>
 8007328:	4603      	mov	r3, r0
 800732a:	ad04      	add	r5, sp, #16
 800732c:	9001      	str	r0, [sp, #4]
 800732e:	c803      	ldmia	r0, {r0, r1}
 8007330:	e885 0003 	stmia.w	r5, {r0, r1}
 8007334:	a801      	add	r0, sp, #4
 8007336:	6a1e      	ldr	r6, [r3, #32]
 8007338:	f8d3 9028 	ldr.w	r9, [r3, #40]	@ 0x28
 800733c:	f7fa fe96 	bl	800206c <GUI_ALLOC_UnlockH>
 8007340:	4620      	mov	r0, r4
 8007342:	f000 fa9d 	bl	8007880 <WM__GetPrevSibling>
 8007346:	4607      	mov	r7, r0
 8007348:	b330      	cbz	r0, 8007398 <WM_BringToBottom+0x80>
 800734a:	4620      	mov	r0, r4
 800734c:	f7ff ffdc 	bl	8007308 <WM_GetParent>
 8007350:	f019 0f02 	tst.w	r9, #2
 8007354:	4680      	mov	r8, r0
 8007356:	d004      	beq.n	8007362 <WM_BringToBottom+0x4a>
 8007358:	4601      	mov	r1, r0
 800735a:	4632      	mov	r2, r6
 800735c:	4628      	mov	r0, r5
 800735e:	f7ff f9e6 	bl	800672e <WM__InvalidateRectEx>
 8007362:	4620      	mov	r0, r4
 8007364:	f7fa fe74 	bl	8002050 <GUI_ALLOC_LockH>
 8007368:	9001      	str	r0, [sp, #4]
 800736a:	4640      	mov	r0, r8
 800736c:	f7fa fe70 	bl	8002050 <GUI_ALLOC_LockH>
 8007370:	9003      	str	r0, [sp, #12]
 8007372:	4638      	mov	r0, r7
 8007374:	f7fa fe6c 	bl	8002050 <GUI_ALLOC_LockH>
 8007378:	9b03      	ldr	r3, [sp, #12]
 800737a:	9a01      	ldr	r2, [sp, #4]
 800737c:	69d9      	ldr	r1, [r3, #28]
 800737e:	6206      	str	r6, [r0, #32]
 8007380:	9002      	str	r0, [sp, #8]
 8007382:	6211      	str	r1, [r2, #32]
 8007384:	a801      	add	r0, sp, #4
 8007386:	61dc      	str	r4, [r3, #28]
 8007388:	f7fa fe70 	bl	800206c <GUI_ALLOC_UnlockH>
 800738c:	a803      	add	r0, sp, #12
 800738e:	f7fa fe6d 	bl	800206c <GUI_ALLOC_UnlockH>
 8007392:	a802      	add	r0, sp, #8
 8007394:	f7fa fe6a 	bl	800206c <GUI_ALLOC_UnlockH>
 8007398:	b007      	add	sp, #28
 800739a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

080073a0 <WM_HasFocus>:
 80073a0:	4b04      	ldr	r3, [pc, #16]	@ (80073b4 <WM_HasFocus+0x14>)
 80073a2:	681a      	ldr	r2, [r3, #0]
 80073a4:	4b04      	ldr	r3, [pc, #16]	@ (80073b8 <WM_HasFocus+0x18>)
 80073a6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80073aa:	1a1b      	subs	r3, r3, r0
 80073ac:	4258      	negs	r0, r3
 80073ae:	4158      	adcs	r0, r3
 80073b0:	4770      	bx	lr
 80073b2:	bf00      	nop
 80073b4:	20002c74 	.word	0x20002c74
 80073b8:	20002c64 	.word	0x20002c64

080073bc <WM_IsFocusable>:
 80073bc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80073be:	4604      	mov	r4, r0
 80073c0:	b908      	cbnz	r0, 80073c6 <WM_IsFocusable+0xa>
 80073c2:	2000      	movs	r0, #0
 80073c4:	e010      	b.n	80073e8 <WM_IsFocusable+0x2c>
 80073c6:	f7fa fe39 	bl	800203c <GUI_ALLOC_h2p>
 80073ca:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80073cc:	079a      	lsls	r2, r3, #30
 80073ce:	d5f8      	bpl.n	80073c2 <WM_IsFocusable+0x6>
 80073d0:	f013 0310 	ands.w	r3, r3, #16
 80073d4:	d1f5      	bne.n	80073c2 <WM_IsFocusable+0x6>
 80073d6:	9303      	str	r3, [sp, #12]
 80073d8:	a904      	add	r1, sp, #16
 80073da:	231f      	movs	r3, #31
 80073dc:	4620      	mov	r0, r4
 80073de:	f841 3d10 	str.w	r3, [r1, #-16]!
 80073e2:	f7ff f8a0 	bl	8006526 <WM_SendMessage>
 80073e6:	9803      	ldr	r0, [sp, #12]
 80073e8:	b004      	add	sp, #16
 80073ea:	bd10      	pop	{r4, pc}

080073ec <WM_IsWindow>:
 80073ec:	f7ff b852 	b.w	8006494 <WM__IsWindow>

080073f0 <WM_OnKey>:
 80073f0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80073f2:	4a0a      	ldr	r2, [pc, #40]	@ (800741c <WM_OnKey+0x2c>)
 80073f4:	4603      	mov	r3, r0
 80073f6:	6810      	ldr	r0, [r2, #0]
 80073f8:	4a09      	ldr	r2, [pc, #36]	@ (8007420 <WM_OnKey+0x30>)
 80073fa:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 80073fe:	b148      	cbz	r0, 8007414 <WM_OnKey+0x24>
 8007400:	9300      	str	r3, [sp, #0]
 8007402:	9101      	str	r1, [sp, #4]
 8007404:	230e      	movs	r3, #14
 8007406:	a902      	add	r1, sp, #8
 8007408:	9302      	str	r3, [sp, #8]
 800740a:	f8cd d014 	str.w	sp, [sp, #20]
 800740e:	f000 fa87 	bl	8007920 <WM__SendMessage>
 8007412:	2001      	movs	r0, #1
 8007414:	b007      	add	sp, #28
 8007416:	f85d fb04 	ldr.w	pc, [sp], #4
 800741a:	bf00      	nop
 800741c:	20002c74 	.word	0x20002c74
 8007420:	20002c64 	.word	0x20002c64

08007424 <WM_ResizeWindow>:
 8007424:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007428:	ea51 0302 	orrs.w	r3, r1, r2
 800742c:	b08a      	sub	sp, #40	@ 0x28
 800742e:	4680      	mov	r8, r0
 8007430:	460f      	mov	r7, r1
 8007432:	4616      	mov	r6, r2
 8007434:	d06e      	beq.n	8007514 <WM_ResizeWindow+0xf0>
 8007436:	2800      	cmp	r0, #0
 8007438:	d06c      	beq.n	8007514 <WM_ResizeWindow+0xf0>
 800743a:	f7fa fe09 	bl	8002050 <GUI_ALLOC_LockH>
 800743e:	ac04      	add	r4, sp, #16
 8007440:	ad06      	add	r5, sp, #24
 8007442:	4603      	mov	r3, r0
 8007444:	9003      	str	r0, [sp, #12]
 8007446:	c803      	ldmia	r0, {r0, r1}
 8007448:	e884 0003 	stmia.w	r4, {r0, r1}
 800744c:	e885 0003 	stmia.w	r5, {r0, r1}
 8007450:	b17f      	cbz	r7, 8007472 <WM_ResizeWindow+0x4e>
 8007452:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007454:	f402 7220 	and.w	r2, r2, #640	@ 0x280
 8007458:	2a80      	cmp	r2, #128	@ 0x80
 800745a:	bf0b      	itete	eq
 800745c:	f8bd 2018 	ldrheq.w	r2, [sp, #24]
 8007460:	f8bd 201c 	ldrhne.w	r2, [sp, #28]
 8007464:	1bd7      	subeq	r7, r2, r7
 8007466:	18bf      	addne	r7, r7, r2
 8007468:	bf0c      	ite	eq
 800746a:	f8ad 7018 	strheq.w	r7, [sp, #24]
 800746e:	f8ad 701c 	strhne.w	r7, [sp, #28]
 8007472:	b186      	cbz	r6, 8007496 <WM_ResizeWindow+0x72>
 8007474:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007476:	f402 62a0 	and.w	r2, r2, #1280	@ 0x500
 800747a:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 800747e:	bf0b      	itete	eq
 8007480:	f8bd 201a 	ldrheq.w	r2, [sp, #26]
 8007484:	f8bd 201e 	ldrhne.w	r2, [sp, #30]
 8007488:	1b96      	subeq	r6, r2, r6
 800748a:	18b6      	addne	r6, r6, r2
 800748c:	bf0c      	ite	eq
 800748e:	f8ad 601a 	strheq.w	r6, [sp, #26]
 8007492:	f8ad 601e 	strhne.w	r6, [sp, #30]
 8007496:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007498:	03da      	lsls	r2, r3, #15
 800749a:	d502      	bpl.n	80074a2 <WM_ResizeWindow+0x7e>
 800749c:	4640      	mov	r0, r8
 800749e:	f7ff f809 	bl	80064b4 <WM__InvalidateDrawAndDescs>
 80074a2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80074a6:	9b03      	ldr	r3, [sp, #12]
 80074a8:	e883 0003 	stmia.w	r3, {r0, r1}
 80074ac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80074ae:	079b      	lsls	r3, r3, #30
 80074b0:	d50a      	bpl.n	80074c8 <WM_ResizeWindow+0xa4>
 80074b2:	462a      	mov	r2, r5
 80074b4:	4621      	mov	r1, r4
 80074b6:	a808      	add	r0, sp, #32
 80074b8:	f7fb f8a8 	bl	800260c <GUI_MergeRect>
 80074bc:	9b03      	ldr	r3, [sp, #12]
 80074be:	a808      	add	r0, sp, #32
 80074c0:	6a1a      	ldr	r2, [r3, #32]
 80074c2:	6999      	ldr	r1, [r3, #24]
 80074c4:	f7ff f933 	bl	800672e <WM__InvalidateRectEx>
 80074c8:	f9bd 001e 	ldrsh.w	r0, [sp, #30]
 80074cc:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 80074d0:	f9bd 4018 	ldrsh.w	r4, [sp, #24]
 80074d4:	f9bd 601c 	ldrsh.w	r6, [sp, #28]
 80074d8:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80074dc:	f9bd 501a 	ldrsh.w	r5, [sp, #26]
 80074e0:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 80074e4:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 80074e8:	1bc0      	subs	r0, r0, r7
 80074ea:	1af3      	subs	r3, r6, r3
 80074ec:	1aaa      	subs	r2, r5, r2
 80074ee:	1a61      	subs	r1, r4, r1
 80074f0:	9000      	str	r0, [sp, #0]
 80074f2:	ac0a      	add	r4, sp, #40	@ 0x28
 80074f4:	9803      	ldr	r0, [sp, #12]
 80074f6:	f000 fa45 	bl	8007984 <WM__UpdateChildPositions>
 80074fa:	f854 1d1c 	ldr.w	r1, [r4, #-28]!
 80074fe:	f101 0008 	add.w	r0, r1, #8
 8007502:	f7fb fcd1 	bl	8002ea8 <GUI__IntersectRect>
 8007506:	4640      	mov	r0, r8
 8007508:	2105      	movs	r1, #5
 800750a:	f7ff f810 	bl	800652e <WM__SendMsgNoData>
 800750e:	4620      	mov	r0, r4
 8007510:	f7fa fdac 	bl	800206c <GUI_ALLOC_UnlockH>
 8007514:	b00a      	add	sp, #40	@ 0x28
 8007516:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800751a <WM_SendMessageNoPara>:
 800751a:	f000 ba1f 	b.w	800795c <WM__SendMessageNoPara>

0800751e <WM_SendToParent>:
 800751e:	b538      	push	{r3, r4, r5, lr}
 8007520:	4605      	mov	r5, r0
 8007522:	460c      	mov	r4, r1
 8007524:	b141      	cbz	r1, 8007538 <WM_SendToParent+0x1a>
 8007526:	f7ff feef 	bl	8007308 <WM_GetParent>
 800752a:	b128      	cbz	r0, 8007538 <WM_SendToParent+0x1a>
 800752c:	60a5      	str	r5, [r4, #8]
 800752e:	4621      	mov	r1, r4
 8007530:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007534:	f000 b9f4 	b.w	8007920 <WM__SendMessage>
 8007538:	bd38      	pop	{r3, r4, r5, pc}

0800753a <WM_NotifyParent>:
 800753a:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800753c:	2326      	movs	r3, #38	@ 0x26
 800753e:	9103      	str	r1, [sp, #12]
 8007540:	4669      	mov	r1, sp
 8007542:	9300      	str	r3, [sp, #0]
 8007544:	f7ff ffeb 	bl	800751e <WM_SendToParent>
 8007548:	b005      	add	sp, #20
 800754a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08007550 <WM_SetFocus>:
 8007550:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007552:	4604      	mov	r4, r0
 8007554:	b087      	sub	sp, #28
 8007556:	2210      	movs	r2, #16
 8007558:	2100      	movs	r1, #0
 800755a:	a802      	add	r0, sp, #8
 800755c:	f003 fe32 	bl	800b1c4 <memset>
 8007560:	2c00      	cmp	r4, #0
 8007562:	d03a      	beq.n	80075da <WM_SetFocus+0x8a>
 8007564:	4b1f      	ldr	r3, [pc, #124]	@ (80075e4 <WM_SetFocus+0x94>)
 8007566:	4a20      	ldr	r2, [pc, #128]	@ (80075e8 <WM_SetFocus+0x98>)
 8007568:	6819      	ldr	r1, [r3, #0]
 800756a:	4617      	mov	r7, r2
 800756c:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 8007570:	461e      	mov	r6, r3
 8007572:	4284      	cmp	r4, r0
 8007574:	d031      	beq.n	80075da <WM_SetFocus+0x8a>
 8007576:	231e      	movs	r3, #30
 8007578:	e88d 0011 	stmia.w	sp, {r0, r4}
 800757c:	9302      	str	r3, [sp, #8]
 800757e:	b110      	cbz	r0, 8007586 <WM_SetFocus+0x36>
 8007580:	a902      	add	r1, sp, #8
 8007582:	f000 f9cd 	bl	8007920 <WM__SendMessage>
 8007586:	2301      	movs	r3, #1
 8007588:	a902      	add	r1, sp, #8
 800758a:	4620      	mov	r0, r4
 800758c:	9305      	str	r3, [sp, #20]
 800758e:	f000 f9c7 	bl	8007920 <WM__SendMessage>
 8007592:	9d05      	ldr	r5, [sp, #20]
 8007594:	bb15      	cbnz	r5, 80075dc <WM_SetFocus+0x8c>
 8007596:	6833      	ldr	r3, [r6, #0]
 8007598:	2620      	movs	r6, #32
 800759a:	f847 4023 	str.w	r4, [r7, r3, lsl #2]
 800759e:	4620      	mov	r0, r4
 80075a0:	f7ff feb2 	bl	8007308 <WM_GetParent>
 80075a4:	4604      	mov	r4, r0
 80075a6:	b130      	cbz	r0, 80075b6 <WM_SetFocus+0x66>
 80075a8:	a902      	add	r1, sp, #8
 80075aa:	9602      	str	r6, [sp, #8]
 80075ac:	f8cd d014 	str.w	sp, [sp, #20]
 80075b0:	f000 f9b6 	bl	8007920 <WM__SendMessage>
 80075b4:	e7f3      	b.n	800759e <WM_SetFocus+0x4e>
 80075b6:	9c00      	ldr	r4, [sp, #0]
 80075b8:	4620      	mov	r0, r4
 80075ba:	f7fe ff6b 	bl	8006494 <WM__IsWindow>
 80075be:	b168      	cbz	r0, 80075dc <WM_SetFocus+0x8c>
 80075c0:	2620      	movs	r6, #32
 80075c2:	4620      	mov	r0, r4
 80075c4:	f7ff fea0 	bl	8007308 <WM_GetParent>
 80075c8:	4604      	mov	r4, r0
 80075ca:	b138      	cbz	r0, 80075dc <WM_SetFocus+0x8c>
 80075cc:	a902      	add	r1, sp, #8
 80075ce:	9602      	str	r6, [sp, #8]
 80075d0:	f8cd d014 	str.w	sp, [sp, #20]
 80075d4:	f000 f9a4 	bl	8007920 <WM__SendMessage>
 80075d8:	e7f3      	b.n	80075c2 <WM_SetFocus+0x72>
 80075da:	2501      	movs	r5, #1
 80075dc:	4628      	mov	r0, r5
 80075de:	b007      	add	sp, #28
 80075e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80075e2:	bf00      	nop
 80075e4:	20002c74 	.word	0x20002c74
 80075e8:	20002c64 	.word	0x20002c64

080075ec <WM_SetSize>:
 80075ec:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80075f0:	460f      	mov	r7, r1
 80075f2:	4690      	mov	r8, r2
 80075f4:	4606      	mov	r6, r0
 80075f6:	b1e0      	cbz	r0, 8007632 <WM_SetSize+0x46>
 80075f8:	f7fa fd2a 	bl	8002050 <GUI_ALLOC_LockH>
 80075fc:	f9b0 5004 	ldrsh.w	r5, [r0, #4]
 8007600:	f9b0 4000 	ldrsh.w	r4, [r0]
 8007604:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8007608:	1b2c      	subs	r4, r5, r4
 800760a:	3401      	adds	r4, #1
 800760c:	1b3d      	subs	r5, r7, r4
 800760e:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8007612:	f10d 0e08 	add.w	lr, sp, #8
 8007616:	1ae3      	subs	r3, r4, r3
 8007618:	f84e 0d04 	str.w	r0, [lr, #-4]!
 800761c:	3301      	adds	r3, #1
 800761e:	ebc3 0408 	rsb	r4, r3, r8
 8007622:	4670      	mov	r0, lr
 8007624:	f7fa fd22 	bl	800206c <GUI_ALLOC_UnlockH>
 8007628:	4622      	mov	r2, r4
 800762a:	4629      	mov	r1, r5
 800762c:	4630      	mov	r0, r6
 800762e:	f7ff fef9 	bl	8007424 <WM_ResizeWindow>
 8007632:	b002      	add	sp, #8
 8007634:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007638 <WM_SetUserClipRect>:
 8007638:	4b04      	ldr	r3, [pc, #16]	@ (800764c <WM_SetUserClipRect+0x14>)
 800763a:	b510      	push	{r4, lr}
 800763c:	681b      	ldr	r3, [r3, #0]
 800763e:	6c5c      	ldr	r4, [r3, #68]	@ 0x44
 8007640:	6458      	str	r0, [r3, #68]	@ 0x44
 8007642:	f7fe ff03 	bl	800644c <WM__ActivateClipRect>
 8007646:	4620      	mov	r0, r4
 8007648:	bd10      	pop	{r4, pc}
 800764a:	bf00      	nop
 800764c:	20000014 	.word	0x20000014

08007650 <WM_InvalidateWindowAndDescs>:
 8007650:	b510      	push	{r4, lr}
 8007652:	4604      	mov	r4, r0
 8007654:	b170      	cbz	r0, 8007674 <WM_InvalidateWindowAndDescs+0x24>
 8007656:	f7ff f8be 	bl	80067d6 <WM_InvalidateWindow>
 800765a:	4620      	mov	r0, r4
 800765c:	f7ff fde6 	bl	800722c <WM_GetFirstChild>
 8007660:	4604      	mov	r4, r0
 8007662:	b13c      	cbz	r4, 8007674 <WM_InvalidateWindowAndDescs+0x24>
 8007664:	4620      	mov	r0, r4
 8007666:	f7ff fff3 	bl	8007650 <WM_InvalidateWindowAndDescs>
 800766a:	4620      	mov	r0, r4
 800766c:	f7fa fce6 	bl	800203c <GUI_ALLOC_h2p>
 8007670:	6a04      	ldr	r4, [r0, #32]
 8007672:	e7f6      	b.n	8007662 <WM_InvalidateWindowAndDescs+0x12>
 8007674:	bd10      	pop	{r4, pc}

08007676 <WM_ShowWindow>:
 8007676:	b513      	push	{r0, r1, r4, lr}
 8007678:	4604      	mov	r4, r0
 800767a:	b170      	cbz	r0, 800769a <WM_ShowWindow+0x24>
 800767c:	f7fa fce8 	bl	8002050 <GUI_ALLOC_LockH>
 8007680:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8007682:	9001      	str	r0, [sp, #4]
 8007684:	079a      	lsls	r2, r3, #30
 8007686:	d405      	bmi.n	8007694 <WM_ShowWindow+0x1e>
 8007688:	f043 0302 	orr.w	r3, r3, #2
 800768c:	6283      	str	r3, [r0, #40]	@ 0x28
 800768e:	4620      	mov	r0, r4
 8007690:	f7ff ffde 	bl	8007650 <WM_InvalidateWindowAndDescs>
 8007694:	a801      	add	r0, sp, #4
 8007696:	f7fa fce9 	bl	800206c <GUI_ALLOC_UnlockH>
 800769a:	b002      	add	sp, #8
 800769c:	bd10      	pop	{r4, pc}

0800769e <_MoveDescendents>:
 800769e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80076a2:	4616      	mov	r6, r2
 80076a4:	b088      	sub	sp, #32
 80076a6:	2210      	movs	r2, #16
 80076a8:	4604      	mov	r4, r0
 80076aa:	460d      	mov	r5, r1
 80076ac:	eb0d 0002 	add.w	r0, sp, r2
 80076b0:	2100      	movs	r1, #0
 80076b2:	f003 fd87 	bl	800b1c4 <memset>
 80076b6:	2703      	movs	r7, #3
 80076b8:	f10d 0808 	add.w	r8, sp, #8
 80076bc:	b32c      	cbz	r4, 800770a <_MoveDescendents+0x6c>
 80076be:	4620      	mov	r0, r4
 80076c0:	f7fa fcc6 	bl	8002050 <GUI_ALLOC_LockH>
 80076c4:	4632      	mov	r2, r6
 80076c6:	4629      	mov	r1, r5
 80076c8:	9001      	str	r0, [sp, #4]
 80076ca:	f7fa ffca 	bl	8002662 <GUI_MoveRect>
 80076ce:	9801      	ldr	r0, [sp, #4]
 80076d0:	4632      	mov	r2, r6
 80076d2:	4629      	mov	r1, r5
 80076d4:	3008      	adds	r0, #8
 80076d6:	f7fa ffc4 	bl	8002662 <GUI_MoveRect>
 80076da:	9b01      	ldr	r3, [sp, #4]
 80076dc:	a801      	add	r0, sp, #4
 80076de:	f8d3 a01c 	ldr.w	sl, [r3, #28]
 80076e2:	f8d3 9020 	ldr.w	r9, [r3, #32]
 80076e6:	f7fa fcc1 	bl	800206c <GUI_ALLOC_UnlockH>
 80076ea:	4632      	mov	r2, r6
 80076ec:	4629      	mov	r1, r5
 80076ee:	4650      	mov	r0, sl
 80076f0:	f7ff ffd5 	bl	800769e <_MoveDescendents>
 80076f4:	4620      	mov	r0, r4
 80076f6:	a904      	add	r1, sp, #16
 80076f8:	9704      	str	r7, [sp, #16]
 80076fa:	f8cd 801c 	str.w	r8, [sp, #28]
 80076fe:	9502      	str	r5, [sp, #8]
 8007700:	9603      	str	r6, [sp, #12]
 8007702:	464c      	mov	r4, r9
 8007704:	f000 f90c 	bl	8007920 <WM__SendMessage>
 8007708:	e7d8      	b.n	80076bc <_MoveDescendents+0x1e>
 800770a:	b008      	add	sp, #32
 800770c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08007710 <WM__MoveWindow>:
 8007710:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007714:	4606      	mov	r6, r0
 8007716:	b08b      	sub	sp, #44	@ 0x2c
 8007718:	460d      	mov	r5, r1
 800771a:	4614      	mov	r4, r2
 800771c:	2100      	movs	r1, #0
 800771e:	2210      	movs	r2, #16
 8007720:	a806      	add	r0, sp, #24
 8007722:	f003 fd4f 	bl	800b1c4 <memset>
 8007726:	2e00      	cmp	r6, #0
 8007728:	d043      	beq.n	80077b2 <WM__MoveWindow+0xa2>
 800772a:	b90d      	cbnz	r5, 8007730 <WM__MoveWindow+0x20>
 800772c:	2c00      	cmp	r4, #0
 800772e:	d040      	beq.n	80077b2 <WM__MoveWindow+0xa2>
 8007730:	4630      	mov	r0, r6
 8007732:	f7fa fc8d 	bl	8002050 <GUI_ALLOC_LockH>
 8007736:	4603      	mov	r3, r0
 8007738:	f10d 0808 	add.w	r8, sp, #8
 800773c:	9001      	str	r0, [sp, #4]
 800773e:	4622      	mov	r2, r4
 8007740:	c803      	ldmia	r0, {r0, r1}
 8007742:	e888 0003 	stmia.w	r8, {r0, r1}
 8007746:	4618      	mov	r0, r3
 8007748:	4629      	mov	r1, r5
 800774a:	f7fa ff8a 	bl	8002662 <GUI_MoveRect>
 800774e:	9801      	ldr	r0, [sp, #4]
 8007750:	4622      	mov	r2, r4
 8007752:	4629      	mov	r1, r5
 8007754:	3008      	adds	r0, #8
 8007756:	af0a      	add	r7, sp, #40	@ 0x28
 8007758:	f7fa ff83 	bl	8002662 <GUI_MoveRect>
 800775c:	f857 3d24 	ldr.w	r3, [r7, #-36]!
 8007760:	f8d3 901c 	ldr.w	r9, [r3, #28]
 8007764:	4638      	mov	r0, r7
 8007766:	f7fa fc81 	bl	800206c <GUI_ALLOC_UnlockH>
 800776a:	4622      	mov	r2, r4
 800776c:	4629      	mov	r1, r5
 800776e:	4648      	mov	r0, r9
 8007770:	f7ff ff95 	bl	800769e <_MoveDescendents>
 8007774:	4630      	mov	r0, r6
 8007776:	f7fa fc6b 	bl	8002050 <GUI_ALLOC_LockH>
 800777a:	6a82      	ldr	r2, [r0, #40]	@ 0x28
 800777c:	9001      	str	r0, [sp, #4]
 800777e:	0792      	lsls	r2, r2, #30
 8007780:	d50a      	bpl.n	8007798 <WM__MoveWindow+0x88>
 8007782:	6981      	ldr	r1, [r0, #24]
 8007784:	b141      	cbz	r1, 8007798 <WM__MoveWindow+0x88>
 8007786:	6a02      	ldr	r2, [r0, #32]
 8007788:	f7fe ffbc 	bl	8006704 <WM__InvalidateParent>
 800778c:	9b01      	ldr	r3, [sp, #4]
 800778e:	4640      	mov	r0, r8
 8007790:	6a1a      	ldr	r2, [r3, #32]
 8007792:	6999      	ldr	r1, [r3, #24]
 8007794:	f7fe ffb6 	bl	8006704 <WM__InvalidateParent>
 8007798:	4638      	mov	r0, r7
 800779a:	f7fa fc67 	bl	800206c <GUI_ALLOC_UnlockH>
 800779e:	2303      	movs	r3, #3
 80077a0:	9306      	str	r3, [sp, #24]
 80077a2:	a906      	add	r1, sp, #24
 80077a4:	ab04      	add	r3, sp, #16
 80077a6:	4630      	mov	r0, r6
 80077a8:	9309      	str	r3, [sp, #36]	@ 0x24
 80077aa:	9504      	str	r5, [sp, #16]
 80077ac:	9405      	str	r4, [sp, #20]
 80077ae:	f000 f8b7 	bl	8007920 <WM__SendMessage>
 80077b2:	b00b      	add	sp, #44	@ 0x2c
 80077b4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080077b8 <WM_MoveWindow>:
 80077b8:	f7ff bfaa 	b.w	8007710 <WM__MoveWindow>

080077bc <WM_DeleteTimer>:
 80077bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80077be:	4605      	mov	r5, r0
 80077c0:	b168      	cbz	r0, 80077de <WM_DeleteTimer+0x22>
 80077c2:	f7fa fc45 	bl	8002050 <GUI_ALLOC_LockH>
 80077c6:	ac02      	add	r4, sp, #8
 80077c8:	f844 0d04 	str.w	r0, [r4, #-4]!
 80077cc:	6800      	ldr	r0, [r0, #0]
 80077ce:	f001 fb7b 	bl	8008ec8 <GUI_TIMER_Delete>
 80077d2:	4620      	mov	r0, r4
 80077d4:	f7fa fc4a 	bl	800206c <GUI_ALLOC_UnlockH>
 80077d8:	4628      	mov	r0, r5
 80077da:	f7fa fc73 	bl	80020c4 <GUI_ALLOC_Free>
 80077de:	b003      	add	sp, #12
 80077e0:	bd30      	pop	{r4, r5, pc}

080077e2 <WM__DeleteAssocTimer>:
 80077e2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80077e4:	4605      	mov	r5, r0
 80077e6:	a801      	add	r0, sp, #4
 80077e8:	f001 fb3a 	bl	8008e60 <GUI_TIMER__GetFirstTimer>
 80077ec:	4604      	mov	r4, r0
 80077ee:	b1dc      	cbz	r4, 8007828 <WM__DeleteAssocTimer+0x46>
 80077f0:	2101      	movs	r1, #1
 80077f2:	4620      	mov	r0, r4
 80077f4:	f001 fb9a 	bl	8008f2c <GUI_TIMER_GetFlag>
 80077f8:	9b01      	ldr	r3, [sp, #4]
 80077fa:	b183      	cbz	r3, 800781e <WM__DeleteAssocTimer+0x3c>
 80077fc:	b178      	cbz	r0, 800781e <WM__DeleteAssocTimer+0x3c>
 80077fe:	4618      	mov	r0, r3
 8007800:	f7fa fc1c 	bl	800203c <GUI_ALLOC_h2p>
 8007804:	6843      	ldr	r3, [r0, #4]
 8007806:	42ab      	cmp	r3, r5
 8007808:	d109      	bne.n	800781e <WM__DeleteAssocTimer+0x3c>
 800780a:	a901      	add	r1, sp, #4
 800780c:	4620      	mov	r0, r4
 800780e:	9e01      	ldr	r6, [sp, #4]
 8007810:	f001 fb3e 	bl	8008e90 <GUI_TIMER__GetNextTimerLin>
 8007814:	4604      	mov	r4, r0
 8007816:	4630      	mov	r0, r6
 8007818:	f7ff ffd0 	bl	80077bc <WM_DeleteTimer>
 800781c:	e7e7      	b.n	80077ee <WM__DeleteAssocTimer+0xc>
 800781e:	a901      	add	r1, sp, #4
 8007820:	4620      	mov	r0, r4
 8007822:	f001 fb35 	bl	8008e90 <GUI_TIMER__GetNextTimerLin>
 8007826:	e7e1      	b.n	80077ec <WM__DeleteAssocTimer+0xa>
 8007828:	b002      	add	sp, #8
 800782a:	bd70      	pop	{r4, r5, r6, pc}

0800782c <WM__ForEachDesc>:
 800782c:	b570      	push	{r4, r5, r6, lr}
 800782e:	460d      	mov	r5, r1
 8007830:	4616      	mov	r6, r2
 8007832:	f7fa fc03 	bl	800203c <GUI_ALLOC_h2p>
 8007836:	69c4      	ldr	r4, [r0, #28]
 8007838:	b164      	cbz	r4, 8007854 <WM__ForEachDesc+0x28>
 800783a:	4620      	mov	r0, r4
 800783c:	4631      	mov	r1, r6
 800783e:	47a8      	blx	r5
 8007840:	4620      	mov	r0, r4
 8007842:	4632      	mov	r2, r6
 8007844:	4629      	mov	r1, r5
 8007846:	f7ff fff1 	bl	800782c <WM__ForEachDesc>
 800784a:	4620      	mov	r0, r4
 800784c:	f7fa fbf6 	bl	800203c <GUI_ALLOC_h2p>
 8007850:	6a04      	ldr	r4, [r0, #32]
 8007852:	e7f1      	b.n	8007838 <WM__ForEachDesc+0xc>
 8007854:	bd70      	pop	{r4, r5, r6, pc}

08007856 <WM__GetFirstSibling>:
 8007856:	b508      	push	{r3, lr}
 8007858:	f7ff fd56 	bl	8007308 <WM_GetParent>
 800785c:	b118      	cbz	r0, 8007866 <WM__GetFirstSibling+0x10>
 800785e:	f7fa fbed 	bl	800203c <GUI_ALLOC_h2p>
 8007862:	69c0      	ldr	r0, [r0, #28]
 8007864:	bd08      	pop	{r3, pc}
 8007866:	bd08      	pop	{r3, pc}

08007868 <WM__GetLastSibling>:
 8007868:	b510      	push	{r4, lr}
 800786a:	4604      	mov	r4, r0
 800786c:	b134      	cbz	r4, 800787c <WM__GetLastSibling+0x14>
 800786e:	4620      	mov	r0, r4
 8007870:	f7fa fbe4 	bl	800203c <GUI_ALLOC_h2p>
 8007874:	6a03      	ldr	r3, [r0, #32]
 8007876:	b10b      	cbz	r3, 800787c <WM__GetLastSibling+0x14>
 8007878:	461c      	mov	r4, r3
 800787a:	e7f7      	b.n	800786c <WM__GetLastSibling+0x4>
 800787c:	4620      	mov	r0, r4
 800787e:	bd10      	pop	{r4, pc}

08007880 <WM__GetPrevSibling>:
 8007880:	b538      	push	{r3, r4, r5, lr}
 8007882:	4605      	mov	r5, r0
 8007884:	f7ff ffe7 	bl	8007856 <WM__GetFirstSibling>
 8007888:	4604      	mov	r4, r0
 800788a:	b154      	cbz	r4, 80078a2 <WM__GetPrevSibling+0x22>
 800788c:	42ac      	cmp	r4, r5
 800788e:	d007      	beq.n	80078a0 <WM__GetPrevSibling+0x20>
 8007890:	4620      	mov	r0, r4
 8007892:	f7fa fbd3 	bl	800203c <GUI_ALLOC_h2p>
 8007896:	6a03      	ldr	r3, [r0, #32]
 8007898:	429d      	cmp	r5, r3
 800789a:	d002      	beq.n	80078a2 <WM__GetPrevSibling+0x22>
 800789c:	461c      	mov	r4, r3
 800789e:	e7f4      	b.n	800788a <WM__GetPrevSibling+0xa>
 80078a0:	2400      	movs	r4, #0
 80078a2:	4620      	mov	r0, r4
 80078a4:	bd38      	pop	{r3, r4, r5, pc}

080078a6 <WM__IsAncestor>:
 80078a6:	b510      	push	{r4, lr}
 80078a8:	460c      	mov	r4, r1
 80078aa:	b908      	cbnz	r0, 80078b0 <WM__IsAncestor+0xa>
 80078ac:	2000      	movs	r0, #0
 80078ae:	bd10      	pop	{r4, pc}
 80078b0:	2900      	cmp	r1, #0
 80078b2:	d0fb      	beq.n	80078ac <WM__IsAncestor+0x6>
 80078b4:	f7fa fbc2 	bl	800203c <GUI_ALLOC_h2p>
 80078b8:	6980      	ldr	r0, [r0, #24]
 80078ba:	4284      	cmp	r4, r0
 80078bc:	d002      	beq.n	80078c4 <WM__IsAncestor+0x1e>
 80078be:	2800      	cmp	r0, #0
 80078c0:	d1f8      	bne.n	80078b4 <WM__IsAncestor+0xe>
 80078c2:	e7f3      	b.n	80078ac <WM__IsAncestor+0x6>
 80078c4:	2001      	movs	r0, #1
 80078c6:	bd10      	pop	{r4, pc}

080078c8 <WM__IsAncestorOrSelf>:
 80078c8:	4288      	cmp	r0, r1
 80078ca:	d001      	beq.n	80078d0 <WM__IsAncestorOrSelf+0x8>
 80078cc:	f7ff bfeb 	b.w	80078a6 <WM__IsAncestor>
 80078d0:	2001      	movs	r0, #1
 80078d2:	4770      	bx	lr

080078d4 <WM__IsChild>:
 80078d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80078d6:	460d      	mov	r5, r1
 80078d8:	4604      	mov	r4, r0
 80078da:	b160      	cbz	r0, 80078f6 <WM__IsChild+0x22>
 80078dc:	f7fa fbb8 	bl	8002050 <GUI_ALLOC_LockH>
 80078e0:	9001      	str	r0, [sp, #4]
 80078e2:	b120      	cbz	r0, 80078ee <WM__IsChild+0x1a>
 80078e4:	6980      	ldr	r0, [r0, #24]
 80078e6:	1b43      	subs	r3, r0, r5
 80078e8:	425c      	negs	r4, r3
 80078ea:	415c      	adcs	r4, r3
 80078ec:	e000      	b.n	80078f0 <WM__IsChild+0x1c>
 80078ee:	4604      	mov	r4, r0
 80078f0:	a801      	add	r0, sp, #4
 80078f2:	f7fa fbbb 	bl	800206c <GUI_ALLOC_UnlockH>
 80078f6:	4620      	mov	r0, r4
 80078f8:	b003      	add	sp, #12
 80078fa:	bd30      	pop	{r4, r5, pc}

080078fc <WM__GetFocusedChild>:
 80078fc:	b538      	push	{r3, r4, r5, lr}
 80078fe:	4d06      	ldr	r5, [pc, #24]	@ (8007918 <WM__GetFocusedChild+0x1c>)
 8007900:	4c06      	ldr	r4, [pc, #24]	@ (800791c <WM__GetFocusedChild+0x20>)
 8007902:	682b      	ldr	r3, [r5, #0]
 8007904:	4601      	mov	r1, r0
 8007906:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800790a:	f7ff ffe3 	bl	80078d4 <WM__IsChild>
 800790e:	b110      	cbz	r0, 8007916 <WM__GetFocusedChild+0x1a>
 8007910:	682b      	ldr	r3, [r5, #0]
 8007912:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8007916:	bd38      	pop	{r3, r4, r5, pc}
 8007918:	20002c74 	.word	0x20002c74
 800791c:	20002c64 	.word	0x20002c64

08007920 <WM__SendMessage>:
 8007920:	b570      	push	{r4, r5, r6, lr}
 8007922:	4c0d      	ldr	r4, [pc, #52]	@ (8007958 <WM__SendMessage+0x38>)
 8007924:	4606      	mov	r6, r0
 8007926:	6823      	ldr	r3, [r4, #0]
 8007928:	460d      	mov	r5, r1
 800792a:	2b13      	cmp	r3, #19
 800792c:	dc12      	bgt.n	8007954 <WM__SendMessage+0x34>
 800792e:	f7fa fb85 	bl	800203c <GUI_ALLOC_h2p>
 8007932:	6902      	ldr	r2, [r0, #16]
 8007934:	606e      	str	r6, [r5, #4]
 8007936:	b142      	cbz	r2, 800794a <WM__SendMessage+0x2a>
 8007938:	6823      	ldr	r3, [r4, #0]
 800793a:	4628      	mov	r0, r5
 800793c:	3301      	adds	r3, #1
 800793e:	6023      	str	r3, [r4, #0]
 8007940:	4790      	blx	r2
 8007942:	6823      	ldr	r3, [r4, #0]
 8007944:	3b01      	subs	r3, #1
 8007946:	6023      	str	r3, [r4, #0]
 8007948:	bd70      	pop	{r4, r5, r6, pc}
 800794a:	4628      	mov	r0, r5
 800794c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8007950:	f7ff bb70 	b.w	8007034 <WM_DefaultProc>
 8007954:	bd70      	pop	{r4, r5, r6, pc}
 8007956:	bf00      	nop
 8007958:	20000268 	.word	0x20000268

0800795c <WM__SendMessageNoPara>:
 800795c:	b530      	push	{r4, r5, lr}
 800795e:	4604      	mov	r4, r0
 8007960:	b085      	sub	sp, #20
 8007962:	2210      	movs	r2, #16
 8007964:	460d      	mov	r5, r1
 8007966:	4668      	mov	r0, sp
 8007968:	2100      	movs	r1, #0
 800796a:	f003 fc2b 	bl	800b1c4 <memset>
 800796e:	4620      	mov	r0, r4
 8007970:	f7fa fb64 	bl	800203c <GUI_ALLOC_h2p>
 8007974:	6903      	ldr	r3, [r0, #16]
 8007976:	b11b      	cbz	r3, 8007980 <WM__SendMessageNoPara+0x24>
 8007978:	9401      	str	r4, [sp, #4]
 800797a:	9500      	str	r5, [sp, #0]
 800797c:	4668      	mov	r0, sp
 800797e:	4798      	blx	r3
 8007980:	b005      	add	sp, #20
 8007982:	bd30      	pop	{r4, r5, pc}

08007984 <WM__UpdateChildPositions>:
 8007984:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007988:	b08b      	sub	sp, #44	@ 0x2c
 800798a:	9303      	str	r3, [sp, #12]
 800798c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8007990:	9101      	str	r1, [sp, #4]
 8007992:	9304      	str	r3, [sp, #16]
 8007994:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8007998:	f8d0 b01c 	ldr.w	fp, [r0, #28]
 800799c:	9305      	str	r3, [sp, #20]
 800799e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 80079a2:	9202      	str	r2, [sp, #8]
 80079a4:	9306      	str	r3, [sp, #24]
 80079a6:	f1bb 0f00 	cmp.w	fp, #0
 80079aa:	d05e      	beq.n	8007a6a <WM__UpdateChildPositions+0xe6>
 80079ac:	4658      	mov	r0, fp
 80079ae:	f7fa fb4f 	bl	8002050 <GUI_ALLOC_LockH>
 80079b2:	6a82      	ldr	r2, [r0, #40]	@ 0x28
 80079b4:	9009      	str	r0, [sp, #36]	@ 0x24
 80079b6:	f402 7120 	and.w	r1, r2, #640	@ 0x280
 80079ba:	2980      	cmp	r1, #128	@ 0x80
 80079bc:	f9b0 a000 	ldrsh.w	sl, [r0]
 80079c0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80079c4:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 80079c8:	f9b0 9006 	ldrsh.w	r9, [r0, #6]
 80079cc:	d008      	beq.n	80079e0 <WM__UpdateChildPositions+0x5c>
 80079ce:	f5b1 7f20 	cmp.w	r1, #640	@ 0x280
 80079d2:	d107      	bne.n	80079e4 <WM__UpdateChildPositions+0x60>
 80079d4:	9901      	ldr	r1, [sp, #4]
 80079d6:	eb0a 0601 	add.w	r6, sl, r1
 80079da:	b236      	sxth	r6, r6
 80079dc:	9903      	ldr	r1, [sp, #12]
 80079de:	e005      	b.n	80079ec <WM__UpdateChildPositions+0x68>
 80079e0:	9904      	ldr	r1, [sp, #16]
 80079e2:	e000      	b.n	80079e6 <WM__UpdateChildPositions+0x62>
 80079e4:	9905      	ldr	r1, [sp, #20]
 80079e6:	eb01 060a 	add.w	r6, r1, sl
 80079ea:	b236      	sxth	r6, r6
 80079ec:	f402 62a0 	and.w	r2, r2, #1280	@ 0x500
 80079f0:	eb01 0508 	add.w	r5, r1, r8
 80079f4:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
 80079f8:	b22d      	sxth	r5, r5
 80079fa:	d007      	beq.n	8007a0c <WM__UpdateChildPositions+0x88>
 80079fc:	f5b2 6fa0 	cmp.w	r2, #1280	@ 0x500
 8007a00:	d10a      	bne.n	8007a18 <WM__UpdateChildPositions+0x94>
 8007a02:	9a02      	ldr	r2, [sp, #8]
 8007a04:	189f      	adds	r7, r3, r2
 8007a06:	b23f      	sxth	r7, r7
 8007a08:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8007a0a:	e002      	b.n	8007a12 <WM__UpdateChildPositions+0x8e>
 8007a0c:	9a06      	ldr	r2, [sp, #24]
 8007a0e:	18d7      	adds	r7, r2, r3
 8007a10:	b23f      	sxth	r7, r7
 8007a12:	eb09 0402 	add.w	r4, r9, r2
 8007a16:	e005      	b.n	8007a24 <WM__UpdateChildPositions+0xa0>
 8007a18:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8007a1c:	18cf      	adds	r7, r1, r3
 8007a1e:	b23f      	sxth	r7, r7
 8007a20:	eb01 0409 	add.w	r4, r1, r9
 8007a24:	ebb6 010a 	subs.w	r1, r6, sl
 8007a28:	b224      	sxth	r4, r4
 8007a2a:	eba7 0203 	sub.w	r2, r7, r3
 8007a2e:	d100      	bne.n	8007a32 <WM__UpdateChildPositions+0xae>
 8007a30:	b122      	cbz	r2, 8007a3c <WM__UpdateChildPositions+0xb8>
 8007a32:	4658      	mov	r0, fp
 8007a34:	9307      	str	r3, [sp, #28]
 8007a36:	f7ff febf 	bl	80077b8 <WM_MoveWindow>
 8007a3a:	9b07      	ldr	r3, [sp, #28]
 8007a3c:	1bad      	subs	r5, r5, r6
 8007a3e:	ebca 0808 	rsb	r8, sl, r8
 8007a42:	1be4      	subs	r4, r4, r7
 8007a44:	ebc3 0909 	rsb	r9, r3, r9
 8007a48:	ebb5 0108 	subs.w	r1, r5, r8
 8007a4c:	ebc9 0204 	rsb	r2, r9, r4
 8007a50:	d100      	bne.n	8007a54 <WM__UpdateChildPositions+0xd0>
 8007a52:	b112      	cbz	r2, 8007a5a <WM__UpdateChildPositions+0xd6>
 8007a54:	4658      	mov	r0, fp
 8007a56:	f7ff fce5 	bl	8007424 <WM_ResizeWindow>
 8007a5a:	a80a      	add	r0, sp, #40	@ 0x28
 8007a5c:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8007a60:	f8d3 b020 	ldr.w	fp, [r3, #32]
 8007a64:	f7fa fb02 	bl	800206c <GUI_ALLOC_UnlockH>
 8007a68:	e79d      	b.n	80079a6 <WM__UpdateChildPositions+0x22>
 8007a6a:	b00b      	add	sp, #44	@ 0x2c
 8007a6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08007a70 <WM__AddCriticalHandle>:
 8007a70:	4b02      	ldr	r3, [pc, #8]	@ (8007a7c <WM__AddCriticalHandle+0xc>)
 8007a72:	681a      	ldr	r2, [r3, #0]
 8007a74:	6002      	str	r2, [r0, #0]
 8007a76:	6018      	str	r0, [r3, #0]
 8007a78:	4770      	bx	lr
 8007a7a:	bf00      	nop
 8007a7c:	20002c90 	.word	0x20002c90

08007a80 <WM__GetClientRectEx>:
 8007a80:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007a82:	460d      	mov	r5, r1
 8007a84:	b158      	cbz	r0, 8007a9e <WM__GetClientRectEx+0x1e>
 8007a86:	b151      	cbz	r1, 8007a9e <WM__GetClientRectEx+0x1e>
 8007a88:	f7fa fae2 	bl	8002050 <GUI_ALLOC_LockH>
 8007a8c:	ac02      	add	r4, sp, #8
 8007a8e:	f844 0d04 	str.w	r0, [r4, #-4]!
 8007a92:	4629      	mov	r1, r5
 8007a94:	f7fe fd56 	bl	8006544 <WM__GetClientRectWin>
 8007a98:	4620      	mov	r0, r4
 8007a9a:	f7fa fae7 	bl	800206c <GUI_ALLOC_UnlockH>
 8007a9e:	b003      	add	sp, #12
 8007aa0:	bd30      	pop	{r4, r5, pc}

08007aa2 <GUI_CreateDialogBox>:
 8007aa2:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8007aa6:	4606      	mov	r6, r0
 8007aa8:	4688      	mov	r8, r1
 8007aaa:	4614      	mov	r4, r2
 8007aac:	461d      	mov	r5, r3
 8007aae:	b913      	cbnz	r3, 8007ab6 <GUI_CreateDialogBox+0x14>
 8007ab0:	f7ff fbb0 	bl	8007214 <WM_GetDesktopWindow>
 8007ab4:	4605      	mov	r5, r0
 8007ab6:	9400      	str	r4, [sp, #0]
 8007ab8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007aba:	6834      	ldr	r4, [r6, #0]
 8007abc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8007abe:	4629      	mov	r1, r5
 8007ac0:	4630      	mov	r0, r6
 8007ac2:	47a0      	blx	r4
 8007ac4:	4604      	mov	r4, r0
 8007ac6:	2800      	cmp	r0, #0
 8007ac8:	d03e      	beq.n	8007b48 <GUI_CreateDialogBox+0xa6>
 8007aca:	f7ff fb95 	bl	80071f8 <WM_GetClientWindow>
 8007ace:	4607      	mov	r7, r0
 8007ad0:	8a71      	ldrh	r1, [r6, #18]
 8007ad2:	4620      	mov	r0, r4
 8007ad4:	f000 fbaa 	bl	800822c <WIDGET_OrState>
 8007ad8:	4620      	mov	r0, r4
 8007ada:	f7ff fdcc 	bl	8007676 <WM_ShowWindow>
 8007ade:	4638      	mov	r0, r7
 8007ae0:	f7ff fdc9 	bl	8007676 <WM_ShowWindow>
 8007ae4:	f04f 0900 	mov.w	r9, #0
 8007ae8:	f108 38ff 	add.w	r8, r8, #4294967295
 8007aec:	f1b8 0f00 	cmp.w	r8, #0
 8007af0:	dd12      	ble.n	8007b18 <GUI_CreateDialogBox+0x76>
 8007af2:	f856 af1c 	ldr.w	sl, [r6, #28]!
 8007af6:	2300      	movs	r3, #0
 8007af8:	f8cd 9000 	str.w	r9, [sp]
 8007afc:	461a      	mov	r2, r3
 8007afe:	4639      	mov	r1, r7
 8007b00:	4630      	mov	r0, r6
 8007b02:	47d0      	blx	sl
 8007b04:	4682      	mov	sl, r0
 8007b06:	b920      	cbnz	r0, 8007b12 <GUI_CreateDialogBox+0x70>
 8007b08:	4620      	mov	r0, r4
 8007b0a:	f7fe ff41 	bl	8006990 <WM_DeleteWindow>
 8007b0e:	4650      	mov	r0, sl
 8007b10:	e01b      	b.n	8007b4a <GUI_CreateDialogBox+0xa8>
 8007b12:	f7ff fdb0 	bl	8007676 <WM_ShowWindow>
 8007b16:	e7e7      	b.n	8007ae8 <GUI_CreateDialogBox+0x46>
 8007b18:	211d      	movs	r1, #29
 8007b1a:	4638      	mov	r0, r7
 8007b1c:	f7ff fcfd 	bl	800751a <WM_SendMessageNoPara>
 8007b20:	1c6b      	adds	r3, r5, #1
 8007b22:	d011      	beq.n	8007b48 <GUI_CreateDialogBox+0xa6>
 8007b24:	f7ff fb8a 	bl	800723c <WM_GetFocusedWindow>
 8007b28:	b150      	cbz	r0, 8007b40 <GUI_CreateDialogBox+0x9e>
 8007b2a:	f7fa fa87 	bl	800203c <GUI_ALLOC_h2p>
 8007b2e:	6980      	ldr	r0, [r0, #24]
 8007b30:	4284      	cmp	r4, r0
 8007b32:	d009      	beq.n	8007b48 <GUI_CreateDialogBox+0xa6>
 8007b34:	2800      	cmp	r0, #0
 8007b36:	d1f8      	bne.n	8007b2a <GUI_CreateDialogBox+0x88>
 8007b38:	4620      	mov	r0, r4
 8007b3a:	f002 fce9 	bl	800a510 <WM_SetFocusOnNextChild>
 8007b3e:	e003      	b.n	8007b48 <GUI_CreateDialogBox+0xa6>
 8007b40:	42a5      	cmp	r5, r4
 8007b42:	d1f9      	bne.n	8007b38 <GUI_CreateDialogBox+0x96>
 8007b44:	4628      	mov	r0, r5
 8007b46:	e000      	b.n	8007b4a <GUI_CreateDialogBox+0xa8>
 8007b48:	4620      	mov	r0, r4
 8007b4a:	b002      	add	sp, #8
 8007b4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08007b50 <PROGBAR_Callback>:
 8007b50:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007b52:	6845      	ldr	r5, [r0, #4]
 8007b54:	4604      	mov	r4, r0
 8007b56:	4601      	mov	r1, r0
 8007b58:	4628      	mov	r0, r5
 8007b5a:	f000 fb7c 	bl	8008256 <WIDGET_HandleActive>
 8007b5e:	b310      	cbz	r0, 8007ba6 <PROGBAR_Callback+0x56>
 8007b60:	6823      	ldr	r3, [r4, #0]
 8007b62:	2b0b      	cmp	r3, #11
 8007b64:	d010      	beq.n	8007b88 <PROGBAR_Callback+0x38>
 8007b66:	2b0f      	cmp	r3, #15
 8007b68:	d11a      	bne.n	8007ba0 <PROGBAR_Callback+0x50>
 8007b6a:	4628      	mov	r0, r5
 8007b6c:	f7fa fa70 	bl	8002050 <GUI_ALLOC_LockH>
 8007b70:	ab02      	add	r3, sp, #8
 8007b72:	f843 0d04 	str.w	r0, [r3, #-4]!
 8007b76:	6e42      	ldr	r2, [r0, #100]	@ 0x64
 8007b78:	4618      	mov	r0, r3
 8007b7a:	6814      	ldr	r4, [r2, #0]
 8007b7c:	f7fa fa76 	bl	800206c <GUI_ALLOC_UnlockH>
 8007b80:	b18c      	cbz	r4, 8007ba6 <PROGBAR_Callback+0x56>
 8007b82:	4628      	mov	r0, r5
 8007b84:	47a0      	blx	r4
 8007b86:	e00e      	b.n	8007ba6 <PROGBAR_Callback+0x56>
 8007b88:	4628      	mov	r0, r5
 8007b8a:	f7fa fa61 	bl	8002050 <GUI_ALLOC_LockH>
 8007b8e:	ad02      	add	r5, sp, #8
 8007b90:	f845 0d04 	str.w	r0, [r5, #-4]!
 8007b94:	3038      	adds	r0, #56	@ 0x38
 8007b96:	f7fa fc2d 	bl	80023f4 <GUI_ALLOC_FreePtr>
 8007b9a:	4628      	mov	r0, r5
 8007b9c:	f7fa fa66 	bl	800206c <GUI_ALLOC_UnlockH>
 8007ba0:	4620      	mov	r0, r4
 8007ba2:	f7ff fa47 	bl	8007034 <WM_DefaultProc>
 8007ba6:	b003      	add	sp, #12
 8007ba8:	bd30      	pop	{r4, r5, pc}

08007baa <_SetValue>:
 8007baa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007bac:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8007bae:	ac02      	add	r4, sp, #8
 8007bb0:	f844 1d04 	str.w	r1, [r4, #-4]!
 8007bb4:	6342      	str	r2, [r0, #52]	@ 0x34
 8007bb6:	2164      	movs	r1, #100	@ 0x64
 8007bb8:	1b52      	subs	r2, r2, r5
 8007bba:	434a      	muls	r2, r1
 8007bbc:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8007bbe:	4621      	mov	r1, r4
 8007bc0:	1b58      	subs	r0, r3, r5
 8007bc2:	fb92 f0f0 	sdiv	r0, r2, r0
 8007bc6:	f001 f9c6 	bl	8008f56 <GUI_AddDecMin>
 8007bca:	9b01      	ldr	r3, [sp, #4]
 8007bcc:	1c5a      	adds	r2, r3, #1
 8007bce:	9201      	str	r2, [sp, #4]
 8007bd0:	2225      	movs	r2, #37	@ 0x25
 8007bd2:	701a      	strb	r2, [r3, #0]
 8007bd4:	9b01      	ldr	r3, [sp, #4]
 8007bd6:	2200      	movs	r2, #0
 8007bd8:	701a      	strb	r2, [r3, #0]
 8007bda:	b003      	add	sp, #12
 8007bdc:	bd30      	pop	{r4, r5, pc}

08007bde <PROGBAR__GetTextLocked>:
 8007bde:	6b80      	ldr	r0, [r0, #56]	@ 0x38
 8007be0:	f7fa ba36 	b.w	8002050 <GUI_ALLOC_LockH>

08007be4 <PROGBAR__GetTextRect>:
 8007be4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007be8:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8007bec:	f9b0 4000 	ldrsh.w	r4, [r0]
 8007bf0:	f9b0 7002 	ldrsh.w	r7, [r0, #2]
 8007bf4:	1b1c      	subs	r4, r3, r4
 8007bf6:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8007bfa:	4680      	mov	r8, r0
 8007bfc:	4610      	mov	r0, r2
 8007bfe:	1bdf      	subs	r7, r3, r7
 8007c00:	460d      	mov	r5, r1
 8007c02:	f7fb f8e1 	bl	8002dc8 <GUI_GetStringDistX>
 8007c06:	4606      	mov	r6, r0
 8007c08:	f7fa fce4 	bl	80025d4 <GUI_GetFontSizeY>
 8007c0c:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
 8007c10:	3401      	adds	r4, #1
 8007c12:	681a      	ldr	r2, [r3, #0]
 8007c14:	f8b8 3040 	ldrh.w	r3, [r8, #64]	@ 0x40
 8007c18:	3701      	adds	r7, #1
 8007c1a:	f003 0303 	and.w	r3, r3, #3
 8007c1e:	2b01      	cmp	r3, #1
 8007c20:	d006      	beq.n	8007c30 <PROGBAR__GetTextRect+0x4c>
 8007c22:	2b02      	cmp	r3, #2
 8007c24:	d109      	bne.n	8007c3a <PROGBAR__GetTextRect+0x56>
 8007c26:	1ba4      	subs	r4, r4, r6
 8007c28:	fb94 f3f3 	sdiv	r3, r4, r3
 8007c2c:	802b      	strh	r3, [r5, #0]
 8007c2e:	e005      	b.n	8007c3c <PROGBAR__GetTextRect+0x58>
 8007c30:	43d2      	mvns	r2, r2
 8007c32:	4414      	add	r4, r2
 8007c34:	1ba4      	subs	r4, r4, r6
 8007c36:	802c      	strh	r4, [r5, #0]
 8007c38:	e000      	b.n	8007c3c <PROGBAR__GetTextRect+0x58>
 8007c3a:	802a      	strh	r2, [r5, #0]
 8007c3c:	f8b8 203c 	ldrh.w	r2, [r8, #60]	@ 0x3c
 8007c40:	882b      	ldrh	r3, [r5, #0]
 8007c42:	1a3f      	subs	r7, r7, r0
 8007c44:	4413      	add	r3, r2
 8007c46:	2202      	movs	r2, #2
 8007c48:	fb97 f2f2 	sdiv	r2, r7, r2
 8007c4c:	f8b8 103e 	ldrh.w	r1, [r8, #62]	@ 0x3e
 8007c50:	b29b      	uxth	r3, r3
 8007c52:	440a      	add	r2, r1
 8007c54:	b292      	uxth	r2, r2
 8007c56:	802b      	strh	r3, [r5, #0]
 8007c58:	3801      	subs	r0, #1
 8007c5a:	3b01      	subs	r3, #1
 8007c5c:	4433      	add	r3, r6
 8007c5e:	4410      	add	r0, r2
 8007c60:	806a      	strh	r2, [r5, #2]
 8007c62:	80ab      	strh	r3, [r5, #4]
 8007c64:	80e8      	strh	r0, [r5, #6]
 8007c66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007c6a <PROGBAR__Value2Pos>:
 8007c6a:	460a      	mov	r2, r1
 8007c6c:	b570      	push	{r4, r5, r6, lr}
 8007c6e:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 8007c72:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8007c74:	f013 0601 	ands.w	r6, r3, #1
 8007c78:	bf15      	itete	ne
 8007c7a:	f9b0 4006 	ldrshne.w	r4, [r0, #6]
 8007c7e:	f9b0 4004 	ldrsheq.w	r4, [r0, #4]
 8007c82:	f9b0 3002 	ldrshne.w	r3, [r0, #2]
 8007c86:	f9b0 3000 	ldrsheq.w	r3, [r0]
 8007c8a:	42aa      	cmp	r2, r5
 8007c8c:	bfb8      	it	lt
 8007c8e:	462a      	movlt	r2, r5
 8007c90:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 8007c92:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 8007c94:	1ae3      	subs	r3, r4, r3
 8007c96:	6809      	ldr	r1, [r1, #0]
 8007c98:	3301      	adds	r3, #1
 8007c9a:	4282      	cmp	r2, r0
 8007c9c:	bfa8      	it	ge
 8007c9e:	4602      	movge	r2, r0
 8007ca0:	eba3 0441 	sub.w	r4, r3, r1, lsl #1
 8007ca4:	b10e      	cbz	r6, 8007caa <PROGBAR__Value2Pos+0x40>
 8007ca6:	1a83      	subs	r3, r0, r2
 8007ca8:	e000      	b.n	8007cac <PROGBAR__Value2Pos+0x42>
 8007caa:	1b53      	subs	r3, r2, r5
 8007cac:	fb04 f203 	mul.w	r2, r4, r3
 8007cb0:	1b43      	subs	r3, r0, r5
 8007cb2:	fb92 f0f3 	sdiv	r0, r2, r3
 8007cb6:	4408      	add	r0, r1
 8007cb8:	bd70      	pop	{r4, r5, r6, pc}
	...

08007cbc <PROGBAR_CreateUser>:
 8007cbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007cc0:	b087      	sub	sp, #28
 8007cc2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8007cc4:	3440      	adds	r4, #64	@ 0x40
 8007cc6:	9403      	str	r4, [sp, #12]
 8007cc8:	4c27      	ldr	r4, [pc, #156]	@ (8007d68 <PROGBAR_CreateUser+0xac>)
 8007cca:	9402      	str	r4, [sp, #8]
 8007ccc:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8007cce:	9401      	str	r4, [sp, #4]
 8007cd0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8007cd2:	9400      	str	r4, [sp, #0]
 8007cd4:	f7fe fdac 	bl	8006830 <WM_CreateWindowAsChild>
 8007cd8:	4607      	mov	r7, r0
 8007cda:	2800      	cmp	r0, #0
 8007cdc:	d040      	beq.n	8007d60 <PROGBAR_CreateUser+0xa4>
 8007cde:	2005      	movs	r0, #5
 8007ce0:	f7fa fb90 	bl	8002404 <GUI_ALLOC_AllocZero>
 8007ce4:	4680      	mov	r8, r0
 8007ce6:	2800      	cmp	r0, #0
 8007ce8:	d03a      	beq.n	8007d60 <PROGBAR_CreateUser+0xa4>
 8007cea:	4638      	mov	r0, r7
 8007cec:	f7fa f9b0 	bl	8002050 <GUI_ALLOC_LockH>
 8007cf0:	f8df 907c 	ldr.w	r9, [pc, #124]	@ 8007d70 <PROGBAR_CreateUser+0xb4>
 8007cf4:	2200      	movs	r2, #0
 8007cf6:	464c      	mov	r4, r9
 8007cf8:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8007cfa:	9004      	str	r0, [sp, #16]
 8007cfc:	f000 fa7c 	bl	80081f8 <WIDGET__Init>
 8007d00:	491a      	ldr	r1, [pc, #104]	@ (8007d6c <PROGBAR_CreateUser+0xb0>)
 8007d02:	4638      	mov	r0, r7
 8007d04:	f000 fb47 	bl	8008396 <WIDGET_SetEffect>
 8007d08:	9e04      	ldr	r6, [sp, #16]
 8007d0a:	f854 3b04 	ldr.w	r3, [r4], #4
 8007d0e:	f106 054c 	add.w	r5, r6, #76	@ 0x4c
 8007d12:	6673      	str	r3, [r6, #100]	@ 0x64
 8007d14:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007d16:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8007d18:	e894 0003 	ldmia.w	r4, {r0, r1}
 8007d1c:	2302      	movs	r3, #2
 8007d1e:	e885 0003 	stmia.w	r5, {r0, r1}
 8007d22:	f8a6 3040 	strh.w	r3, [r6, #64]	@ 0x40
 8007d26:	2364      	movs	r3, #100	@ 0x64
 8007d28:	64b3      	str	r3, [r6, #72]	@ 0x48
 8007d2a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8007d2c:	2400      	movs	r4, #0
 8007d2e:	f886 3068 	strb.w	r3, [r6, #104]	@ 0x68
 8007d32:	6474      	str	r4, [r6, #68]	@ 0x44
 8007d34:	f8c6 8038 	str.w	r8, [r6, #56]	@ 0x38
 8007d38:	4640      	mov	r0, r8
 8007d3a:	f7fa f989 	bl	8002050 <GUI_ALLOC_LockH>
 8007d3e:	4622      	mov	r2, r4
 8007d40:	4601      	mov	r1, r0
 8007d42:	9005      	str	r0, [sp, #20]
 8007d44:	9804      	ldr	r0, [sp, #16]
 8007d46:	f7ff ff30 	bl	8007baa <_SetValue>
 8007d4a:	a805      	add	r0, sp, #20
 8007d4c:	f7fa f98e 	bl	800206c <GUI_ALLOC_UnlockH>
 8007d50:	a804      	add	r0, sp, #16
 8007d52:	f7fa f98b 	bl	800206c <GUI_ALLOC_UnlockH>
 8007d56:	f8d9 3000 	ldr.w	r3, [r9]
 8007d5a:	4638      	mov	r0, r7
 8007d5c:	685b      	ldr	r3, [r3, #4]
 8007d5e:	4798      	blx	r3
 8007d60:	4638      	mov	r0, r7
 8007d62:	b007      	add	sp, #28
 8007d64:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007d68:	08007b51 	.word	0x08007b51
 8007d6c:	0800be80 	.word	0x0800be80
 8007d70:	20000038 	.word	0x20000038

08007d74 <PROGBAR_CreateIndirect>:
 8007d74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007d76:	4604      	mov	r4, r0
 8007d78:	f9b0 500c 	ldrsh.w	r5, [r0, #12]
 8007d7c:	b087      	sub	sp, #28
 8007d7e:	441d      	add	r5, r3
 8007d80:	69a3      	ldr	r3, [r4, #24]
 8007d82:	f9b0 7010 	ldrsh.w	r7, [r0, #16]
 8007d86:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8007d8a:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 8007d8e:	9304      	str	r3, [sp, #16]
 8007d90:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8007d94:	4410      	add	r0, r2
 8007d96:	9303      	str	r3, [sp, #12]
 8007d98:	8a63      	ldrh	r3, [r4, #18]
 8007d9a:	4632      	mov	r2, r6
 8007d9c:	9302      	str	r3, [sp, #8]
 8007d9e:	2300      	movs	r3, #0
 8007da0:	e88d 000a 	stmia.w	sp, {r1, r3}
 8007da4:	463b      	mov	r3, r7
 8007da6:	4629      	mov	r1, r5
 8007da8:	f7ff ff88 	bl	8007cbc <PROGBAR_CreateUser>
 8007dac:	b007      	add	sp, #28
 8007dae:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007db0 <PROGBAR_SetValue>:
 8007db0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007db4:	460c      	mov	r4, r1
 8007db6:	b087      	sub	sp, #28
 8007db8:	4681      	mov	r9, r0
 8007dba:	2800      	cmp	r0, #0
 8007dbc:	f000 809c 	beq.w	8007ef8 <PROGBAR_SetValue+0x148>
 8007dc0:	f7fa f946 	bl	8002050 <GUI_ALLOC_LockH>
 8007dc4:	6c41      	ldr	r1, [r0, #68]	@ 0x44
 8007dc6:	6b45      	ldr	r5, [r0, #52]	@ 0x34
 8007dc8:	428c      	cmp	r4, r1
 8007dca:	bfb8      	it	lt
 8007dcc:	460c      	movlt	r4, r1
 8007dce:	6c81      	ldr	r1, [r0, #72]	@ 0x48
 8007dd0:	f10d 0818 	add.w	r8, sp, #24
 8007dd4:	428c      	cmp	r4, r1
 8007dd6:	bfa8      	it	ge
 8007dd8:	460c      	movge	r4, r1
 8007dda:	42a5      	cmp	r5, r4
 8007ddc:	4607      	mov	r7, r0
 8007dde:	f848 0d18 	str.w	r0, [r8, #-24]!
 8007de2:	f000 8086 	beq.w	8007ef2 <PROGBAR_SetValue+0x142>
 8007de6:	f890 6068 	ldrb.w	r6, [r0, #104]	@ 0x68
 8007dea:	07f3      	lsls	r3, r6, #31
 8007dec:	d51b      	bpl.n	8007e26 <PROGBAR_SetValue+0x76>
 8007dee:	42a5      	cmp	r5, r4
 8007df0:	dd06      	ble.n	8007e00 <PROGBAR_SetValue+0x50>
 8007df2:	4621      	mov	r1, r4
 8007df4:	f7ff ff39 	bl	8007c6a <PROGBAR__Value2Pos>
 8007df8:	4629      	mov	r1, r5
 8007dfa:	f8ad 000e 	strh.w	r0, [sp, #14]
 8007dfe:	e005      	b.n	8007e0c <PROGBAR_SetValue+0x5c>
 8007e00:	4629      	mov	r1, r5
 8007e02:	f7ff ff32 	bl	8007c6a <PROGBAR__Value2Pos>
 8007e06:	4621      	mov	r1, r4
 8007e08:	f8ad 000e 	strh.w	r0, [sp, #14]
 8007e0c:	4638      	mov	r0, r7
 8007e0e:	f7ff ff2c 	bl	8007c6a <PROGBAR__Value2Pos>
 8007e12:	2300      	movs	r3, #0
 8007e14:	f8ad 3008 	strh.w	r3, [sp, #8]
 8007e18:	f640 73ff 	movw	r3, #4095	@ 0xfff
 8007e1c:	f8ad 000a 	strh.w	r0, [sp, #10]
 8007e20:	f8ad 300c 	strh.w	r3, [sp, #12]
 8007e24:	e060      	b.n	8007ee8 <PROGBAR_SetValue+0x138>
 8007e26:	42a5      	cmp	r5, r4
 8007e28:	dd06      	ble.n	8007e38 <PROGBAR_SetValue+0x88>
 8007e2a:	4621      	mov	r1, r4
 8007e2c:	f7ff ff1d 	bl	8007c6a <PROGBAR__Value2Pos>
 8007e30:	4629      	mov	r1, r5
 8007e32:	f8ad 0008 	strh.w	r0, [sp, #8]
 8007e36:	e005      	b.n	8007e44 <PROGBAR_SetValue+0x94>
 8007e38:	4629      	mov	r1, r5
 8007e3a:	f7ff ff16 	bl	8007c6a <PROGBAR__Value2Pos>
 8007e3e:	4621      	mov	r1, r4
 8007e40:	f8ad 0008 	strh.w	r0, [sp, #8]
 8007e44:	4638      	mov	r0, r7
 8007e46:	f7ff ff10 	bl	8007c6a <PROGBAR__Value2Pos>
 8007e4a:	2300      	movs	r3, #0
 8007e4c:	f8ad 300a 	strh.w	r3, [sp, #10]
 8007e50:	f640 73ff 	movw	r3, #4095	@ 0xfff
 8007e54:	f006 0602 	and.w	r6, r6, #2
 8007e58:	f8ad 300e 	strh.w	r3, [sp, #14]
 8007e5c:	f8ad 000c 	strh.w	r0, [sp, #12]
 8007e60:	f006 03ff 	and.w	r3, r6, #255	@ 0xff
 8007e64:	2e00      	cmp	r6, #0
 8007e66:	d13f      	bne.n	8007ee8 <PROGBAR_SetValue+0x138>
 8007e68:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8007e6a:	9304      	str	r3, [sp, #16]
 8007e6c:	9305      	str	r3, [sp, #20]
 8007e6e:	f7fa f91d 	bl	80020ac <GUI_ALLOC_GetSize>
 8007e72:	2804      	cmp	r0, #4
 8007e74:	dc0e      	bgt.n	8007e94 <PROGBAR_SetValue+0xe4>
 8007e76:	9b00      	ldr	r3, [sp, #0]
 8007e78:	4640      	mov	r0, r8
 8007e7a:	6b9d      	ldr	r5, [r3, #56]	@ 0x38
 8007e7c:	f7fa f8f6 	bl	800206c <GUI_ALLOC_UnlockH>
 8007e80:	2105      	movs	r1, #5
 8007e82:	4628      	mov	r0, r5
 8007e84:	f7fa fad6 	bl	8002434 <GUI_ALLOC_Realloc>
 8007e88:	4605      	mov	r5, r0
 8007e8a:	4648      	mov	r0, r9
 8007e8c:	f7fa f8e0 	bl	8002050 <GUI_ALLOC_LockH>
 8007e90:	9000      	str	r0, [sp, #0]
 8007e92:	6385      	str	r5, [r0, #56]	@ 0x38
 8007e94:	9800      	ldr	r0, [sp, #0]
 8007e96:	f7ff fea2 	bl	8007bde <PROGBAR__GetTextLocked>
 8007e9a:	9001      	str	r0, [sp, #4]
 8007e9c:	b328      	cbz	r0, 8007eea <PROGBAR_SetValue+0x13a>
 8007e9e:	9b00      	ldr	r3, [sp, #0]
 8007ea0:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8007ea2:	f7fa fc6b 	bl	800277c <GUI_SetFont>
 8007ea6:	4605      	mov	r5, r0
 8007ea8:	9a01      	ldr	r2, [sp, #4]
 8007eaa:	a904      	add	r1, sp, #16
 8007eac:	9800      	ldr	r0, [sp, #0]
 8007eae:	f7ff fe99 	bl	8007be4 <PROGBAR__GetTextRect>
 8007eb2:	a902      	add	r1, sp, #8
 8007eb4:	aa04      	add	r2, sp, #16
 8007eb6:	4608      	mov	r0, r1
 8007eb8:	f7fa fba8 	bl	800260c <GUI_MergeRect>
 8007ebc:	e89d 0003 	ldmia.w	sp, {r0, r1}
 8007ec0:	4622      	mov	r2, r4
 8007ec2:	f7ff fe72 	bl	8007baa <_SetValue>
 8007ec6:	9a01      	ldr	r2, [sp, #4]
 8007ec8:	a904      	add	r1, sp, #16
 8007eca:	9800      	ldr	r0, [sp, #0]
 8007ecc:	f7ff fe8a 	bl	8007be4 <PROGBAR__GetTextRect>
 8007ed0:	a902      	add	r1, sp, #8
 8007ed2:	4608      	mov	r0, r1
 8007ed4:	aa04      	add	r2, sp, #16
 8007ed6:	f7fa fb99 	bl	800260c <GUI_MergeRect>
 8007eda:	4628      	mov	r0, r5
 8007edc:	f7fa fc4e 	bl	800277c <GUI_SetFont>
 8007ee0:	a801      	add	r0, sp, #4
 8007ee2:	f7fa f8c3 	bl	800206c <GUI_ALLOC_UnlockH>
 8007ee6:	e000      	b.n	8007eea <PROGBAR_SetValue+0x13a>
 8007ee8:	637c      	str	r4, [r7, #52]	@ 0x34
 8007eea:	a902      	add	r1, sp, #8
 8007eec:	4648      	mov	r0, r9
 8007eee:	f7fe fc36 	bl	800675e <WM_InvalidateRect>
 8007ef2:	4640      	mov	r0, r8
 8007ef4:	f7fa f8ba 	bl	800206c <GUI_ALLOC_UnlockH>
 8007ef8:	b007      	add	sp, #28
 8007efa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08007efe <_Create>:
 8007efe:	b530      	push	{r4, r5, lr}
 8007f00:	b08b      	sub	sp, #44	@ 0x2c
 8007f02:	4605      	mov	r5, r0
 8007f04:	f7fa f8a4 	bl	8002050 <GUI_ALLOC_LockH>
 8007f08:	ab0a      	add	r3, sp, #40	@ 0x28
 8007f0a:	6e42      	ldr	r2, [r0, #100]	@ 0x64
 8007f0c:	f843 0d28 	str.w	r0, [r3, #-40]!
 8007f10:	6894      	ldr	r4, [r2, #8]
 8007f12:	4618      	mov	r0, r3
 8007f14:	f7fa f8aa 	bl	800206c <GUI_ALLOC_UnlockH>
 8007f18:	a80a      	add	r0, sp, #40	@ 0x28
 8007f1a:	2300      	movs	r3, #0
 8007f1c:	9302      	str	r3, [sp, #8]
 8007f1e:	f840 5d24 	str.w	r5, [r0, #-36]!
 8007f22:	6823      	ldr	r3, [r4, #0]
 8007f24:	4798      	blx	r3
 8007f26:	b00b      	add	sp, #44	@ 0x2c
 8007f28:	bd30      	pop	{r4, r5, pc}

08007f2a <_Paint>:
 8007f2a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007f2e:	b093      	sub	sp, #76	@ 0x4c
 8007f30:	4605      	mov	r5, r0
 8007f32:	f7fa f88d 	bl	8002050 <GUI_ALLOC_LockH>
 8007f36:	f890 2068 	ldrb.w	r2, [r0, #104]	@ 0x68
 8007f3a:	6b41      	ldr	r1, [r0, #52]	@ 0x34
 8007f3c:	f002 0201 	and.w	r2, r2, #1
 8007f40:	9206      	str	r2, [sp, #24]
 8007f42:	6e06      	ldr	r6, [r0, #96]	@ 0x60
 8007f44:	9000      	str	r0, [sp, #0]
 8007f46:	f8d0 804c 	ldr.w	r8, [r0, #76]	@ 0x4c
 8007f4a:	f7ff fe8e 	bl	8007c6a <PROGBAR__Value2Pos>
 8007f4e:	af02      	add	r7, sp, #8
 8007f50:	4604      	mov	r4, r0
 8007f52:	4668      	mov	r0, sp
 8007f54:	f7fa f88a 	bl	800206c <GUI_ALLOC_UnlockH>
 8007f58:	ab06      	add	r3, sp, #24
 8007f5a:	4639      	mov	r1, r7
 8007f5c:	4628      	mov	r0, r5
 8007f5e:	9311      	str	r3, [sp, #68]	@ 0x44
 8007f60:	f7ff f93a 	bl	80071d8 <WM_GetClientRectEx>
 8007f64:	230b      	movs	r3, #11
 8007f66:	930a      	str	r3, [sp, #40]	@ 0x28
 8007f68:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8007f6c:	f10d 0910 	add.w	r9, sp, #16
 8007f70:	930d      	str	r3, [sp, #52]	@ 0x34
 8007f72:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8007f76:	9509      	str	r5, [sp, #36]	@ 0x24
 8007f78:	930e      	str	r3, [sp, #56]	@ 0x38
 8007f7a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8007f7e:	a809      	add	r0, sp, #36	@ 0x24
 8007f80:	930f      	str	r3, [sp, #60]	@ 0x3c
 8007f82:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8007f86:	9310      	str	r3, [sp, #64]	@ 0x40
 8007f88:	47b0      	blx	r6
 8007f8a:	e897 0003 	ldmia.w	r7, {r0, r1}
 8007f8e:	2201      	movs	r2, #1
 8007f90:	e889 0003 	stmia.w	r9, {r0, r1}
 8007f94:	4649      	mov	r1, r9
 8007f96:	4648      	mov	r0, r9
 8007f98:	f7fb f800 	bl	8002f9c <GUI__ReduceRect>
 8007f9c:	4648      	mov	r0, r9
 8007f9e:	f7ff fb4b 	bl	8007638 <WM_SetUserClipRect>
 8007fa2:	2305      	movs	r3, #5
 8007fa4:	930a      	str	r3, [sp, #40]	@ 0x28
 8007fa6:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8007faa:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8007fae:	9906      	ldr	r1, [sp, #24]
 8007fb0:	9509      	str	r5, [sp, #36]	@ 0x24
 8007fb2:	930d      	str	r3, [sp, #52]	@ 0x34
 8007fb4:	920e      	str	r2, [sp, #56]	@ 0x38
 8007fb6:	b129      	cbz	r1, 8007fc4 <_Paint+0x9a>
 8007fb8:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8007fbc:	4422      	add	r2, r4
 8007fbe:	930f      	str	r3, [sp, #60]	@ 0x3c
 8007fc0:	9210      	str	r2, [sp, #64]	@ 0x40
 8007fc2:	e004      	b.n	8007fce <_Paint+0xa4>
 8007fc4:	4423      	add	r3, r4
 8007fc6:	930f      	str	r3, [sp, #60]	@ 0x3c
 8007fc8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8007fcc:	9310      	str	r3, [sp, #64]	@ 0x40
 8007fce:	2300      	movs	r3, #0
 8007fd0:	9307      	str	r3, [sp, #28]
 8007fd2:	a809      	add	r0, sp, #36	@ 0x24
 8007fd4:	47b0      	blx	r6
 8007fd6:	9b06      	ldr	r3, [sp, #24]
 8007fd8:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8007fdc:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8007fe0:	f9bd 000c 	ldrsh.w	r0, [sp, #12]
 8007fe4:	f9bd 100e 	ldrsh.w	r1, [sp, #14]
 8007fe8:	b12b      	cbz	r3, 8007ff6 <_Paint+0xcc>
 8007fea:	4414      	add	r4, r2
 8007fec:	3401      	adds	r4, #1
 8007fee:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8007ff2:	940e      	str	r4, [sp, #56]	@ 0x38
 8007ff4:	e004      	b.n	8008000 <_Paint+0xd6>
 8007ff6:	eb0e 0304 	add.w	r3, lr, r4
 8007ffa:	3301      	adds	r3, #1
 8007ffc:	930d      	str	r3, [sp, #52]	@ 0x34
 8007ffe:	920e      	str	r2, [sp, #56]	@ 0x38
 8008000:	2301      	movs	r3, #1
 8008002:	9110      	str	r1, [sp, #64]	@ 0x40
 8008004:	9307      	str	r3, [sp, #28]
 8008006:	900f      	str	r0, [sp, #60]	@ 0x3c
 8008008:	a809      	add	r0, sp, #36	@ 0x24
 800800a:	47b0      	blx	r6
 800800c:	4628      	mov	r0, r5
 800800e:	f7fa f81f 	bl	8002050 <GUI_ALLOC_LockH>
 8008012:	9000      	str	r0, [sp, #0]
 8008014:	f7ff fde3 	bl	8007bde <PROGBAR__GetTextLocked>
 8008018:	9001      	str	r0, [sp, #4]
 800801a:	b1f8      	cbz	r0, 800805c <_Paint+0x132>
 800801c:	4640      	mov	r0, r8
 800801e:	f7fa fbad 	bl	800277c <GUI_SetFont>
 8008022:	9a01      	ldr	r2, [sp, #4]
 8008024:	4639      	mov	r1, r7
 8008026:	9800      	ldr	r0, [sp, #0]
 8008028:	f7ff fddc 	bl	8007be4 <PROGBAR__GetTextRect>
 800802c:	4668      	mov	r0, sp
 800802e:	f7fa f81d 	bl	800206c <GUI_ALLOC_UnlockH>
 8008032:	9b01      	ldr	r3, [sp, #4]
 8008034:	9509      	str	r5, [sp, #36]	@ 0x24
 8008036:	9308      	str	r3, [sp, #32]
 8008038:	2312      	movs	r3, #18
 800803a:	930a      	str	r3, [sp, #40]	@ 0x28
 800803c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8008040:	a809      	add	r0, sp, #36	@ 0x24
 8008042:	930d      	str	r3, [sp, #52]	@ 0x34
 8008044:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8008048:	930e      	str	r3, [sp, #56]	@ 0x38
 800804a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800804e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8008050:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8008054:	9310      	str	r3, [sp, #64]	@ 0x40
 8008056:	47b0      	blx	r6
 8008058:	a801      	add	r0, sp, #4
 800805a:	e000      	b.n	800805e <_Paint+0x134>
 800805c:	4668      	mov	r0, sp
 800805e:	f7fa f805 	bl	800206c <GUI_ALLOC_UnlockH>
 8008062:	2000      	movs	r0, #0
 8008064:	f7ff fae8 	bl	8007638 <WM_SetUserClipRect>
 8008068:	b013      	add	sp, #76	@ 0x4c
 800806a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08008070 <PROGBAR_DrawSkinFlex>:
 8008070:	6843      	ldr	r3, [r0, #4]
 8008072:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008076:	2b0b      	cmp	r3, #11
 8008078:	4604      	mov	r4, r0
 800807a:	6a07      	ldr	r7, [r0, #32]
 800807c:	d006      	beq.n	800808c <PROGBAR_DrawSkinFlex+0x1c>
 800807e:	2b12      	cmp	r3, #18
 8008080:	f000 8097 	beq.w	80081b2 <PROGBAR_DrawSkinFlex+0x142>
 8008084:	2b05      	cmp	r3, #5
 8008086:	f040 80a3 	bne.w	80081d0 <PROGBAR_DrawSkinFlex+0x160>
 800808a:	e01c      	b.n	80080c6 <PROGBAR_DrawSkinFlex+0x56>
 800808c:	4b52      	ldr	r3, [pc, #328]	@ (80081d8 <PROGBAR_DrawSkinFlex+0x168>)
 800808e:	6a18      	ldr	r0, [r3, #32]
 8008090:	f7fa fb6f 	bl	8002772 <GUI_SetColor>
 8008094:	69a2      	ldr	r2, [r4, #24]
 8008096:	6921      	ldr	r1, [r4, #16]
 8008098:	6960      	ldr	r0, [r4, #20]
 800809a:	f000 fe5f 	bl	8008d5c <GUI_DrawHLine>
 800809e:	69a2      	ldr	r2, [r4, #24]
 80080a0:	6921      	ldr	r1, [r4, #16]
 80080a2:	69e0      	ldr	r0, [r4, #28]
 80080a4:	f000 fe5a 	bl	8008d5c <GUI_DrawHLine>
 80080a8:	69e2      	ldr	r2, [r4, #28]
 80080aa:	6961      	ldr	r1, [r4, #20]
 80080ac:	6920      	ldr	r0, [r4, #16]
 80080ae:	3a01      	subs	r2, #1
 80080b0:	3101      	adds	r1, #1
 80080b2:	f000 fe77 	bl	8008da4 <GUI_DrawVLine>
 80080b6:	69e2      	ldr	r2, [r4, #28]
 80080b8:	6961      	ldr	r1, [r4, #20]
 80080ba:	3a01      	subs	r2, #1
 80080bc:	3101      	adds	r1, #1
 80080be:	69a0      	ldr	r0, [r4, #24]
 80080c0:	f000 fe70 	bl	8008da4 <GUI_DrawVLine>
 80080c4:	e084      	b.n	80081d0 <PROGBAR_DrawSkinFlex+0x160>
 80080c6:	f8d7 e000 	ldr.w	lr, [r7]
 80080ca:	69c6      	ldr	r6, [r0, #28]
 80080cc:	3010      	adds	r0, #16
 80080ce:	4d42      	ldr	r5, [pc, #264]	@ (80081d8 <PROGBAR_DrawSkinFlex+0x168>)
 80080d0:	e890 0103 	ldmia.w	r0, {r0, r1, r8}
 80080d4:	687b      	ldr	r3, [r7, #4]
 80080d6:	f1be 0f00 	cmp.w	lr, #0
 80080da:	d034      	beq.n	8008146 <PROGBAR_DrawSkinFlex+0xd6>
 80080dc:	ebc0 0808 	rsb	r8, r0, r8
 80080e0:	f108 0801 	add.w	r8, r8, #1
 80080e4:	ea4f 0868 	mov.w	r8, r8, asr #1
 80080e8:	b92b      	cbnz	r3, 80080f6 <PROGBAR_DrawSkinFlex+0x86>
 80080ea:	692a      	ldr	r2, [r5, #16]
 80080ec:	f8d5 c014 	ldr.w	ip, [r5, #20]
 80080f0:	f04f 0e01 	mov.w	lr, #1
 80080f4:	e004      	b.n	8008100 <PROGBAR_DrawSkinFlex+0x90>
 80080f6:	2301      	movs	r3, #1
 80080f8:	f04f 0e00 	mov.w	lr, #0
 80080fc:	e895 1004 	ldmia.w	r5, {r2, ip}
 8008100:	e88d 1004 	stmia.w	sp, {r2, ip}
 8008104:	1af3      	subs	r3, r6, r3
 8008106:	eb00 0208 	add.w	r2, r0, r8
 800810a:	4471      	add	r1, lr
 800810c:	3001      	adds	r0, #1
 800810e:	f000 fdf3 	bl	8008cf8 <GUI_DrawGradientH>
 8008112:	687b      	ldr	r3, [r7, #4]
 8008114:	b91b      	cbnz	r3, 800811e <PROGBAR_DrawSkinFlex+0xae>
 8008116:	69ae      	ldr	r6, [r5, #24]
 8008118:	2101      	movs	r1, #1
 800811a:	69ed      	ldr	r5, [r5, #28]
 800811c:	e003      	b.n	8008126 <PROGBAR_DrawSkinFlex+0xb6>
 800811e:	68ae      	ldr	r6, [r5, #8]
 8008120:	68ed      	ldr	r5, [r5, #12]
 8008122:	2301      	movs	r3, #1
 8008124:	2100      	movs	r1, #0
 8008126:	6920      	ldr	r0, [r4, #16]
 8008128:	f8d4 e01c 	ldr.w	lr, [r4, #28]
 800812c:	69a2      	ldr	r2, [r4, #24]
 800812e:	6967      	ldr	r7, [r4, #20]
 8008130:	4440      	add	r0, r8
 8008132:	9501      	str	r5, [sp, #4]
 8008134:	9600      	str	r6, [sp, #0]
 8008136:	ebc3 030e 	rsb	r3, r3, lr
 800813a:	3a01      	subs	r2, #1
 800813c:	4439      	add	r1, r7
 800813e:	3001      	adds	r0, #1
 8008140:	f000 fdda 	bl	8008cf8 <GUI_DrawGradientH>
 8008144:	e044      	b.n	80081d0 <PROGBAR_DrawSkinFlex+0x160>
 8008146:	1a76      	subs	r6, r6, r1
 8008148:	3601      	adds	r6, #1
 800814a:	1076      	asrs	r6, r6, #1
 800814c:	b93b      	cbnz	r3, 800815e <PROGBAR_DrawSkinFlex+0xee>
 800814e:	f8d5 c000 	ldr.w	ip, [r5]
 8008152:	f8d5 9004 	ldr.w	r9, [r5, #4]
 8008156:	461a      	mov	r2, r3
 8008158:	f04f 0e01 	mov.w	lr, #1
 800815c:	e004      	b.n	8008168 <PROGBAR_DrawSkinFlex+0xf8>
 800815e:	f8d5 c010 	ldr.w	ip, [r5, #16]
 8008162:	f8d5 9014 	ldr.w	r9, [r5, #20]
 8008166:	2201      	movs	r2, #1
 8008168:	198b      	adds	r3, r1, r6
 800816a:	ebc2 0208 	rsb	r2, r2, r8
 800816e:	f8cd 9004 	str.w	r9, [sp, #4]
 8008172:	f8cd c000 	str.w	ip, [sp]
 8008176:	3101      	adds	r1, #1
 8008178:	4470      	add	r0, lr
 800817a:	f000 fd8b 	bl	8008c94 <GUI_DrawGradientV>
 800817e:	687a      	ldr	r2, [r7, #4]
 8008180:	b91a      	cbnz	r2, 800818a <PROGBAR_DrawSkinFlex+0x11a>
 8008182:	68af      	ldr	r7, [r5, #8]
 8008184:	2001      	movs	r0, #1
 8008186:	68ed      	ldr	r5, [r5, #12]
 8008188:	e003      	b.n	8008192 <PROGBAR_DrawSkinFlex+0x122>
 800818a:	69af      	ldr	r7, [r5, #24]
 800818c:	69ed      	ldr	r5, [r5, #28]
 800818e:	2201      	movs	r2, #1
 8008190:	2000      	movs	r0, #0
 8008192:	6961      	ldr	r1, [r4, #20]
 8008194:	f8d4 e018 	ldr.w	lr, [r4, #24]
 8008198:	69e3      	ldr	r3, [r4, #28]
 800819a:	6924      	ldr	r4, [r4, #16]
 800819c:	4431      	add	r1, r6
 800819e:	9501      	str	r5, [sp, #4]
 80081a0:	9700      	str	r7, [sp, #0]
 80081a2:	3b01      	subs	r3, #1
 80081a4:	ebc2 020e 	rsb	r2, r2, lr
 80081a8:	3101      	adds	r1, #1
 80081aa:	4420      	add	r0, r4
 80081ac:	f000 fd72 	bl	8008c94 <GUI_DrawGradientV>
 80081b0:	e00e      	b.n	80081d0 <PROGBAR_DrawSkinFlex+0x160>
 80081b2:	683b      	ldr	r3, [r7, #0]
 80081b4:	b963      	cbnz	r3, 80081d0 <PROGBAR_DrawSkinFlex+0x160>
 80081b6:	4b08      	ldr	r3, [pc, #32]	@ (80081d8 <PROGBAR_DrawSkinFlex+0x168>)
 80081b8:	68bd      	ldr	r5, [r7, #8]
 80081ba:	6a58      	ldr	r0, [r3, #36]	@ 0x24
 80081bc:	f7fa fad9 	bl	8002772 <GUI_SetColor>
 80081c0:	2002      	movs	r0, #2
 80081c2:	f7fa fb13 	bl	80027ec <GUI_SetTextMode>
 80081c6:	6962      	ldr	r2, [r4, #20]
 80081c8:	6921      	ldr	r1, [r4, #16]
 80081ca:	4628      	mov	r0, r5
 80081cc:	f7fa fdf4 	bl	8002db8 <GUI_DispStringAt>
 80081d0:	2000      	movs	r0, #0
 80081d2:	b003      	add	sp, #12
 80081d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80081d8:	20000060 	.word	0x20000060

080081dc <WIDGET__GetInsideRect>:
 80081dc:	b538      	push	{r3, r4, r5, lr}
 80081de:	4605      	mov	r5, r0
 80081e0:	460c      	mov	r4, r1
 80081e2:	f7fe f9af 	bl	8006544 <WM__GetClientRectWin>
 80081e6:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
 80081e8:	4621      	mov	r1, r4
 80081ea:	681a      	ldr	r2, [r3, #0]
 80081ec:	4620      	mov	r0, r4
 80081ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80081f2:	f7fa bed3 	b.w	8002f9c <GUI__ReduceRect>
	...

080081f8 <WIDGET__Init>:
 80081f8:	4b02      	ldr	r3, [pc, #8]	@ (8008204 <WIDGET__Init+0xc>)
 80081fa:	8642      	strh	r2, [r0, #50]	@ 0x32
 80081fc:	681b      	ldr	r3, [r3, #0]
 80081fe:	8601      	strh	r1, [r0, #48]	@ 0x30
 8008200:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8008202:	4770      	bx	lr
 8008204:	20000088 	.word	0x20000088

08008208 <WIDGET_SetState>:
 8008208:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800820a:	460c      	mov	r4, r1
 800820c:	4605      	mov	r5, r0
 800820e:	f7f9 ff1f 	bl	8002050 <GUI_ALLOC_LockH>
 8008212:	8e43      	ldrh	r3, [r0, #50]	@ 0x32
 8008214:	9001      	str	r0, [sp, #4]
 8008216:	42a3      	cmp	r3, r4
 8008218:	d003      	beq.n	8008222 <WIDGET_SetState+0x1a>
 800821a:	8644      	strh	r4, [r0, #50]	@ 0x32
 800821c:	4628      	mov	r0, r5
 800821e:	f7fe fada 	bl	80067d6 <WM_InvalidateWindow>
 8008222:	a801      	add	r0, sp, #4
 8008224:	f7f9 ff22 	bl	800206c <GUI_ALLOC_UnlockH>
 8008228:	b003      	add	sp, #12
 800822a:	bd30      	pop	{r4, r5, pc}

0800822c <WIDGET_OrState>:
 800822c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800822e:	460c      	mov	r4, r1
 8008230:	4605      	mov	r5, r0
 8008232:	b170      	cbz	r0, 8008252 <WIDGET_OrState+0x26>
 8008234:	f7f9 ff0c 	bl	8002050 <GUI_ALLOC_LockH>
 8008238:	8e41      	ldrh	r1, [r0, #50]	@ 0x32
 800823a:	9001      	str	r0, [sp, #4]
 800823c:	ea34 0301 	bics.w	r3, r4, r1
 8008240:	d004      	beq.n	800824c <WIDGET_OrState+0x20>
 8008242:	430c      	orrs	r4, r1
 8008244:	8644      	strh	r4, [r0, #50]	@ 0x32
 8008246:	4628      	mov	r0, r5
 8008248:	f7fe fac5 	bl	80067d6 <WM_InvalidateWindow>
 800824c:	a801      	add	r0, sp, #4
 800824e:	f7f9 ff0d 	bl	800206c <GUI_ALLOC_UnlockH>
 8008252:	b003      	add	sp, #12
 8008254:	bd30      	pop	{r4, r5, pc}

08008256 <WIDGET_HandleActive>:
 8008256:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008258:	460d      	mov	r5, r1
 800825a:	b085      	sub	sp, #20
 800825c:	4606      	mov	r6, r0
 800825e:	2800      	cmp	r0, #0
 8008260:	f000 8095 	beq.w	800838e <WIDGET_HandleActive+0x138>
 8008264:	f7f9 fef4 	bl	8002050 <GUI_ALLOC_LockH>
 8008268:	682b      	ldr	r3, [r5, #0]
 800826a:	9002      	str	r0, [sp, #8]
 800826c:	2b16      	cmp	r3, #22
 800826e:	d054      	beq.n	800831a <WIDGET_HandleActive+0xc4>
 8008270:	dc0c      	bgt.n	800828c <WIDGET_HandleActive+0x36>
 8008272:	2b11      	cmp	r3, #17
 8008274:	d033      	beq.n	80082de <WIDGET_HandleActive+0x88>
 8008276:	dc02      	bgt.n	800827e <WIDGET_HandleActive+0x28>
 8008278:	2b0d      	cmp	r3, #13
 800827a:	d040      	beq.n	80082fe <WIDGET_HandleActive+0xa8>
 800827c:	e080      	b.n	8008380 <WIDGET_HandleActive+0x12a>
 800827e:	2b14      	cmp	r3, #20
 8008280:	d079      	beq.n	8008376 <WIDGET_HandleActive+0x120>
 8008282:	2b15      	cmp	r3, #21
 8008284:	d17c      	bne.n	8008380 <WIDGET_HandleActive+0x12a>
 8008286:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	@ 0x30
 800828a:	e072      	b.n	8008372 <WIDGET_HandleActive+0x11c>
 800828c:	2b1f      	cmp	r3, #31
 800828e:	d06d      	beq.n	800836c <WIDGET_HandleActive+0x116>
 8008290:	dc02      	bgt.n	8008298 <WIDGET_HandleActive+0x42>
 8008292:	2b1e      	cmp	r3, #30
 8008294:	d044      	beq.n	8008320 <WIDGET_HandleActive+0xca>
 8008296:	e073      	b.n	8008380 <WIDGET_HandleActive+0x12a>
 8008298:	2b31      	cmp	r3, #49	@ 0x31
 800829a:	d01e      	beq.n	80082da <WIDGET_HandleActive+0x84>
 800829c:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80082a0:	d16e      	bne.n	8008380 <WIDGET_HandleActive+0x12a>
 80082a2:	68e9      	ldr	r1, [r5, #12]
 80082a4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80082a6:	680c      	ldr	r4, [r1, #0]
 80082a8:	681b      	ldr	r3, [r3, #0]
 80082aa:	62c1      	str	r1, [r0, #44]	@ 0x2c
 80082ac:	a802      	add	r0, sp, #8
 80082ae:	1b1c      	subs	r4, r3, r4
 80082b0:	f7f9 fedc 	bl	800206c <GUI_ALLOC_UnlockH>
 80082b4:	4630      	mov	r0, r6
 80082b6:	f7f9 fecb 	bl	8002050 <GUI_ALLOC_LockH>
 80082ba:	ad04      	add	r5, sp, #16
 80082bc:	4262      	negs	r2, r4
 80082be:	f845 0d04 	str.w	r0, [r5, #-4]!
 80082c2:	4623      	mov	r3, r4
 80082c4:	4611      	mov	r1, r2
 80082c6:	9400      	str	r4, [sp, #0]
 80082c8:	f7ff fb5c 	bl	8007984 <WM__UpdateChildPositions>
 80082cc:	4628      	mov	r0, r5
 80082ce:	f7f9 fecd 	bl	800206c <GUI_ALLOC_UnlockH>
 80082d2:	4630      	mov	r0, r6
 80082d4:	f7fe fa7f 	bl	80067d6 <WM_InvalidateWindow>
 80082d8:	e050      	b.n	800837c <WIDGET_HandleActive+0x126>
 80082da:	2400      	movs	r4, #0
 80082dc:	e041      	b.n	8008362 <WIDGET_HandleActive+0x10c>
 80082de:	8e43      	ldrh	r3, [r0, #50]	@ 0x32
 80082e0:	06d9      	lsls	r1, r3, #27
 80082e2:	d54d      	bpl.n	8008380 <WIDGET_HandleActive+0x12a>
 80082e4:	68eb      	ldr	r3, [r5, #12]
 80082e6:	2b00      	cmp	r3, #0
 80082e8:	d04a      	beq.n	8008380 <WIDGET_HandleActive+0x12a>
 80082ea:	7a1b      	ldrb	r3, [r3, #8]
 80082ec:	2b00      	cmp	r3, #0
 80082ee:	d047      	beq.n	8008380 <WIDGET_HandleActive+0x12a>
 80082f0:	a802      	add	r0, sp, #8
 80082f2:	f7f9 febb 	bl	800206c <GUI_ALLOC_UnlockH>
 80082f6:	4630      	mov	r0, r6
 80082f8:	f7ff f92a 	bl	8007550 <WM_SetFocus>
 80082fc:	e040      	b.n	8008380 <WIDGET_HandleActive+0x12a>
 80082fe:	68eb      	ldr	r3, [r5, #12]
 8008300:	68db      	ldr	r3, [r3, #12]
 8008302:	2b00      	cmp	r3, #0
 8008304:	d03c      	beq.n	8008380 <WIDGET_HandleActive+0x12a>
 8008306:	7a1b      	ldrb	r3, [r3, #8]
 8008308:	2b00      	cmp	r3, #0
 800830a:	d039      	beq.n	8008380 <WIDGET_HandleActive+0x12a>
 800830c:	a802      	add	r0, sp, #8
 800830e:	f7f9 fead 	bl	800206c <GUI_ALLOC_UnlockH>
 8008312:	4630      	mov	r0, r6
 8008314:	f002 f8ae 	bl	800a474 <WM_BringToTop>
 8008318:	e030      	b.n	800837c <WIDGET_HandleActive+0x126>
 800831a:	68eb      	ldr	r3, [r5, #12]
 800831c:	8603      	strh	r3, [r0, #48]	@ 0x30
 800831e:	e02d      	b.n	800837c <WIDGET_HandleActive+0x126>
 8008320:	68eb      	ldr	r3, [r5, #12]
 8008322:	8e41      	ldrh	r1, [r0, #50]	@ 0x32
 8008324:	2b01      	cmp	r3, #1
 8008326:	d108      	bne.n	800833a <WIDGET_HandleActive+0xe4>
 8008328:	06ca      	lsls	r2, r1, #27
 800832a:	d50d      	bpl.n	8008348 <WIDGET_HandleActive+0xf2>
 800832c:	f041 0101 	orr.w	r1, r1, #1
 8008330:	4630      	mov	r0, r6
 8008332:	f7ff ff69 	bl	8008208 <WIDGET_SetState>
 8008336:	2708      	movs	r7, #8
 8008338:	e008      	b.n	800834c <WIDGET_HandleActive+0xf6>
 800833a:	f021 0101 	bic.w	r1, r1, #1
 800833e:	4630      	mov	r0, r6
 8008340:	f7ff ff62 	bl	8008208 <WIDGET_SetState>
 8008344:	2709      	movs	r7, #9
 8008346:	e001      	b.n	800834c <WIDGET_HandleActive+0xf6>
 8008348:	f04f 37ff 	mov.w	r7, #4294967295
 800834c:	a802      	add	r0, sp, #8
 800834e:	f7f9 fe8d 	bl	800206c <GUI_ALLOC_UnlockH>
 8008352:	1c7b      	adds	r3, r7, #1
 8008354:	f04f 0400 	mov.w	r4, #0
 8008358:	d005      	beq.n	8008366 <WIDGET_HandleActive+0x110>
 800835a:	4639      	mov	r1, r7
 800835c:	4630      	mov	r0, r6
 800835e:	f7ff f8ec 	bl	800753a <WM_NotifyParent>
 8008362:	60ec      	str	r4, [r5, #12]
 8008364:	e00d      	b.n	8008382 <WIDGET_HandleActive+0x12c>
 8008366:	2301      	movs	r3, #1
 8008368:	60eb      	str	r3, [r5, #12]
 800836a:	e00a      	b.n	8008382 <WIDGET_HandleActive+0x12c>
 800836c:	8e43      	ldrh	r3, [r0, #50]	@ 0x32
 800836e:	f3c3 1300 	ubfx	r3, r3, #4, #1
 8008372:	60eb      	str	r3, [r5, #12]
 8008374:	e002      	b.n	800837c <WIDGET_HandleActive+0x126>
 8008376:	68e9      	ldr	r1, [r5, #12]
 8008378:	f7ff ff30 	bl	80081dc <WIDGET__GetInsideRect>
 800837c:	2400      	movs	r4, #0
 800837e:	e000      	b.n	8008382 <WIDGET_HandleActive+0x12c>
 8008380:	2401      	movs	r4, #1
 8008382:	9b02      	ldr	r3, [sp, #8]
 8008384:	b123      	cbz	r3, 8008390 <WIDGET_HandleActive+0x13a>
 8008386:	a802      	add	r0, sp, #8
 8008388:	f7f9 fe70 	bl	800206c <GUI_ALLOC_UnlockH>
 800838c:	e000      	b.n	8008390 <WIDGET_HandleActive+0x13a>
 800838e:	2401      	movs	r4, #1
 8008390:	4620      	mov	r0, r4
 8008392:	b005      	add	sp, #20
 8008394:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008396 <WIDGET_SetEffect>:
 8008396:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8008398:	2300      	movs	r3, #0
 800839a:	9302      	str	r3, [sp, #8]
 800839c:	9103      	str	r1, [sp, #12]
 800839e:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80083a2:	4669      	mov	r1, sp
 80083a4:	9300      	str	r3, [sp, #0]
 80083a6:	f7fe f8be 	bl	8006526 <WM_SendMessage>
 80083aa:	b005      	add	sp, #20
 80083ac:	f85d fb04 	ldr.w	pc, [sp], #4

080083b0 <_DrawUpRect>:
 80083b0:	4770      	bx	lr

080083b2 <_DrawFlat>:
 80083b2:	4770      	bx	lr

080083b4 <_DrawDownRect>:
 80083b4:	4770      	bx	lr

080083b6 <_DrawDown>:
 80083b6:	4770      	bx	lr

080083b8 <_DrawUp>:
 80083b8:	4770      	bx	lr
	...

080083bc <_DrawDownRect>:
 80083bc:	b510      	push	{r4, lr}
 80083be:	4604      	mov	r4, r0
 80083c0:	b09e      	sub	sp, #120	@ 0x78
 80083c2:	a801      	add	r0, sp, #4
 80083c4:	f7fa f9b6 	bl	8002734 <GUI_SaveContext_W>
 80083c8:	4b09      	ldr	r3, [pc, #36]	@ (80083f0 <_DrawDownRect+0x34>)
 80083ca:	6818      	ldr	r0, [r3, #0]
 80083cc:	f7fb f974 	bl	80036b8 <LCD_SetColor>
 80083d0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80083d4:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80083d8:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80083dc:	f9b4 0000 	ldrsh.w	r0, [r4]
 80083e0:	f000 f954 	bl	800868c <GUI_DrawRect>
 80083e4:	a801      	add	r0, sp, #4
 80083e6:	f7fa f9af 	bl	8002748 <GUI_RestoreContext>
 80083ea:	b01e      	add	sp, #120	@ 0x78
 80083ec:	bd10      	pop	{r4, pc}
 80083ee:	bf00      	nop
 80083f0:	2000026c 	.word	0x2000026c

080083f4 <_DrawUpRect>:
 80083f4:	f7ff bfe2 	b.w	80083bc <_DrawDownRect>

080083f8 <_DrawDown>:
 80083f8:	b507      	push	{r0, r1, r2, lr}
 80083fa:	4668      	mov	r0, sp
 80083fc:	f7fe feee 	bl	80071dc <WM_GetClientRect>
 8008400:	4668      	mov	r0, sp
 8008402:	f7ff ffdb 	bl	80083bc <_DrawDownRect>
 8008406:	b003      	add	sp, #12
 8008408:	f85d fb04 	ldr.w	pc, [sp], #4

0800840c <_DrawUp>:
 800840c:	f7ff bff4 	b.w	80083f8 <_DrawDown>

08008410 <WINDOW_Callback>:
 8008410:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008414:	6845      	ldr	r5, [r0, #4]
 8008416:	4604      	mov	r4, r0
 8008418:	4628      	mov	r0, r5
 800841a:	f7f9 fe19 	bl	8002050 <GUI_ALLOC_LockH>
 800841e:	af02      	add	r7, sp, #8
 8008420:	f847 0d08 	str.w	r0, [r7, #-8]!
 8008424:	6b86      	ldr	r6, [r0, #56]	@ 0x38
 8008426:	f8d0 9034 	ldr.w	r9, [r0, #52]	@ 0x34
 800842a:	f8d0 8040 	ldr.w	r8, [r0, #64]	@ 0x40
 800842e:	4638      	mov	r0, r7
 8008430:	f7f9 fe1c 	bl	800206c <GUI_ALLOC_UnlockH>
 8008434:	6823      	ldr	r3, [r4, #0]
 8008436:	2b1f      	cmp	r3, #31
 8008438:	d02f      	beq.n	800849a <WINDOW_Callback+0x8a>
 800843a:	dc06      	bgt.n	800844a <WINDOW_Callback+0x3a>
 800843c:	2b0f      	cmp	r3, #15
 800843e:	d05f      	beq.n	8008500 <WINDOW_Callback+0xf0>
 8008440:	2b1e      	cmp	r3, #30
 8008442:	d015      	beq.n	8008470 <WINDOW_Callback+0x60>
 8008444:	2b0e      	cmp	r3, #14
 8008446:	d168      	bne.n	800851a <WINDOW_Callback+0x10a>
 8008448:	e049      	b.n	80084de <WINDOW_Callback+0xce>
 800844a:	2b22      	cmp	r3, #34	@ 0x22
 800844c:	d062      	beq.n	8008514 <WINDOW_Callback+0x104>
 800844e:	2b2a      	cmp	r3, #42	@ 0x2a
 8008450:	d002      	beq.n	8008458 <WINDOW_Callback+0x48>
 8008452:	2b20      	cmp	r3, #32
 8008454:	d161      	bne.n	800851a <WINDOW_Callback+0x10a>
 8008456:	e025      	b.n	80084a4 <WINDOW_Callback+0x94>
 8008458:	4628      	mov	r0, r5
 800845a:	f7f9 fdf9 	bl	8002050 <GUI_ALLOC_LockH>
 800845e:	68e3      	ldr	r3, [r4, #12]
 8008460:	9000      	str	r0, [sp, #0]
 8008462:	b10b      	cbz	r3, 8008468 <WINDOW_Callback+0x58>
 8008464:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8008466:	e001      	b.n	800846c <WINDOW_Callback+0x5c>
 8008468:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 800846a:	60e3      	str	r3, [r4, #12]
 800846c:	4638      	mov	r0, r7
 800846e:	e033      	b.n	80084d8 <WINDOW_Callback+0xc8>
 8008470:	68e4      	ldr	r4, [r4, #12]
 8008472:	2c01      	cmp	r4, #1
 8008474:	d15a      	bne.n	800852c <WINDOW_Callback+0x11c>
 8008476:	4630      	mov	r0, r6
 8008478:	f7fe ffb8 	bl	80073ec <WM_IsWindow>
 800847c:	2800      	cmp	r0, #0
 800847e:	d03b      	beq.n	80084f8 <WINDOW_Callback+0xe8>
 8008480:	4630      	mov	r0, r6
 8008482:	f7ff f865 	bl	8007550 <WM_SetFocus>
 8008486:	4630      	mov	r0, r6
 8008488:	f7fe ff8a 	bl	80073a0 <WM_HasFocus>
 800848c:	2800      	cmp	r0, #0
 800848e:	d04d      	beq.n	800852c <WINDOW_Callback+0x11c>
 8008490:	4621      	mov	r1, r4
 8008492:	4630      	mov	r0, r6
 8008494:	f7ff feca 	bl	800822c <WIDGET_OrState>
 8008498:	e048      	b.n	800852c <WINDOW_Callback+0x11c>
 800849a:	4621      	mov	r1, r4
 800849c:	4628      	mov	r0, r5
 800849e:	f7ff feda 	bl	8008256 <WIDGET_HandleActive>
 80084a2:	e043      	b.n	800852c <WINDOW_Callback+0x11c>
 80084a4:	4628      	mov	r0, r5
 80084a6:	f7f9 fdd3 	bl	8002050 <GUI_ALLOC_LockH>
 80084aa:	68e4      	ldr	r4, [r4, #12]
 80084ac:	9001      	str	r0, [sp, #4]
 80084ae:	b194      	cbz	r4, 80084d6 <WINDOW_Callback+0xc6>
 80084b0:	4629      	mov	r1, r5
 80084b2:	6860      	ldr	r0, [r4, #4]
 80084b4:	f7ff fa08 	bl	80078c8 <WM__IsAncestorOrSelf>
 80084b8:	4629      	mov	r1, r5
 80084ba:	b928      	cbnz	r0, 80084c8 <WINDOW_Callback+0xb8>
 80084bc:	6820      	ldr	r0, [r4, #0]
 80084be:	f7ff f9f2 	bl	80078a6 <WM__IsAncestor>
 80084c2:	b140      	cbz	r0, 80084d6 <WINDOW_Callback+0xc6>
 80084c4:	6822      	ldr	r2, [r4, #0]
 80084c6:	e004      	b.n	80084d2 <WINDOW_Callback+0xc2>
 80084c8:	6860      	ldr	r0, [r4, #4]
 80084ca:	f7ff f9ec 	bl	80078a6 <WM__IsAncestor>
 80084ce:	b110      	cbz	r0, 80084d6 <WINDOW_Callback+0xc6>
 80084d0:	6862      	ldr	r2, [r4, #4]
 80084d2:	9b01      	ldr	r3, [sp, #4]
 80084d4:	639a      	str	r2, [r3, #56]	@ 0x38
 80084d6:	a801      	add	r0, sp, #4
 80084d8:	f7f9 fdc8 	bl	800206c <GUI_ALLOC_UnlockH>
 80084dc:	e026      	b.n	800852c <WINDOW_Callback+0x11c>
 80084de:	68e3      	ldr	r3, [r4, #12]
 80084e0:	685a      	ldr	r2, [r3, #4]
 80084e2:	2a00      	cmp	r2, #0
 80084e4:	dd19      	ble.n	800851a <WINDOW_Callback+0x10a>
 80084e6:	681b      	ldr	r3, [r3, #0]
 80084e8:	2b09      	cmp	r3, #9
 80084ea:	d005      	beq.n	80084f8 <WINDOW_Callback+0xe8>
 80084ec:	2b0a      	cmp	r3, #10
 80084ee:	d114      	bne.n	800851a <WINDOW_Callback+0x10a>
 80084f0:	4628      	mov	r0, r5
 80084f2:	f002 f846 	bl	800a582 <WM_SetFocusOnPrevChild>
 80084f6:	e019      	b.n	800852c <WINDOW_Callback+0x11c>
 80084f8:	4628      	mov	r0, r5
 80084fa:	f002 f809 	bl	800a510 <WM_SetFocusOnNextChild>
 80084fe:	e015      	b.n	800852c <WINDOW_Callback+0x11c>
 8008500:	f06f 4370 	mvn.w	r3, #4026531840	@ 0xf0000000
 8008504:	4598      	cmp	r8, r3
 8008506:	d008      	beq.n	800851a <WINDOW_Callback+0x10a>
 8008508:	4640      	mov	r0, r8
 800850a:	f7fb f8cf 	bl	80036ac <LCD_SetBkColor>
 800850e:	f7fa fa39 	bl	8002984 <GUI_Clear>
 8008512:	e002      	b.n	800851a <WINDOW_Callback+0x10a>
 8008514:	f8c4 800c 	str.w	r8, [r4, #12]
 8008518:	e008      	b.n	800852c <WINDOW_Callback+0x11c>
 800851a:	f1b9 0f00 	cmp.w	r9, #0
 800851e:	d002      	beq.n	8008526 <WINDOW_Callback+0x116>
 8008520:	4620      	mov	r0, r4
 8008522:	47c8      	blx	r9
 8008524:	e002      	b.n	800852c <WINDOW_Callback+0x11c>
 8008526:	4620      	mov	r0, r4
 8008528:	f7fe fd84 	bl	8007034 <WM_DefaultProc>
 800852c:	b003      	add	sp, #12
 800852e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08008534 <WINDOW_CreateUser>:
 8008534:	b510      	push	{r4, lr}
 8008536:	b086      	sub	sp, #24
 8008538:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 800853a:	3418      	adds	r4, #24
 800853c:	9403      	str	r4, [sp, #12]
 800853e:	4c10      	ldr	r4, [pc, #64]	@ (8008580 <WINDOW_CreateUser+0x4c>)
 8008540:	9402      	str	r4, [sp, #8]
 8008542:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8008544:	9401      	str	r4, [sp, #4]
 8008546:	9c08      	ldr	r4, [sp, #32]
 8008548:	9400      	str	r4, [sp, #0]
 800854a:	f7fe f971 	bl	8006830 <WM_CreateWindowAsChild>
 800854e:	4604      	mov	r4, r0
 8008550:	b190      	cbz	r0, 8008578 <WINDOW_CreateUser+0x44>
 8008552:	f7f9 fd7d 	bl	8002050 <GUI_ALLOC_LockH>
 8008556:	2210      	movs	r2, #16
 8008558:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800855a:	9005      	str	r0, [sp, #20]
 800855c:	f7ff fe4c 	bl	80081f8 <WIDGET__Init>
 8008560:	a806      	add	r0, sp, #24
 8008562:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8008566:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8008568:	635a      	str	r2, [r3, #52]	@ 0x34
 800856a:	2200      	movs	r2, #0
 800856c:	639a      	str	r2, [r3, #56]	@ 0x38
 800856e:	4a05      	ldr	r2, [pc, #20]	@ (8008584 <WINDOW_CreateUser+0x50>)
 8008570:	6812      	ldr	r2, [r2, #0]
 8008572:	641a      	str	r2, [r3, #64]	@ 0x40
 8008574:	f7f9 fd7a 	bl	800206c <GUI_ALLOC_UnlockH>
 8008578:	4620      	mov	r0, r4
 800857a:	b006      	add	sp, #24
 800857c:	bd10      	pop	{r4, pc}
 800857e:	bf00      	nop
 8008580:	08008411 	.word	0x08008411
 8008584:	2000008c 	.word	0x2000008c

08008588 <WINDOW_CreateIndirect>:
 8008588:	b5f0      	push	{r4, r5, r6, r7, lr}
 800858a:	4604      	mov	r4, r0
 800858c:	f9b0 500c 	ldrsh.w	r5, [r0, #12]
 8008590:	b087      	sub	sp, #28
 8008592:	441d      	add	r5, r3
 8008594:	69a3      	ldr	r3, [r4, #24]
 8008596:	f9b0 7010 	ldrsh.w	r7, [r0, #16]
 800859a:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 800859e:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 80085a2:	9305      	str	r3, [sp, #20]
 80085a4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80085a6:	4410      	add	r0, r2
 80085a8:	9304      	str	r3, [sp, #16]
 80085aa:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 80085ae:	4632      	mov	r2, r6
 80085b0:	9303      	str	r3, [sp, #12]
 80085b2:	2300      	movs	r3, #0
 80085b4:	9302      	str	r3, [sp, #8]
 80085b6:	8a63      	ldrh	r3, [r4, #18]
 80085b8:	e88d 000a 	stmia.w	sp, {r1, r3}
 80085bc:	463b      	mov	r3, r7
 80085be:	4629      	mov	r1, r5
 80085c0:	f7ff ffb8 	bl	8008534 <WINDOW_CreateUser>
 80085c4:	b007      	add	sp, #28
 80085c6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080085c8 <_GetIndexMask_0>:
 80085c8:	b508      	push	{r3, lr}
 80085ca:	f7fb f96d 	bl	80038a8 <LCD_GetNumColors>
 80085ce:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 80085d2:	d010      	beq.n	80085f6 <_GetIndexMask_0+0x2e>
 80085d4:	287f      	cmp	r0, #127	@ 0x7f
 80085d6:	d810      	bhi.n	80085fa <_GetIndexMask_0+0x32>
 80085d8:	283f      	cmp	r0, #63	@ 0x3f
 80085da:	d810      	bhi.n	80085fe <_GetIndexMask_0+0x36>
 80085dc:	281f      	cmp	r0, #31
 80085de:	d810      	bhi.n	8008602 <_GetIndexMask_0+0x3a>
 80085e0:	280f      	cmp	r0, #15
 80085e2:	d810      	bhi.n	8008606 <_GetIndexMask_0+0x3e>
 80085e4:	2807      	cmp	r0, #7
 80085e6:	d810      	bhi.n	800860a <_GetIndexMask_0+0x42>
 80085e8:	2803      	cmp	r0, #3
 80085ea:	d810      	bhi.n	800860e <_GetIndexMask_0+0x46>
 80085ec:	2801      	cmp	r0, #1
 80085ee:	bf94      	ite	ls
 80085f0:	2000      	movls	r0, #0
 80085f2:	2001      	movhi	r0, #1
 80085f4:	e00c      	b.n	8008610 <_GetIndexMask_0+0x48>
 80085f6:	2008      	movs	r0, #8
 80085f8:	e00a      	b.n	8008610 <_GetIndexMask_0+0x48>
 80085fa:	2007      	movs	r0, #7
 80085fc:	e008      	b.n	8008610 <_GetIndexMask_0+0x48>
 80085fe:	2006      	movs	r0, #6
 8008600:	e006      	b.n	8008610 <_GetIndexMask_0+0x48>
 8008602:	2005      	movs	r0, #5
 8008604:	e004      	b.n	8008610 <_GetIndexMask_0+0x48>
 8008606:	2004      	movs	r0, #4
 8008608:	e002      	b.n	8008610 <_GetIndexMask_0+0x48>
 800860a:	2003      	movs	r0, #3
 800860c:	e000      	b.n	8008610 <_GetIndexMask_0+0x48>
 800860e:	2002      	movs	r0, #2
 8008610:	2301      	movs	r3, #1
 8008612:	fa03 f000 	lsl.w	r0, r3, r0
 8008616:	3801      	subs	r0, #1
 8008618:	bd08      	pop	{r3, pc}

0800861a <_Index2Color_0>:
 800861a:	b538      	push	{r3, r4, r5, lr}
 800861c:	4604      	mov	r4, r0
 800861e:	f7fb f943 	bl	80038a8 <LCD_GetNumColors>
 8008622:	4605      	mov	r5, r0
 8008624:	f7fb f95e 	bl	80038e4 <LCD_GetPalette>
 8008628:	42a5      	cmp	r5, r4
 800862a:	d903      	bls.n	8008634 <_Index2Color_0+0x1a>
 800862c:	b118      	cbz	r0, 8008636 <_Index2Color_0+0x1c>
 800862e:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 8008632:	bd38      	pop	{r3, r4, r5, pc}
 8008634:	2000      	movs	r0, #0
 8008636:	bd38      	pop	{r3, r4, r5, pc}

08008638 <_Color2Index_0>:
 8008638:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800863c:	4681      	mov	r9, r0
 800863e:	f7fb f933 	bl	80038a8 <LCD_GetNumColors>
 8008642:	4607      	mov	r7, r0
 8008644:	f7fb f94e 	bl	80038e4 <LCD_GetPalette>
 8008648:	4606      	mov	r6, r0
 800864a:	b1e0      	cbz	r0, 8008686 <_Color2Index_0+0x4e>
 800864c:	2000      	movs	r0, #0
 800864e:	f856 3020 	ldr.w	r3, [r6, r0, lsl #2]
 8008652:	454b      	cmp	r3, r9
 8008654:	d017      	beq.n	8008686 <_Color2Index_0+0x4e>
 8008656:	3001      	adds	r0, #1
 8008658:	4287      	cmp	r7, r0
 800865a:	dcf8      	bgt.n	800864e <_Color2Index_0+0x16>
 800865c:	2400      	movs	r4, #0
 800865e:	4625      	mov	r5, r4
 8008660:	f06f 487f 	mvn.w	r8, #4278190080	@ 0xff000000
 8008664:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 8008668:	4648      	mov	r0, r9
 800866a:	f7f9 ff85 	bl	8002578 <GUI_CalcColorDist>
 800866e:	4580      	cmp	r8, r0
 8008670:	bf88      	it	hi
 8008672:	462c      	movhi	r4, r5
 8008674:	f105 0501 	add.w	r5, r5, #1
 8008678:	bf88      	it	hi
 800867a:	4680      	movhi	r8, r0
 800867c:	42af      	cmp	r7, r5
 800867e:	dcf1      	bgt.n	8008664 <_Color2Index_0+0x2c>
 8008680:	4620      	mov	r0, r4
 8008682:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8008686:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

0800868c <GUI_DrawRect>:
 800868c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008690:	4c1e      	ldr	r4, [pc, #120]	@ (800870c <GUI_DrawRect+0x80>)
 8008692:	f8d4 e000 	ldr.w	lr, [r4]
 8008696:	f8de 5050 	ldr.w	r5, [lr, #80]	@ 0x50
 800869a:	f8de 404c 	ldr.w	r4, [lr, #76]	@ 0x4c
 800869e:	186f      	adds	r7, r5, r1
 80086a0:	441d      	add	r5, r3
 80086a2:	f89e 3018 	ldrb.w	r3, [lr, #24]
 80086a6:	1826      	adds	r6, r4, r0
 80086a8:	3b01      	subs	r3, #1
 80086aa:	b29b      	uxth	r3, r3
 80086ac:	4414      	add	r4, r2
 80086ae:	1af2      	subs	r2, r6, r3
 80086b0:	f8ad 2000 	strh.w	r2, [sp]
 80086b4:	191a      	adds	r2, r3, r4
 80086b6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80086ba:	4668      	mov	r0, sp
 80086bc:	1afa      	subs	r2, r7, r3
 80086be:	442b      	add	r3, r5
 80086c0:	f8ad 2002 	strh.w	r2, [sp, #2]
 80086c4:	f8ad 3006 	strh.w	r3, [sp, #6]
 80086c8:	f7fe faf2 	bl	8006cb0 <WM__InitIVRSearch>
 80086cc:	b1d8      	cbz	r0, 8008706 <GUI_DrawRect+0x7a>
 80086ce:	f107 0801 	add.w	r8, r7, #1
 80086d2:	f105 39ff 	add.w	r9, r5, #4294967295
 80086d6:	4622      	mov	r2, r4
 80086d8:	4639      	mov	r1, r7
 80086da:	4630      	mov	r0, r6
 80086dc:	f7fa fcb6 	bl	800304c <LCD_DrawHLine>
 80086e0:	4622      	mov	r2, r4
 80086e2:	4629      	mov	r1, r5
 80086e4:	4630      	mov	r0, r6
 80086e6:	f7fa fcb1 	bl	800304c <LCD_DrawHLine>
 80086ea:	464a      	mov	r2, r9
 80086ec:	4641      	mov	r1, r8
 80086ee:	4630      	mov	r0, r6
 80086f0:	f7fa fcd4 	bl	800309c <LCD_DrawVLine>
 80086f4:	464a      	mov	r2, r9
 80086f6:	4641      	mov	r1, r8
 80086f8:	4620      	mov	r0, r4
 80086fa:	f7fa fccf 	bl	800309c <LCD_DrawVLine>
 80086fe:	f7fe fa15 	bl	8006b2c <WM__GetNextIVR>
 8008702:	2800      	cmp	r0, #0
 8008704:	d1e7      	bne.n	80086d6 <GUI_DrawRect+0x4a>
 8008706:	b003      	add	sp, #12
 8008708:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800870c:	20000014 	.word	0x20000014

08008710 <GUI_GetYAdjust>:
 8008710:	4b0a      	ldr	r3, [pc, #40]	@ (800873c <GUI_GetYAdjust+0x2c>)
 8008712:	681a      	ldr	r2, [r3, #0]
 8008714:	8d93      	ldrh	r3, [r2, #44]	@ 0x2c
 8008716:	f003 030c 	and.w	r3, r3, #12
 800871a:	2b08      	cmp	r3, #8
 800871c:	d007      	beq.n	800872e <GUI_GetYAdjust+0x1e>
 800871e:	2b0c      	cmp	r3, #12
 8008720:	d005      	beq.n	800872e <GUI_GetYAdjust+0x1e>
 8008722:	2b04      	cmp	r3, #4
 8008724:	d107      	bne.n	8008736 <GUI_GetYAdjust+0x26>
 8008726:	69d3      	ldr	r3, [r2, #28]
 8008728:	7e18      	ldrb	r0, [r3, #24]
 800872a:	3801      	subs	r0, #1
 800872c:	4770      	bx	lr
 800872e:	69d3      	ldr	r3, [r2, #28]
 8008730:	7e18      	ldrb	r0, [r3, #24]
 8008732:	0840      	lsrs	r0, r0, #1
 8008734:	4770      	bx	lr
 8008736:	2000      	movs	r0, #0
 8008738:	4770      	bx	lr
 800873a:	bf00      	nop
 800873c:	20000014 	.word	0x20000014

08008740 <GUI_GetFontDistY>:
 8008740:	4b02      	ldr	r3, [pc, #8]	@ (800874c <GUI_GetFontDistY+0xc>)
 8008742:	681b      	ldr	r3, [r3, #0]
 8008744:	69db      	ldr	r3, [r3, #28]
 8008746:	7e58      	ldrb	r0, [r3, #25]
 8008748:	4770      	bx	lr
 800874a:	bf00      	nop
 800874c:	20000014 	.word	0x20000014

08008750 <GUI_GetCharDistX>:
 8008750:	4b02      	ldr	r3, [pc, #8]	@ (800875c <GUI_GetCharDistX+0xc>)
 8008752:	2100      	movs	r1, #0
 8008754:	681b      	ldr	r3, [r3, #0]
 8008756:	69db      	ldr	r3, [r3, #28]
 8008758:	685b      	ldr	r3, [r3, #4]
 800875a:	4718      	bx	r3
 800875c:	20000014 	.word	0x20000014

08008760 <GUI_GetCharDistXEx>:
 8008760:	4b02      	ldr	r3, [pc, #8]	@ (800876c <GUI_GetCharDistXEx+0xc>)
 8008762:	681b      	ldr	r3, [r3, #0]
 8008764:	69db      	ldr	r3, [r3, #28]
 8008766:	685b      	ldr	r3, [r3, #4]
 8008768:	4718      	bx	r3
 800876a:	bf00      	nop
 800876c:	20000014 	.word	0x20000014

08008770 <_Log2VisBuffered>:
 8008770:	4770      	bx	lr
	...

08008774 <_DispLine>:
 8008774:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008776:	4615      	mov	r5, r2
 8008778:	ab02      	add	r3, sp, #8
 800877a:	4a21      	ldr	r2, [pc, #132]	@ (8008800 <_DispLine+0x8c>)
 800877c:	f843 1d08 	str.w	r1, [r3, #-8]!
 8008780:	4619      	mov	r1, r3
 8008782:	9001      	str	r0, [sp, #4]
 8008784:	6812      	ldr	r2, [r2, #0]
 8008786:	4790      	blx	r2
 8008788:	4c1e      	ldr	r4, [pc, #120]	@ (8008804 <_DispLine+0x90>)
 800878a:	9001      	str	r0, [sp, #4]
 800878c:	6823      	ldr	r3, [r4, #0]
 800878e:	6958      	ldr	r0, [r3, #20]
 8008790:	b940      	cbnz	r0, 80087a4 <_DispLine+0x30>
 8008792:	2001      	movs	r0, #1
 8008794:	f001 f87a 	bl	800988c <GUI__ManageCache>
 8008798:	6822      	ldr	r2, [r4, #0]
 800879a:	69d3      	ldr	r3, [r2, #28]
 800879c:	695b      	ldr	r3, [r3, #20]
 800879e:	b93b      	cbnz	r3, 80087b0 <_DispLine+0x3c>
 80087a0:	4d19      	ldr	r5, [pc, #100]	@ (8008808 <_DispLine+0x94>)
 80087a2:	e022      	b.n	80087ea <_DispLine+0x76>
 80087a4:	4629      	mov	r1, r5
 80087a6:	f7f9 ffa7 	bl	80026f8 <GUI_RectsIntersect>
 80087aa:	2800      	cmp	r0, #0
 80087ac:	d1f1      	bne.n	8008792 <_DispLine+0x1e>
 80087ae:	e024      	b.n	80087fa <_DispLine+0x86>
 80087b0:	4c16      	ldr	r4, [pc, #88]	@ (800880c <_DispLine+0x98>)
 80087b2:	689b      	ldr	r3, [r3, #8]
 80087b4:	6821      	ldr	r1, [r4, #0]
 80087b6:	b141      	cbz	r1, 80087ca <_DispLine+0x56>
 80087b8:	f9b2 5022 	ldrsh.w	r5, [r2, #34]	@ 0x22
 80087bc:	9801      	ldr	r0, [sp, #4]
 80087be:	9900      	ldr	r1, [sp, #0]
 80087c0:	4798      	blx	r3
 80087c2:	6823      	ldr	r3, [r4, #0]
 80087c4:	4628      	mov	r0, r5
 80087c6:	4798      	blx	r3
 80087c8:	e014      	b.n	80087f4 <_DispLine+0x80>
 80087ca:	9900      	ldr	r1, [sp, #0]
 80087cc:	9801      	ldr	r0, [sp, #4]
 80087ce:	4798      	blx	r3
 80087d0:	e010      	b.n	80087f4 <_DispLine+0x80>
 80087d2:	a801      	add	r0, sp, #4
 80087d4:	f7fa fb22 	bl	8002e1c <GUI_UC__GetCharCodeInc>
 80087d8:	6823      	ldr	r3, [r4, #0]
 80087da:	4606      	mov	r6, r0
 80087dc:	69db      	ldr	r3, [r3, #28]
 80087de:	681b      	ldr	r3, [r3, #0]
 80087e0:	4798      	blx	r3
 80087e2:	682b      	ldr	r3, [r5, #0]
 80087e4:	b10b      	cbz	r3, 80087ea <_DispLine+0x76>
 80087e6:	4630      	mov	r0, r6
 80087e8:	4798      	blx	r3
 80087ea:	9b00      	ldr	r3, [sp, #0]
 80087ec:	3b01      	subs	r3, #1
 80087ee:	2b00      	cmp	r3, #0
 80087f0:	9300      	str	r3, [sp, #0]
 80087f2:	daee      	bge.n	80087d2 <_DispLine+0x5e>
 80087f4:	2000      	movs	r0, #0
 80087f6:	f001 f849 	bl	800988c <GUI__ManageCache>
 80087fa:	b002      	add	sp, #8
 80087fc:	bd70      	pop	{r4, r5, r6, pc}
 80087fe:	bf00      	nop
 8008800:	20000090 	.word	0x20000090
 8008804:	20000014 	.word	0x20000014
 8008808:	20002c14 	.word	0x20002c14
 800880c:	20002c08 	.word	0x20002c08

08008810 <GUI__GetLineNumChars>:
 8008810:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008812:	460d      	mov	r5, r1
 8008814:	9001      	str	r0, [sp, #4]
 8008816:	4604      	mov	r4, r0
 8008818:	b188      	cbz	r0, 800883e <GUI__GetLineNumChars+0x2e>
 800881a:	4b0a      	ldr	r3, [pc, #40]	@ (8008844 <GUI__GetLineNumChars+0x34>)
 800881c:	681b      	ldr	r3, [r3, #0]
 800881e:	69db      	ldr	r3, [r3, #28]
 8008820:	695c      	ldr	r4, [r3, #20]
 8008822:	b154      	cbz	r4, 800883a <GUI__GetLineNumChars+0x2a>
 8008824:	6864      	ldr	r4, [r4, #4]
 8008826:	b144      	cbz	r4, 800883a <GUI__GetLineNumChars+0x2a>
 8008828:	47a0      	blx	r4
 800882a:	e009      	b.n	8008840 <GUI__GetLineNumChars+0x30>
 800882c:	a801      	add	r0, sp, #4
 800882e:	f7fa faf5 	bl	8002e1c <GUI_UC__GetCharCodeInc>
 8008832:	b120      	cbz	r0, 800883e <GUI__GetLineNumChars+0x2e>
 8008834:	280a      	cmp	r0, #10
 8008836:	d002      	beq.n	800883e <GUI__GetLineNumChars+0x2e>
 8008838:	3401      	adds	r4, #1
 800883a:	42ac      	cmp	r4, r5
 800883c:	dbf6      	blt.n	800882c <GUI__GetLineNumChars+0x1c>
 800883e:	4620      	mov	r0, r4
 8008840:	b003      	add	sp, #12
 8008842:	bd30      	pop	{r4, r5, pc}
 8008844:	20000014 	.word	0x20000014

08008848 <GUI__GetOverlap>:
 8008848:	b513      	push	{r0, r1, r4, lr}
 800884a:	2400      	movs	r4, #0
 800884c:	a902      	add	r1, sp, #8
 800884e:	f841 4d04 	str.w	r4, [r1, #-4]!
 8008852:	f7ff ff85 	bl	8008760 <GUI_GetCharDistXEx>
 8008856:	9b01      	ldr	r3, [sp, #4]
 8008858:	4298      	cmp	r0, r3
 800885a:	bfac      	ite	ge
 800885c:	4620      	movge	r0, r4
 800885e:	1a18      	sublt	r0, r3, r0
 8008860:	b002      	add	sp, #8
 8008862:	bd10      	pop	{r4, pc}

08008864 <GUI__GetLineDistX>:
 8008864:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008866:	4a15      	ldr	r2, [pc, #84]	@ (80088bc <GUI__GetLineDistX+0x58>)
 8008868:	ab02      	add	r3, sp, #8
 800886a:	f843 1d08 	str.w	r1, [r3, #-8]!
 800886e:	9001      	str	r0, [sp, #4]
 8008870:	6812      	ldr	r2, [r2, #0]
 8008872:	4619      	mov	r1, r3
 8008874:	4790      	blx	r2
 8008876:	9001      	str	r0, [sp, #4]
 8008878:	b1e8      	cbz	r0, 80088b6 <GUI__GetLineDistX+0x52>
 800887a:	4b11      	ldr	r3, [pc, #68]	@ (80088c0 <GUI__GetLineDistX+0x5c>)
 800887c:	681b      	ldr	r3, [r3, #0]
 800887e:	69db      	ldr	r3, [r3, #28]
 8008880:	695c      	ldr	r4, [r3, #20]
 8008882:	b10c      	cbz	r4, 8008888 <GUI__GetLineDistX+0x24>
 8008884:	6824      	ldr	r4, [r4, #0]
 8008886:	b90c      	cbnz	r4, 800888c <GUI__GetLineDistX+0x28>
 8008888:	4625      	mov	r5, r4
 800888a:	e002      	b.n	8008892 <GUI__GetLineDistX+0x2e>
 800888c:	9900      	ldr	r1, [sp, #0]
 800888e:	47a0      	blx	r4
 8008890:	e011      	b.n	80088b6 <GUI__GetLineDistX+0x52>
 8008892:	9b00      	ldr	r3, [sp, #0]
 8008894:	3b01      	subs	r3, #1
 8008896:	2b00      	cmp	r3, #0
 8008898:	9300      	str	r3, [sp, #0]
 800889a:	db07      	blt.n	80088ac <GUI__GetLineDistX+0x48>
 800889c:	a801      	add	r0, sp, #4
 800889e:	f7fa fabd 	bl	8002e1c <GUI_UC__GetCharCodeInc>
 80088a2:	4604      	mov	r4, r0
 80088a4:	f7ff ff54 	bl	8008750 <GUI_GetCharDistX>
 80088a8:	4405      	add	r5, r0
 80088aa:	e7f2      	b.n	8008892 <GUI__GetLineDistX+0x2e>
 80088ac:	4620      	mov	r0, r4
 80088ae:	f7ff ffcb 	bl	8008848 <GUI__GetOverlap>
 80088b2:	4428      	add	r0, r5
 80088b4:	e7ff      	b.n	80088b6 <GUI__GetLineDistX+0x52>
 80088b6:	b003      	add	sp, #12
 80088b8:	bd30      	pop	{r4, r5, pc}
 80088ba:	bf00      	nop
 80088bc:	20000090 	.word	0x20000090
 80088c0:	20000014 	.word	0x20000014

080088c4 <GUI__DispLine>:
 80088c4:	4b27      	ldr	r3, [pc, #156]	@ (8008964 <GUI__DispLine+0xa0>)
 80088c6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80088c8:	681b      	ldr	r3, [r3, #0]
 80088ca:	4605      	mov	r5, r0
 80088cc:	460e      	mov	r6, r1
 80088ce:	b163      	cbz	r3, 80088ea <GUI__DispLine+0x26>
 80088d0:	2000      	movs	r0, #0
 80088d2:	f7fe f9ed 	bl	8006cb0 <WM__InitIVRSearch>
 80088d6:	2800      	cmp	r0, #0
 80088d8:	d041      	beq.n	800895e <GUI__DispLine+0x9a>
 80088da:	466a      	mov	r2, sp
 80088dc:	4631      	mov	r1, r6
 80088de:	4628      	mov	r0, r5
 80088e0:	f7ff ff48 	bl	8008774 <_DispLine>
 80088e4:	f7fe f922 	bl	8006b2c <WM__GetNextIVR>
 80088e8:	e7f5      	b.n	80088d6 <GUI__DispLine+0x12>
 80088ea:	466b      	mov	r3, sp
 80088ec:	6810      	ldr	r0, [r2, #0]
 80088ee:	6851      	ldr	r1, [r2, #4]
 80088f0:	4c1d      	ldr	r4, [pc, #116]	@ (8008968 <GUI__DispLine+0xa4>)
 80088f2:	c303      	stmia	r3!, {r0, r1}
 80088f4:	6822      	ldr	r2, [r4, #0]
 80088f6:	f8bd 3000 	ldrh.w	r3, [sp]
 80088fa:	f8b2 704c 	ldrh.w	r7, [r2, #76]	@ 0x4c
 80088fe:	f8b2 0050 	ldrh.w	r0, [r2, #80]	@ 0x50
 8008902:	443b      	add	r3, r7
 8008904:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 8008908:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800890c:	f8ad 3000 	strh.w	r3, [sp]
 8008910:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8008914:	4401      	add	r1, r0
 8008916:	4403      	add	r3, r0
 8008918:	443a      	add	r2, r7
 800891a:	4668      	mov	r0, sp
 800891c:	f8ad 1002 	strh.w	r1, [sp, #2]
 8008920:	f8ad 2004 	strh.w	r2, [sp, #4]
 8008924:	f8ad 3006 	strh.w	r3, [sp, #6]
 8008928:	f7fe f9c2 	bl	8006cb0 <WM__InitIVRSearch>
 800892c:	6823      	ldr	r3, [r4, #0]
 800892e:	b940      	cbnz	r0, 8008942 <GUI__DispLine+0x7e>
 8008930:	6cd9      	ldr	r1, [r3, #76]	@ 0x4c
 8008932:	8c5a      	ldrh	r2, [r3, #34]	@ 0x22
 8008934:	1a52      	subs	r2, r2, r1
 8008936:	845a      	strh	r2, [r3, #34]	@ 0x22
 8008938:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 800893a:	8c9a      	ldrh	r2, [r3, #36]	@ 0x24
 800893c:	1a52      	subs	r2, r2, r1
 800893e:	849a      	strh	r2, [r3, #36]	@ 0x24
 8008940:	e00d      	b.n	800895e <GUI__DispLine+0x9a>
 8008942:	f8bd 2000 	ldrh.w	r2, [sp]
 8008946:	4631      	mov	r1, r6
 8008948:	845a      	strh	r2, [r3, #34]	@ 0x22
 800894a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800894e:	4628      	mov	r0, r5
 8008950:	849a      	strh	r2, [r3, #36]	@ 0x24
 8008952:	466a      	mov	r2, sp
 8008954:	f7ff ff0e 	bl	8008774 <_DispLine>
 8008958:	f7fe f8e8 	bl	8006b2c <WM__GetNextIVR>
 800895c:	e7e6      	b.n	800892c <GUI__DispLine+0x68>
 800895e:	b003      	add	sp, #12
 8008960:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008962:	bf00      	nop
 8008964:	20002bf4 	.word	0x20002bf4
 8008968:	20000014 	.word	0x20000014

0800896c <GUIMONO_DispChar>:
 800896c:	4b4d      	ldr	r3, [pc, #308]	@ (8008aa4 <GUIMONO_DispChar+0x138>)
 800896e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008972:	681a      	ldr	r2, [r3, #0]
 8008974:	b08b      	sub	sp, #44	@ 0x2c
 8008976:	69d1      	ldr	r1, [r2, #28]
 8008978:	69cc      	ldr	r4, [r1, #28]
 800897a:	89a3      	ldrh	r3, [r4, #12]
 800897c:	4283      	cmp	r3, r0
 800897e:	d808      	bhi.n	8008992 <GUIMONO_DispChar+0x26>
 8008980:	89e5      	ldrh	r5, [r4, #14]
 8008982:	4285      	cmp	r5, r0
 8008984:	d305      	bcc.n	8008992 <GUIMONO_DispChar+0x26>
 8008986:	6825      	ldr	r5, [r4, #0]
 8008988:	1ac3      	subs	r3, r0, r3
 800898a:	9506      	str	r5, [sp, #24]
 800898c:	f04f 36ff 	mov.w	r6, #4294967295
 8008990:	e013      	b.n	80089ba <GUIMONO_DispChar+0x4e>
 8008992:	68a3      	ldr	r3, [r4, #8]
 8008994:	2b00      	cmp	r3, #0
 8008996:	d07c      	beq.n	8008a92 <GUIMONO_DispChar+0x126>
 8008998:	881d      	ldrh	r5, [r3, #0]
 800899a:	42a8      	cmp	r0, r5
 800899c:	d379      	bcc.n	8008a92 <GUIMONO_DispChar+0x126>
 800899e:	885e      	ldrh	r6, [r3, #2]
 80089a0:	4286      	cmp	r6, r0
 80089a2:	d376      	bcc.n	8008a92 <GUIMONO_DispChar+0x126>
 80089a4:	685b      	ldr	r3, [r3, #4]
 80089a6:	1b40      	subs	r0, r0, r5
 80089a8:	6866      	ldr	r6, [r4, #4]
 80089aa:	b280      	uxth	r0, r0
 80089ac:	eb03 0580 	add.w	r5, r3, r0, lsl #2
 80089b0:	9606      	str	r6, [sp, #24]
 80089b2:	f933 3020 	ldrsh.w	r3, [r3, r0, lsl #2]
 80089b6:	f9b5 6002 	ldrsh.w	r6, [r5, #2]
 80089ba:	1c58      	adds	r0, r3, #1
 80089bc:	9309      	str	r3, [sp, #36]	@ 0x24
 80089be:	d068      	beq.n	8008a92 <GUIMONO_DispChar+0x126>
 80089c0:	f891 b018 	ldrb.w	fp, [r1, #24]
 80089c4:	7ca1      	ldrb	r1, [r4, #18]
 80089c6:	f9b2 902a 	ldrsh.w	r9, [r2, #42]	@ 0x2a
 80089ca:	fb0b f301 	mul.w	r3, fp, r1
 80089ce:	4648      	mov	r0, r9
 80089d0:	f9b2 7022 	ldrsh.w	r7, [r2, #34]	@ 0x22
 80089d4:	f9b2 8024 	ldrsh.w	r8, [r2, #36]	@ 0x24
 80089d8:	9307      	str	r3, [sp, #28]
 80089da:	f894 a010 	ldrb.w	sl, [r4, #16]
 80089de:	f7fa faff 	bl	8002fe0 <LCD_SetDrawMode>
 80089e2:	9b07      	ldr	r3, [sp, #28]
 80089e4:	9008      	str	r0, [sp, #32]
 80089e6:	4618      	mov	r0, r3
 80089e8:	4d2e      	ldr	r5, [pc, #184]	@ (8008aa4 <GUIMONO_DispChar+0x138>)
 80089ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80089ec:	6829      	ldr	r1, [r5, #0]
 80089ee:	69ca      	ldr	r2, [r1, #28]
 80089f0:	6b89      	ldr	r1, [r1, #56]	@ 0x38
 80089f2:	9105      	str	r1, [sp, #20]
 80089f4:	9906      	ldr	r1, [sp, #24]
 80089f6:	fb00 1003 	mla	r0, r0, r3, r1
 80089fa:	9004      	str	r0, [sp, #16]
 80089fc:	7ca3      	ldrb	r3, [r4, #18]
 80089fe:	4641      	mov	r1, r8
 8008a00:	9303      	str	r3, [sp, #12]
 8008a02:	2301      	movs	r3, #1
 8008a04:	9302      	str	r3, [sp, #8]
 8008a06:	7ed3      	ldrb	r3, [r2, #27]
 8008a08:	4638      	mov	r0, r7
 8008a0a:	9301      	str	r3, [sp, #4]
 8008a0c:	7e93      	ldrb	r3, [r2, #26]
 8008a0e:	4652      	mov	r2, sl
 8008a10:	9300      	str	r3, [sp, #0]
 8008a12:	465b      	mov	r3, fp
 8008a14:	f7fa fc84 	bl	8003320 <LCD_DrawBitmap>
 8008a18:	1c73      	adds	r3, r6, #1
 8008a1a:	d01a      	beq.n	8008a52 <GUIMONO_DispChar+0xe6>
 8008a1c:	f049 0002 	orr.w	r0, r9, #2
 8008a20:	f7fa fade 	bl	8002fe0 <LCD_SetDrawMode>
 8008a24:	682a      	ldr	r2, [r5, #0]
 8008a26:	9906      	ldr	r1, [sp, #24]
 8008a28:	69d3      	ldr	r3, [r2, #28]
 8008a2a:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 8008a2c:	4638      	mov	r0, r7
 8008a2e:	9205      	str	r2, [sp, #20]
 8008a30:	9a07      	ldr	r2, [sp, #28]
 8008a32:	fb02 1606 	mla	r6, r2, r6, r1
 8008a36:	9604      	str	r6, [sp, #16]
 8008a38:	7ca2      	ldrb	r2, [r4, #18]
 8008a3a:	4641      	mov	r1, r8
 8008a3c:	9203      	str	r2, [sp, #12]
 8008a3e:	2201      	movs	r2, #1
 8008a40:	9202      	str	r2, [sp, #8]
 8008a42:	7eda      	ldrb	r2, [r3, #27]
 8008a44:	9201      	str	r2, [sp, #4]
 8008a46:	7e9b      	ldrb	r3, [r3, #26]
 8008a48:	4652      	mov	r2, sl
 8008a4a:	9300      	str	r3, [sp, #0]
 8008a4c:	465b      	mov	r3, fp
 8008a4e:	f7fa fc67 	bl	8003320 <LCD_DrawBitmap>
 8008a52:	682b      	ldr	r3, [r5, #0]
 8008a54:	69db      	ldr	r3, [r3, #28]
 8008a56:	7e5a      	ldrb	r2, [r3, #25]
 8008a58:	7e1b      	ldrb	r3, [r3, #24]
 8008a5a:	429a      	cmp	r2, r3
 8008a5c:	d915      	bls.n	8008a8a <GUIMONO_DispChar+0x11e>
 8008a5e:	f1b9 0f02 	cmp.w	r9, #2
 8008a62:	d012      	beq.n	8008a8a <GUIMONO_DispChar+0x11e>
 8008a64:	f089 0004 	eor.w	r0, r9, #4
 8008a68:	f7fa faba 	bl	8002fe0 <LCD_SetDrawMode>
 8008a6c:	4b0d      	ldr	r3, [pc, #52]	@ (8008aa4 <GUIMONO_DispChar+0x138>)
 8008a6e:	681b      	ldr	r3, [r3, #0]
 8008a70:	69d8      	ldr	r0, [r3, #28]
 8008a72:	7e43      	ldrb	r3, [r0, #25]
 8008a74:	7e82      	ldrb	r2, [r0, #26]
 8008a76:	7e01      	ldrb	r1, [r0, #24]
 8008a78:	7ec0      	ldrb	r0, [r0, #27]
 8008a7a:	4443      	add	r3, r8
 8008a7c:	fb00 8101 	mla	r1, r0, r1, r8
 8008a80:	fb0a 7202 	mla	r2, sl, r2, r7
 8008a84:	4638      	mov	r0, r7
 8008a86:	f7fa fb33 	bl	80030f0 <LCD_FillRect>
 8008a8a:	f89d 0020 	ldrb.w	r0, [sp, #32]
 8008a8e:	f7fa faa7 	bl	8002fe0 <LCD_SetDrawMode>
 8008a92:	4b04      	ldr	r3, [pc, #16]	@ (8008aa4 <GUIMONO_DispChar+0x138>)
 8008a94:	7c61      	ldrb	r1, [r4, #17]
 8008a96:	681a      	ldr	r2, [r3, #0]
 8008a98:	8c53      	ldrh	r3, [r2, #34]	@ 0x22
 8008a9a:	440b      	add	r3, r1
 8008a9c:	8453      	strh	r3, [r2, #34]	@ 0x22
 8008a9e:	b00b      	add	sp, #44	@ 0x2c
 8008aa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008aa4:	20000014 	.word	0x20000014

08008aa8 <GUIMONO_GetCharDistX>:
 8008aa8:	4b04      	ldr	r3, [pc, #16]	@ (8008abc <GUIMONO_GetCharDistX+0x14>)
 8008aaa:	681b      	ldr	r3, [r3, #0]
 8008aac:	69db      	ldr	r3, [r3, #28]
 8008aae:	69db      	ldr	r3, [r3, #28]
 8008ab0:	b109      	cbz	r1, 8008ab6 <GUIMONO_GetCharDistX+0xe>
 8008ab2:	7c1a      	ldrb	r2, [r3, #16]
 8008ab4:	600a      	str	r2, [r1, #0]
 8008ab6:	7c58      	ldrb	r0, [r3, #17]
 8008ab8:	4770      	bx	lr
 8008aba:	bf00      	nop
 8008abc:	20000014 	.word	0x20000014

08008ac0 <GUIMONO_GetFontInfo>:
 8008ac0:	2302      	movs	r3, #2
 8008ac2:	800b      	strh	r3, [r1, #0]
 8008ac4:	4770      	bx	lr

08008ac6 <GUIMONO_IsInFont>:
 8008ac6:	69c3      	ldr	r3, [r0, #28]
 8008ac8:	899a      	ldrh	r2, [r3, #12]
 8008aca:	428a      	cmp	r2, r1
 8008acc:	d802      	bhi.n	8008ad4 <GUIMONO_IsInFont+0xe>
 8008ace:	89da      	ldrh	r2, [r3, #14]
 8008ad0:	428a      	cmp	r2, r1
 8008ad2:	d20f      	bcs.n	8008af4 <GUIMONO_IsInFont+0x2e>
 8008ad4:	6898      	ldr	r0, [r3, #8]
 8008ad6:	b180      	cbz	r0, 8008afa <GUIMONO_IsInFont+0x34>
 8008ad8:	8803      	ldrh	r3, [r0, #0]
 8008ada:	4299      	cmp	r1, r3
 8008adc:	d30c      	bcc.n	8008af8 <GUIMONO_IsInFont+0x32>
 8008ade:	8842      	ldrh	r2, [r0, #2]
 8008ae0:	428a      	cmp	r2, r1
 8008ae2:	d309      	bcc.n	8008af8 <GUIMONO_IsInFont+0x32>
 8008ae4:	1ac9      	subs	r1, r1, r3
 8008ae6:	6843      	ldr	r3, [r0, #4]
 8008ae8:	f833 0021 	ldrh.w	r0, [r3, r1, lsl #2]
 8008aec:	43c0      	mvns	r0, r0
 8008aee:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8008af2:	4770      	bx	lr
 8008af4:	2001      	movs	r0, #1
 8008af6:	4770      	bx	lr
 8008af8:	2000      	movs	r0, #0
 8008afa:	4770      	bx	lr

08008afc <_DrawGradient>:
 8008afc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008b00:	b08d      	sub	sp, #52	@ 0x34
 8008b02:	461c      	mov	r4, r3
 8008b04:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8008b06:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8008b0a:	9301      	str	r3, [sp, #4]
 8008b0c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8008b0e:	f8dd b05c 	ldr.w	fp, [sp, #92]	@ 0x5c
 8008b12:	4605      	mov	r5, r0
 8008b14:	4689      	mov	r9, r1
 8008b16:	4616      	mov	r6, r2
 8008b18:	9300      	str	r3, [sp, #0]
 8008b1a:	f7f9 fd54 	bl	80025c6 <GUI_GetColor>
 8008b1e:	45d8      	cmp	r8, fp
 8008b20:	9006      	str	r0, [sp, #24]
 8008b22:	d10d      	bne.n	8008b40 <_DrawGradient+0x44>
 8008b24:	4640      	mov	r0, r8
 8008b26:	f7fa fdc7 	bl	80036b8 <LCD_SetColor>
 8008b2a:	9b00      	ldr	r3, [sp, #0]
 8008b2c:	b11b      	cbz	r3, 8008b36 <_DrawGradient+0x3a>
 8008b2e:	4623      	mov	r3, r4
 8008b30:	4632      	mov	r2, r6
 8008b32:	4649      	mov	r1, r9
 8008b34:	e091      	b.n	8008c5a <_DrawGradient+0x15e>
 8008b36:	4633      	mov	r3, r6
 8008b38:	4622      	mov	r2, r4
 8008b3a:	4629      	mov	r1, r5
 8008b3c:	4648      	mov	r0, r9
 8008b3e:	e08d      	b.n	8008c5c <_DrawGradient+0x160>
 8008b40:	ebb4 0709 	subs.w	r7, r4, r9
 8008b44:	f000 80a2 	beq.w	8008c8c <_DrawGradient+0x190>
 8008b48:	fa5f f288 	uxtb.w	r2, r8
 8008b4c:	fa5f f38b 	uxtb.w	r3, fp
 8008b50:	1a9b      	subs	r3, r3, r2
 8008b52:	9308      	str	r3, [sp, #32]
 8008b54:	2302      	movs	r3, #2
 8008b56:	fb97 f3f3 	sdiv	r3, r7, r3
 8008b5a:	fb02 3207 	mla	r2, r2, r7, r3
 8008b5e:	f3cb 2107 	ubfx	r1, fp, #8, #8
 8008b62:	9202      	str	r2, [sp, #8]
 8008b64:	f3c8 2207 	ubfx	r2, r8, #8, #8
 8008b68:	1a89      	subs	r1, r1, r2
 8008b6a:	fb02 3207 	mla	r2, r2, r7, r3
 8008b6e:	9109      	str	r1, [sp, #36]	@ 0x24
 8008b70:	9203      	str	r2, [sp, #12]
 8008b72:	f3cb 4107 	ubfx	r1, fp, #16, #8
 8008b76:	f3c8 4207 	ubfx	r2, r8, #16, #8
 8008b7a:	1a89      	subs	r1, r1, r2
 8008b7c:	ea4f 6818 	mov.w	r8, r8, lsr #24
 8008b80:	fb02 3207 	mla	r2, r2, r7, r3
 8008b84:	fb08 3307 	mla	r3, r8, r7, r3
 8008b88:	9204      	str	r2, [sp, #16]
 8008b8a:	9806      	ldr	r0, [sp, #24]
 8008b8c:	ebc8 621b 	rsb	r2, r8, fp, lsr #24
 8008b90:	910a      	str	r1, [sp, #40]	@ 0x28
 8008b92:	920b      	str	r2, [sp, #44]	@ 0x2c
 8008b94:	9305      	str	r3, [sp, #20]
 8008b96:	f109 38ff 	add.w	r8, r9, #4294967295
 8008b9a:	f04f 0a01 	mov.w	sl, #1
 8008b9e:	f108 0b01 	add.w	fp, r8, #1
 8008ba2:	455c      	cmp	r4, fp
 8008ba4:	db4d      	blt.n	8008c42 <_DrawGradient+0x146>
 8008ba6:	9b02      	ldr	r3, [sp, #8]
 8008ba8:	9a08      	ldr	r2, [sp, #32]
 8008baa:	fb93 f1f7 	sdiv	r1, r3, r7
 8008bae:	4413      	add	r3, r2
 8008bb0:	9302      	str	r3, [sp, #8]
 8008bb2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8008bb4:	9b03      	ldr	r3, [sp, #12]
 8008bb6:	45d9      	cmp	r9, fp
 8008bb8:	fb93 fef7 	sdiv	lr, r3, r7
 8008bbc:	4413      	add	r3, r2
 8008bbe:	9303      	str	r3, [sp, #12]
 8008bc0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8008bc2:	9b04      	ldr	r3, [sp, #16]
 8008bc4:	ea41 210e 	orr.w	r1, r1, lr, lsl #8
 8008bc8:	fb93 fcf7 	sdiv	ip, r3, r7
 8008bcc:	4413      	add	r3, r2
 8008bce:	9304      	str	r3, [sp, #16]
 8008bd0:	9b05      	ldr	r3, [sp, #20]
 8008bd2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8008bd4:	fb93 f3f7 	sdiv	r3, r3, r7
 8008bd8:	9307      	str	r3, [sp, #28]
 8008bda:	9b05      	ldr	r3, [sp, #20]
 8008bdc:	4413      	add	r3, r2
 8008bde:	9305      	str	r3, [sp, #20]
 8008be0:	9b07      	ldr	r3, [sp, #28]
 8008be2:	ea4f 6203 	mov.w	r2, r3, lsl #24
 8008be6:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 8008bea:	ea42 0301 	orr.w	r3, r2, r1
 8008bee:	9307      	str	r3, [sp, #28]
 8008bf0:	da24      	bge.n	8008c3c <_DrawGradient+0x140>
 8008bf2:	4298      	cmp	r0, r3
 8008bf4:	d102      	bne.n	8008bfc <_DrawGradient+0x100>
 8008bf6:	f10a 0a01 	add.w	sl, sl, #1
 8008bfa:	e01f      	b.n	8008c3c <_DrawGradient+0x140>
 8008bfc:	f7fa fd5c 	bl	80036b8 <LCD_SetColor>
 8008c00:	f1ba 0f01 	cmp.w	sl, #1
 8008c04:	d010      	beq.n	8008c28 <_DrawGradient+0x12c>
 8008c06:	9b00      	ldr	r3, [sp, #0]
 8008c08:	ebca 000b 	rsb	r0, sl, fp
 8008c0c:	b123      	cbz	r3, 8008c18 <_DrawGradient+0x11c>
 8008c0e:	4601      	mov	r1, r0
 8008c10:	4643      	mov	r3, r8
 8008c12:	4632      	mov	r2, r6
 8008c14:	4628      	mov	r0, r5
 8008c16:	e002      	b.n	8008c1e <_DrawGradient+0x122>
 8008c18:	4633      	mov	r3, r6
 8008c1a:	4642      	mov	r2, r8
 8008c1c:	4629      	mov	r1, r5
 8008c1e:	f7fa fa67 	bl	80030f0 <LCD_FillRect>
 8008c22:	f04f 0a01 	mov.w	sl, #1
 8008c26:	e009      	b.n	8008c3c <_DrawGradient+0x140>
 8008c28:	9b00      	ldr	r3, [sp, #0]
 8008c2a:	4632      	mov	r2, r6
 8008c2c:	b113      	cbz	r3, 8008c34 <_DrawGradient+0x138>
 8008c2e:	4641      	mov	r1, r8
 8008c30:	4628      	mov	r0, r5
 8008c32:	e001      	b.n	8008c38 <_DrawGradient+0x13c>
 8008c34:	4629      	mov	r1, r5
 8008c36:	4640      	mov	r0, r8
 8008c38:	9b01      	ldr	r3, [sp, #4]
 8008c3a:	4798      	blx	r3
 8008c3c:	46d8      	mov	r8, fp
 8008c3e:	9807      	ldr	r0, [sp, #28]
 8008c40:	e7ad      	b.n	8008b9e <_DrawGradient+0xa2>
 8008c42:	f7fa fd39 	bl	80036b8 <LCD_SetColor>
 8008c46:	f1ba 0f01 	cmp.w	sl, #1
 8008c4a:	d00f      	beq.n	8008c6c <_DrawGradient+0x170>
 8008c4c:	9b00      	ldr	r3, [sp, #0]
 8008c4e:	ebca 0004 	rsb	r0, sl, r4
 8008c52:	b133      	cbz	r3, 8008c62 <_DrawGradient+0x166>
 8008c54:	4623      	mov	r3, r4
 8008c56:	4632      	mov	r2, r6
 8008c58:	1c41      	adds	r1, r0, #1
 8008c5a:	4628      	mov	r0, r5
 8008c5c:	f7fa fa48 	bl	80030f0 <LCD_FillRect>
 8008c60:	e00e      	b.n	8008c80 <_DrawGradient+0x184>
 8008c62:	4633      	mov	r3, r6
 8008c64:	4622      	mov	r2, r4
 8008c66:	4629      	mov	r1, r5
 8008c68:	3001      	adds	r0, #1
 8008c6a:	e7f7      	b.n	8008c5c <_DrawGradient+0x160>
 8008c6c:	9b00      	ldr	r3, [sp, #0]
 8008c6e:	4632      	mov	r2, r6
 8008c70:	b113      	cbz	r3, 8008c78 <_DrawGradient+0x17c>
 8008c72:	4621      	mov	r1, r4
 8008c74:	4628      	mov	r0, r5
 8008c76:	e001      	b.n	8008c7c <_DrawGradient+0x180>
 8008c78:	4629      	mov	r1, r5
 8008c7a:	4620      	mov	r0, r4
 8008c7c:	9b01      	ldr	r3, [sp, #4]
 8008c7e:	4798      	blx	r3
 8008c80:	9806      	ldr	r0, [sp, #24]
 8008c82:	b00d      	add	sp, #52	@ 0x34
 8008c84:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c88:	f7fa bd16 	b.w	80036b8 <LCD_SetColor>
 8008c8c:	b00d      	add	sp, #52	@ 0x34
 8008c8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08008c94 <GUI_DrawGradientV>:
 8008c94:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008c98:	4c15      	ldr	r4, [pc, #84]	@ (8008cf0 <GUI_DrawGradientV+0x5c>)
 8008c9a:	b087      	sub	sp, #28
 8008c9c:	6825      	ldr	r5, [r4, #0]
 8008c9e:	6cec      	ldr	r4, [r5, #76]	@ 0x4c
 8008ca0:	6d2d      	ldr	r5, [r5, #80]	@ 0x50
 8008ca2:	eb04 0800 	add.w	r8, r4, r0
 8008ca6:	eb05 0901 	add.w	r9, r5, r1
 8008caa:	4414      	add	r4, r2
 8008cac:	441d      	add	r5, r3
 8008cae:	a804      	add	r0, sp, #16
 8008cb0:	f8ad 8010 	strh.w	r8, [sp, #16]
 8008cb4:	f8ad 4014 	strh.w	r4, [sp, #20]
 8008cb8:	f8ad 9012 	strh.w	r9, [sp, #18]
 8008cbc:	f8ad 5016 	strh.w	r5, [sp, #22]
 8008cc0:	f7fd fff6 	bl	8006cb0 <WM__InitIVRSearch>
 8008cc4:	b188      	cbz	r0, 8008cea <GUI_DrawGradientV+0x56>
 8008cc6:	4e0b      	ldr	r6, [pc, #44]	@ (8008cf4 <GUI_DrawGradientV+0x60>)
 8008cc8:	2701      	movs	r7, #1
 8008cca:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8008ccc:	4622      	mov	r2, r4
 8008cce:	9301      	str	r3, [sp, #4]
 8008cd0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008cd2:	4649      	mov	r1, r9
 8008cd4:	9300      	str	r3, [sp, #0]
 8008cd6:	4640      	mov	r0, r8
 8008cd8:	462b      	mov	r3, r5
 8008cda:	9703      	str	r7, [sp, #12]
 8008cdc:	9602      	str	r6, [sp, #8]
 8008cde:	f7ff ff0d 	bl	8008afc <_DrawGradient>
 8008ce2:	f7fd ff23 	bl	8006b2c <WM__GetNextIVR>
 8008ce6:	2800      	cmp	r0, #0
 8008ce8:	d1ef      	bne.n	8008cca <GUI_DrawGradientV+0x36>
 8008cea:	b007      	add	sp, #28
 8008cec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008cf0:	20000014 	.word	0x20000014
 8008cf4:	0800304d 	.word	0x0800304d

08008cf8 <GUI_DrawGradientH>:
 8008cf8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008cfc:	4c15      	ldr	r4, [pc, #84]	@ (8008d54 <GUI_DrawGradientH+0x5c>)
 8008cfe:	b087      	sub	sp, #28
 8008d00:	6824      	ldr	r4, [r4, #0]
 8008d02:	6ce7      	ldr	r7, [r4, #76]	@ 0x4c
 8008d04:	6d24      	ldr	r4, [r4, #80]	@ 0x50
 8008d06:	eb07 0900 	add.w	r9, r7, r0
 8008d0a:	eb04 0801 	add.w	r8, r4, r1
 8008d0e:	4417      	add	r7, r2
 8008d10:	441c      	add	r4, r3
 8008d12:	a804      	add	r0, sp, #16
 8008d14:	f8ad 9010 	strh.w	r9, [sp, #16]
 8008d18:	f8ad 7014 	strh.w	r7, [sp, #20]
 8008d1c:	f8ad 8012 	strh.w	r8, [sp, #18]
 8008d20:	f8ad 4016 	strh.w	r4, [sp, #22]
 8008d24:	f7fd ffc4 	bl	8006cb0 <WM__InitIVRSearch>
 8008d28:	b188      	cbz	r0, 8008d4e <GUI_DrawGradientH+0x56>
 8008d2a:	4d0b      	ldr	r5, [pc, #44]	@ (8008d58 <GUI_DrawGradientH+0x60>)
 8008d2c:	2600      	movs	r6, #0
 8008d2e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8008d30:	4622      	mov	r2, r4
 8008d32:	9301      	str	r3, [sp, #4]
 8008d34:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008d36:	4649      	mov	r1, r9
 8008d38:	9300      	str	r3, [sp, #0]
 8008d3a:	4640      	mov	r0, r8
 8008d3c:	463b      	mov	r3, r7
 8008d3e:	9603      	str	r6, [sp, #12]
 8008d40:	9502      	str	r5, [sp, #8]
 8008d42:	f7ff fedb 	bl	8008afc <_DrawGradient>
 8008d46:	f7fd fef1 	bl	8006b2c <WM__GetNextIVR>
 8008d4a:	2800      	cmp	r0, #0
 8008d4c:	d1ef      	bne.n	8008d2e <GUI_DrawGradientH+0x36>
 8008d4e:	b007      	add	sp, #28
 8008d50:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008d54:	20000014 	.word	0x20000014
 8008d58:	0800309d 	.word	0x0800309d

08008d5c <GUI_DrawHLine>:
 8008d5c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008d5e:	4d10      	ldr	r5, [pc, #64]	@ (8008da0 <GUI_DrawHLine+0x44>)
 8008d60:	682b      	ldr	r3, [r5, #0]
 8008d62:	6d1e      	ldr	r6, [r3, #80]	@ 0x50
 8008d64:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
 8008d66:	4406      	add	r6, r0
 8008d68:	1867      	adds	r7, r4, r1
 8008d6a:	b233      	sxth	r3, r6
 8008d6c:	4414      	add	r4, r2
 8008d6e:	4668      	mov	r0, sp
 8008d70:	f8ad 7000 	strh.w	r7, [sp]
 8008d74:	f8ad 4004 	strh.w	r4, [sp, #4]
 8008d78:	f8ad 3002 	strh.w	r3, [sp, #2]
 8008d7c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8008d80:	f7fd ff96 	bl	8006cb0 <WM__InitIVRSearch>
 8008d84:	b148      	cbz	r0, 8008d9a <GUI_DrawHLine+0x3e>
 8008d86:	682b      	ldr	r3, [r5, #0]
 8008d88:	4622      	mov	r2, r4
 8008d8a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8008d8c:	4631      	mov	r1, r6
 8008d8e:	681b      	ldr	r3, [r3, #0]
 8008d90:	4638      	mov	r0, r7
 8008d92:	4798      	blx	r3
 8008d94:	f7fd feca 	bl	8006b2c <WM__GetNextIVR>
 8008d98:	e7f4      	b.n	8008d84 <GUI_DrawHLine+0x28>
 8008d9a:	b003      	add	sp, #12
 8008d9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008d9e:	bf00      	nop
 8008da0:	20000014 	.word	0x20000014

08008da4 <GUI_DrawVLine>:
 8008da4:	4b0f      	ldr	r3, [pc, #60]	@ (8008de4 <GUI_DrawVLine+0x40>)
 8008da6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008da8:	681b      	ldr	r3, [r3, #0]
 8008daa:	6cdd      	ldr	r5, [r3, #76]	@ 0x4c
 8008dac:	6d1c      	ldr	r4, [r3, #80]	@ 0x50
 8008dae:	4405      	add	r5, r0
 8008db0:	1866      	adds	r6, r4, r1
 8008db2:	b22b      	sxth	r3, r5
 8008db4:	4414      	add	r4, r2
 8008db6:	4668      	mov	r0, sp
 8008db8:	f8ad 3000 	strh.w	r3, [sp]
 8008dbc:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008dc0:	f8ad 6002 	strh.w	r6, [sp, #2]
 8008dc4:	f8ad 4006 	strh.w	r4, [sp, #6]
 8008dc8:	f7fd ff72 	bl	8006cb0 <WM__InitIVRSearch>
 8008dcc:	b138      	cbz	r0, 8008dde <GUI_DrawVLine+0x3a>
 8008dce:	4622      	mov	r2, r4
 8008dd0:	4631      	mov	r1, r6
 8008dd2:	4628      	mov	r0, r5
 8008dd4:	f7fa f962 	bl	800309c <LCD_DrawVLine>
 8008dd8:	f7fd fea8 	bl	8006b2c <WM__GetNextIVR>
 8008ddc:	e7f6      	b.n	8008dcc <GUI_DrawVLine+0x28>
 8008dde:	b002      	add	sp, #8
 8008de0:	bd70      	pop	{r4, r5, r6, pc}
 8008de2:	bf00      	nop
 8008de4:	20000014 	.word	0x20000014

08008de8 <GUI_SelectLayer>:
 8008de8:	b570      	push	{r4, r5, r6, lr}
 8008dea:	4d08      	ldr	r5, [pc, #32]	@ (8008e0c <GUI_SelectLayer+0x24>)
 8008dec:	2801      	cmp	r0, #1
 8008dee:	682b      	ldr	r3, [r5, #0]
 8008df0:	4604      	mov	r4, r0
 8008df2:	7c5e      	ldrb	r6, [r3, #17]
 8008df4:	d808      	bhi.n	8008e08 <GUI_SelectLayer+0x20>
 8008df6:	f7f9 fead 	bl	8002b54 <GUI_DEVICE__GetpDriver>
 8008dfa:	b128      	cbz	r0, 8008e08 <GUI_SelectLayer+0x20>
 8008dfc:	682b      	ldr	r3, [r5, #0]
 8008dfe:	745c      	strb	r4, [r3, #17]
 8008e00:	f7f9 fcac 	bl	800275c <GUI_SelectLCD>
 8008e04:	4b02      	ldr	r3, [pc, #8]	@ (8008e10 <GUI_SelectLayer+0x28>)
 8008e06:	601c      	str	r4, [r3, #0]
 8008e08:	4630      	mov	r0, r6
 8008e0a:	bd70      	pop	{r4, r5, r6, pc}
 8008e0c:	20000014 	.word	0x20000014
 8008e10:	20002c74 	.word	0x20002c74

08008e14 <_Unlink>:
 8008e14:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008e16:	4605      	mov	r5, r0
 8008e18:	b1e8      	cbz	r0, 8008e56 <_Unlink+0x42>
 8008e1a:	f7f9 f919 	bl	8002050 <GUI_ALLOC_LockH>
 8008e1e:	4b0f      	ldr	r3, [pc, #60]	@ (8008e5c <_Unlink+0x48>)
 8008e20:	9000      	str	r0, [sp, #0]
 8008e22:	685c      	ldr	r4, [r3, #4]
 8008e24:	42a5      	cmp	r5, r4
 8008e26:	d105      	bne.n	8008e34 <_Unlink+0x20>
 8008e28:	6842      	ldr	r2, [r0, #4]
 8008e2a:	605a      	str	r2, [r3, #4]
 8008e2c:	e010      	b.n	8008e50 <_Unlink+0x3c>
 8008e2e:	a801      	add	r0, sp, #4
 8008e30:	f7f9 f91c 	bl	800206c <GUI_ALLOC_UnlockH>
 8008e34:	b164      	cbz	r4, 8008e50 <_Unlink+0x3c>
 8008e36:	4620      	mov	r0, r4
 8008e38:	f7f9 f90a 	bl	8002050 <GUI_ALLOC_LockH>
 8008e3c:	6844      	ldr	r4, [r0, #4]
 8008e3e:	9001      	str	r0, [sp, #4]
 8008e40:	42a5      	cmp	r5, r4
 8008e42:	d1f4      	bne.n	8008e2e <_Unlink+0x1a>
 8008e44:	9b00      	ldr	r3, [sp, #0]
 8008e46:	685b      	ldr	r3, [r3, #4]
 8008e48:	6043      	str	r3, [r0, #4]
 8008e4a:	a801      	add	r0, sp, #4
 8008e4c:	f7f9 f90e 	bl	800206c <GUI_ALLOC_UnlockH>
 8008e50:	4668      	mov	r0, sp
 8008e52:	f7f9 f90b 	bl	800206c <GUI_ALLOC_UnlockH>
 8008e56:	b003      	add	sp, #12
 8008e58:	bd30      	pop	{r4, r5, pc}
 8008e5a:	bf00      	nop
 8008e5c:	20000270 	.word	0x20000270

08008e60 <GUI_TIMER__GetFirstTimer>:
 8008e60:	2300      	movs	r3, #0
 8008e62:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008e64:	6003      	str	r3, [r0, #0]
 8008e66:	4b09      	ldr	r3, [pc, #36]	@ (8008e8c <GUI_TIMER__GetFirstTimer+0x2c>)
 8008e68:	4605      	mov	r5, r0
 8008e6a:	681c      	ldr	r4, [r3, #0]
 8008e6c:	b154      	cbz	r4, 8008e84 <GUI_TIMER__GetFirstTimer+0x24>
 8008e6e:	4620      	mov	r0, r4
 8008e70:	f7f9 f8ee 	bl	8002050 <GUI_ALLOC_LockH>
 8008e74:	ab02      	add	r3, sp, #8
 8008e76:	6902      	ldr	r2, [r0, #16]
 8008e78:	f843 0d04 	str.w	r0, [r3, #-4]!
 8008e7c:	602a      	str	r2, [r5, #0]
 8008e7e:	4618      	mov	r0, r3
 8008e80:	f7f9 f8f4 	bl	800206c <GUI_ALLOC_UnlockH>
 8008e84:	4620      	mov	r0, r4
 8008e86:	b003      	add	sp, #12
 8008e88:	bd30      	pop	{r4, r5, pc}
 8008e8a:	bf00      	nop
 8008e8c:	20000270 	.word	0x20000270

08008e90 <GUI_TIMER__GetNextTimerLin>:
 8008e90:	2300      	movs	r3, #0
 8008e92:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008e94:	600b      	str	r3, [r1, #0]
 8008e96:	460e      	mov	r6, r1
 8008e98:	4604      	mov	r4, r0
 8008e9a:	b190      	cbz	r0, 8008ec2 <GUI_TIMER__GetNextTimerLin+0x32>
 8008e9c:	f7f9 f8d8 	bl	8002050 <GUI_ALLOC_LockH>
 8008ea0:	6884      	ldr	r4, [r0, #8]
 8008ea2:	ad02      	add	r5, sp, #8
 8008ea4:	f845 0d04 	str.w	r0, [r5, #-4]!
 8008ea8:	b144      	cbz	r4, 8008ebc <GUI_TIMER__GetNextTimerLin+0x2c>
 8008eaa:	4628      	mov	r0, r5
 8008eac:	f7f9 f8de 	bl	800206c <GUI_ALLOC_UnlockH>
 8008eb0:	4620      	mov	r0, r4
 8008eb2:	f7f9 f8cd 	bl	8002050 <GUI_ALLOC_LockH>
 8008eb6:	6903      	ldr	r3, [r0, #16]
 8008eb8:	9001      	str	r0, [sp, #4]
 8008eba:	6033      	str	r3, [r6, #0]
 8008ebc:	4628      	mov	r0, r5
 8008ebe:	f7f9 f8d5 	bl	800206c <GUI_ALLOC_UnlockH>
 8008ec2:	4620      	mov	r0, r4
 8008ec4:	b002      	add	sp, #8
 8008ec6:	bd70      	pop	{r4, r5, r6, pc}

08008ec8 <GUI_TIMER_Delete>:
 8008ec8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008eca:	4604      	mov	r4, r0
 8008ecc:	b350      	cbz	r0, 8008f24 <GUI_TIMER_Delete+0x5c>
 8008ece:	4e16      	ldr	r6, [pc, #88]	@ (8008f28 <GUI_TIMER_Delete+0x60>)
 8008ed0:	6835      	ldr	r5, [r6, #0]
 8008ed2:	42a8      	cmp	r0, r5
 8008ed4:	d10b      	bne.n	8008eee <GUI_TIMER_Delete+0x26>
 8008ed6:	f7f9 f8bb 	bl	8002050 <GUI_ALLOC_LockH>
 8008eda:	ab02      	add	r3, sp, #8
 8008edc:	6882      	ldr	r2, [r0, #8]
 8008ede:	f843 0d04 	str.w	r0, [r3, #-4]!
 8008ee2:	6032      	str	r2, [r6, #0]
 8008ee4:	4618      	mov	r0, r3
 8008ee6:	e015      	b.n	8008f14 <GUI_TIMER_Delete+0x4c>
 8008ee8:	4668      	mov	r0, sp
 8008eea:	f7f9 f8bf 	bl	800206c <GUI_ALLOC_UnlockH>
 8008eee:	b19d      	cbz	r5, 8008f18 <GUI_TIMER_Delete+0x50>
 8008ef0:	4628      	mov	r0, r5
 8008ef2:	f7f9 f8ad 	bl	8002050 <GUI_ALLOC_LockH>
 8008ef6:	6885      	ldr	r5, [r0, #8]
 8008ef8:	9000      	str	r0, [sp, #0]
 8008efa:	42ac      	cmp	r4, r5
 8008efc:	d1f4      	bne.n	8008ee8 <GUI_TIMER_Delete+0x20>
 8008efe:	4620      	mov	r0, r4
 8008f00:	f7f9 f8a6 	bl	8002050 <GUI_ALLOC_LockH>
 8008f04:	9b00      	ldr	r3, [sp, #0]
 8008f06:	6882      	ldr	r2, [r0, #8]
 8008f08:	9001      	str	r0, [sp, #4]
 8008f0a:	609a      	str	r2, [r3, #8]
 8008f0c:	a801      	add	r0, sp, #4
 8008f0e:	f7f9 f8ad 	bl	800206c <GUI_ALLOC_UnlockH>
 8008f12:	4668      	mov	r0, sp
 8008f14:	f7f9 f8aa 	bl	800206c <GUI_ALLOC_UnlockH>
 8008f18:	4620      	mov	r0, r4
 8008f1a:	f7ff ff7b 	bl	8008e14 <_Unlink>
 8008f1e:	4620      	mov	r0, r4
 8008f20:	f7f9 f8d0 	bl	80020c4 <GUI_ALLOC_Free>
 8008f24:	b002      	add	sp, #8
 8008f26:	bd70      	pop	{r4, r5, r6, pc}
 8008f28:	20000270 	.word	0x20000270

08008f2c <GUI_TIMER_GetFlag>:
 8008f2c:	b513      	push	{r0, r1, r4, lr}
 8008f2e:	460c      	mov	r4, r1
 8008f30:	b168      	cbz	r0, 8008f4e <GUI_TIMER_GetFlag+0x22>
 8008f32:	f7f9 f88d 	bl	8002050 <GUI_ALLOC_LockH>
 8008f36:	ab02      	add	r3, sp, #8
 8008f38:	8982      	ldrh	r2, [r0, #12]
 8008f3a:	f843 0d04 	str.w	r0, [r3, #-4]!
 8008f3e:	4222      	tst	r2, r4
 8008f40:	4618      	mov	r0, r3
 8008f42:	bf14      	ite	ne
 8008f44:	2401      	movne	r4, #1
 8008f46:	2400      	moveq	r4, #0
 8008f48:	f7f9 f890 	bl	800206c <GUI_ALLOC_UnlockH>
 8008f4c:	e000      	b.n	8008f50 <GUI_TIMER_GetFlag+0x24>
 8008f4e:	2401      	movs	r4, #1
 8008f50:	4620      	mov	r0, r4
 8008f52:	b002      	add	sp, #8
 8008f54:	bd10      	pop	{r4, pc}

08008f56 <GUI_AddDecMin>:
 8008f56:	b570      	push	{r4, r5, r6, lr}
 8008f58:	460d      	mov	r5, r1
 8008f5a:	4604      	mov	r4, r0
 8008f5c:	f7f9 faa2 	bl	80024a4 <GUI_Long2Len>
 8008f60:	462b      	mov	r3, r5
 8008f62:	b2c1      	uxtb	r1, r0
 8008f64:	2200      	movs	r2, #0
 8008f66:	4620      	mov	r0, r4
 8008f68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008f6c:	f7f9 bab2 	b.w	80024d4 <GUI_AddDecShift>

08008f70 <GUI__MixColorsBulk>:
 8008f70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008f74:	4606      	mov	r6, r0
 8008f76:	460f      	mov	r7, r1
 8008f78:	4690      	mov	r8, r2
 8008f7a:	b087      	sub	sp, #28
 8008f7c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8008f80:	9304      	str	r3, [sp, #16]
 8008f82:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8008f84:	009d      	lsls	r5, r3, #2
 8008f86:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8008f88:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8008f8c:	9303      	str	r3, [sp, #12]
 8008f8e:	2300      	movs	r3, #0
 8008f90:	9301      	str	r3, [sp, #4]
 8008f92:	4b18      	ldr	r3, [pc, #96]	@ (8008ff4 <GUI__MixColorsBulk+0x84>)
 8008f94:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8008f96:	9901      	ldr	r1, [sp, #4]
 8008f98:	4291      	cmp	r1, r2
 8008f9a:	d028      	beq.n	8008fee <GUI__MixColorsBulk+0x7e>
 8008f9c:	46c2      	mov	sl, r8
 8008f9e:	46b3      	mov	fp, r6
 8008fa0:	f8dd 9048 	ldr.w	r9, [sp, #72]	@ 0x48
 8008fa4:	9702      	str	r7, [sp, #8]
 8008fa6:	f85b 0b04 	ldr.w	r0, [fp], #4
 8008faa:	9904      	ldr	r1, [sp, #16]
 8008fac:	0e02      	lsrs	r2, r0, #24
 8008fae:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8008fb2:	434a      	muls	r2, r1
 8008fb4:	21ff      	movs	r1, #255	@ 0xff
 8008fb6:	fbb2 f2f1 	udiv	r2, r2, r1
 8008fba:	9c02      	ldr	r4, [sp, #8]
 8008fbc:	b2d2      	uxtb	r2, r2
 8008fbe:	f854 1b04 	ldr.w	r1, [r4], #4
 8008fc2:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8008fc6:	9402      	str	r4, [sp, #8]
 8008fc8:	681c      	ldr	r4, [r3, #0]
 8008fca:	9305      	str	r3, [sp, #20]
 8008fcc:	47a0      	blx	r4
 8008fce:	f1b9 0901 	subs.w	r9, r9, #1
 8008fd2:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8008fd6:	f84a 0b04 	str.w	r0, [sl], #4
 8008fda:	9b05      	ldr	r3, [sp, #20]
 8008fdc:	d1e3      	bne.n	8008fa6 <GUI__MixColorsBulk+0x36>
 8008fde:	9a03      	ldr	r2, [sp, #12]
 8008fe0:	442e      	add	r6, r5
 8008fe2:	4417      	add	r7, r2
 8008fe4:	9a01      	ldr	r2, [sp, #4]
 8008fe6:	44a8      	add	r8, r5
 8008fe8:	3201      	adds	r2, #1
 8008fea:	9201      	str	r2, [sp, #4]
 8008fec:	e7d2      	b.n	8008f94 <GUI__MixColorsBulk+0x24>
 8008fee:	b007      	add	sp, #28
 8008ff0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008ff4:	20000094 	.word	0x20000094

08008ff8 <GUI__MixColors>:
 8008ff8:	f081 417f 	eor.w	r1, r1, #4278190080	@ 0xff000000
 8008ffc:	f080 407f 	eor.w	r0, r0, #4278190080	@ 0xff000000
 8009000:	0e0b      	lsrs	r3, r1, #24
 8009002:	ea4f 6310 	mov.w	r3, r0, lsr #24
 8009006:	fb02 f203 	mul.w	r2, r2, r3
 800900a:	f04f 03ff 	mov.w	r3, #255	@ 0xff
 800900e:	fbb2 f2f3 	udiv	r2, r2, r3
 8009012:	bf08      	it	eq
 8009014:	f020 417f 	biceq.w	r1, r0, #4278190080	@ 0xff000000
 8009018:	b530      	push	{r4, r5, lr}
 800901a:	f3c0 2407 	ubfx	r4, r0, #8, #8
 800901e:	1a9d      	subs	r5, r3, r2
 8009020:	f044 7380 	orr.w	r3, r4, #16777216	@ 0x1000000
 8009024:	0a0c      	lsrs	r4, r1, #8
 8009026:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 800902a:	436c      	muls	r4, r5
 800902c:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8009030:	fb02 4403 	mla	r4, r2, r3, r4
 8009034:	4342      	muls	r2, r0
 8009036:	f001 13ff 	and.w	r3, r1, #16711935	@ 0xff00ff
 800903a:	fb05 2103 	mla	r1, r5, r3, r2
 800903e:	0a09      	lsrs	r1, r1, #8
 8009040:	f004 24ff 	and.w	r4, r4, #4278255360	@ 0xff00ff00
 8009044:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8009048:	ea44 0001 	orr.w	r0, r4, r1
 800904c:	f080 407f 	eor.w	r0, r0, #4278190080	@ 0xff000000
 8009050:	bd30      	pop	{r4, r5, pc}
	...

08009054 <_OnExit>:
 8009054:	b510      	push	{r4, lr}
 8009056:	4c08      	ldr	r4, [pc, #32]	@ (8009078 <_OnExit+0x24>)
 8009058:	6820      	ldr	r0, [r4, #0]
 800905a:	f7f8 ffe5 	bl	8002028 <GUI_ALLOC_FreeFixedBlock>
 800905e:	6860      	ldr	r0, [r4, #4]
 8009060:	f7f8 ffe2 	bl	8002028 <GUI_ALLOC_FreeFixedBlock>
 8009064:	68a0      	ldr	r0, [r4, #8]
 8009066:	f7f8 ffdf 	bl	8002028 <GUI_ALLOC_FreeFixedBlock>
 800906a:	2300      	movs	r3, #0
 800906c:	60a3      	str	r3, [r4, #8]
 800906e:	6063      	str	r3, [r4, #4]
 8009070:	6023      	str	r3, [r4, #0]
 8009072:	60e3      	str	r3, [r4, #12]
 8009074:	6123      	str	r3, [r4, #16]
 8009076:	bd10      	pop	{r4, pc}
 8009078:	20000284 	.word	0x20000284

0800907c <GUI__GetAlphaBuffer>:
 800907c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009080:	4c29      	ldr	r4, [pc, #164]	@ (8009128 <GUI__GetAlphaBuffer+0xac>)
 8009082:	461d      	mov	r5, r3
 8009084:	6923      	ldr	r3, [r4, #16]
 8009086:	4606      	mov	r6, r0
 8009088:	4688      	mov	r8, r1
 800908a:	4617      	mov	r7, r2
 800908c:	b93b      	cbnz	r3, 800909e <GUI__GetAlphaBuffer+0x22>
 800908e:	4620      	mov	r0, r4
 8009090:	2301      	movs	r3, #1
 8009092:	6123      	str	r3, [r4, #16]
 8009094:	4b25      	ldr	r3, [pc, #148]	@ (800912c <GUI__GetAlphaBuffer+0xb0>)
 8009096:	f840 3f14 	str.w	r3, [r0, #20]!
 800909a:	f7f9 fd49 	bl	8002b30 <GUI__RegisterExit>
 800909e:	68e3      	ldr	r3, [r4, #12]
 80090a0:	f8df 9084 	ldr.w	r9, [pc, #132]	@ 8009128 <GUI__GetAlphaBuffer+0xac>
 80090a4:	b943      	cbnz	r3, 80090b8 <GUI__GetAlphaBuffer+0x3c>
 80090a6:	4b22      	ldr	r3, [pc, #136]	@ (8009130 <GUI__GetAlphaBuffer+0xb4>)
 80090a8:	681b      	ldr	r3, [r3, #0]
 80090aa:	f8c9 300c 	str.w	r3, [r9, #12]
 80090ae:	b91b      	cbnz	r3, 80090b8 <GUI__GetAlphaBuffer+0x3c>
 80090b0:	f7fa fc36 	bl	8003920 <LCD_GetVXSizeMax>
 80090b4:	f8c9 000c 	str.w	r0, [r9, #12]
 80090b8:	b10d      	cbz	r5, 80090be <GUI__GetAlphaBuffer+0x42>
 80090ba:	68e3      	ldr	r3, [r4, #12]
 80090bc:	602b      	str	r3, [r5, #0]
 80090be:	b17e      	cbz	r6, 80090e0 <GUI__GetAlphaBuffer+0x64>
 80090c0:	6823      	ldr	r3, [r4, #0]
 80090c2:	4d19      	ldr	r5, [pc, #100]	@ (8009128 <GUI__GetAlphaBuffer+0xac>)
 80090c4:	b943      	cbnz	r3, 80090d8 <GUI__GetAlphaBuffer+0x5c>
 80090c6:	68e8      	ldr	r0, [r5, #12]
 80090c8:	0080      	lsls	r0, r0, #2
 80090ca:	f7f9 f891 	bl	80021f0 <GUI_ALLOC_GetFixedBlock>
 80090ce:	6028      	str	r0, [r5, #0]
 80090d0:	fab0 f580 	clz	r5, r0
 80090d4:	096d      	lsrs	r5, r5, #5
 80090d6:	e000      	b.n	80090da <GUI__GetAlphaBuffer+0x5e>
 80090d8:	2500      	movs	r5, #0
 80090da:	6823      	ldr	r3, [r4, #0]
 80090dc:	6033      	str	r3, [r6, #0]
 80090de:	e000      	b.n	80090e2 <GUI__GetAlphaBuffer+0x66>
 80090e0:	4635      	mov	r5, r6
 80090e2:	f1b8 0f00 	cmp.w	r8, #0
 80090e6:	d00d      	beq.n	8009104 <GUI__GetAlphaBuffer+0x88>
 80090e8:	6863      	ldr	r3, [r4, #4]
 80090ea:	4e0f      	ldr	r6, [pc, #60]	@ (8009128 <GUI__GetAlphaBuffer+0xac>)
 80090ec:	b93b      	cbnz	r3, 80090fe <GUI__GetAlphaBuffer+0x82>
 80090ee:	68f0      	ldr	r0, [r6, #12]
 80090f0:	0080      	lsls	r0, r0, #2
 80090f2:	f7f9 f87d 	bl	80021f0 <GUI_ALLOC_GetFixedBlock>
 80090f6:	2800      	cmp	r0, #0
 80090f8:	6070      	str	r0, [r6, #4]
 80090fa:	bf08      	it	eq
 80090fc:	2501      	moveq	r5, #1
 80090fe:	6863      	ldr	r3, [r4, #4]
 8009100:	f8c8 3000 	str.w	r3, [r8]
 8009104:	b167      	cbz	r7, 8009120 <GUI__GetAlphaBuffer+0xa4>
 8009106:	68a3      	ldr	r3, [r4, #8]
 8009108:	4e07      	ldr	r6, [pc, #28]	@ (8009128 <GUI__GetAlphaBuffer+0xac>)
 800910a:	b93b      	cbnz	r3, 800911c <GUI__GetAlphaBuffer+0xa0>
 800910c:	68f0      	ldr	r0, [r6, #12]
 800910e:	0080      	lsls	r0, r0, #2
 8009110:	f7f9 f86e 	bl	80021f0 <GUI_ALLOC_GetFixedBlock>
 8009114:	2800      	cmp	r0, #0
 8009116:	60b0      	str	r0, [r6, #8]
 8009118:	bf08      	it	eq
 800911a:	2501      	moveq	r5, #1
 800911c:	68a3      	ldr	r3, [r4, #8]
 800911e:	603b      	str	r3, [r7, #0]
 8009120:	4628      	mov	r0, r5
 8009122:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009126:	bf00      	nop
 8009128:	20000284 	.word	0x20000284
 800912c:	08009055 	.word	0x08009055
 8009130:	20002c40 	.word	0x20002c40

08009134 <GUI__DoAlphaBlending>:
 8009134:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009138:	b093      	sub	sp, #76	@ 0x4c
 800913a:	9f1d      	ldr	r7, [sp, #116]	@ 0x74
 800913c:	2400      	movs	r4, #0
 800913e:	900a      	str	r0, [sp, #40]	@ 0x28
 8009140:	910b      	str	r1, [sp, #44]	@ 0x2c
 8009142:	4692      	mov	sl, r2
 8009144:	461e      	mov	r6, r3
 8009146:	603c      	str	r4, [r7, #0]
 8009148:	ab11      	add	r3, sp, #68	@ 0x44
 800914a:	4622      	mov	r2, r4
 800914c:	a910      	add	r1, sp, #64	@ 0x40
 800914e:	a80f      	add	r0, sp, #60	@ 0x3c
 8009150:	f7ff ff94 	bl	800907c <GUI__GetAlphaBuffer>
 8009154:	4605      	mov	r5, r0
 8009156:	2800      	cmp	r0, #0
 8009158:	f040 80c5 	bne.w	80092e6 <GUI__DoAlphaBlending+0x1b2>
 800915c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800915e:	4c64      	ldr	r4, [pc, #400]	@ (80092f0 <GUI__DoAlphaBlending+0x1bc>)
 8009160:	42b3      	cmp	r3, r6
 8009162:	bfa8      	it	ge
 8009164:	4633      	movge	r3, r6
 8009166:	9309      	str	r3, [sp, #36]	@ 0x24
 8009168:	6823      	ldr	r3, [r4, #0]
 800916a:	7c58      	ldrb	r0, [r3, #17]
 800916c:	4b61      	ldr	r3, [pc, #388]	@ (80092f4 <GUI__DoAlphaBlending+0x1c0>)
 800916e:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8009172:	9306      	str	r3, [sp, #24]
 8009174:	691b      	ldr	r3, [r3, #16]
 8009176:	930c      	str	r3, [sp, #48]	@ 0x30
 8009178:	f7fa fb9e 	bl	80038b8 <GUI_GetBitsPerPixelEx>
 800917c:	6823      	ldr	r3, [r4, #0]
 800917e:	9007      	str	r0, [sp, #28]
 8009180:	7c58      	ldrb	r0, [r3, #17]
 8009182:	f7fa fbb7 	bl	80038f4 <GUI_GetpfIndex2ColorEx>
 8009186:	4b5c      	ldr	r3, [pc, #368]	@ (80092f8 <GUI__DoAlphaBlending+0x1c4>)
 8009188:	9003      	str	r0, [sp, #12]
 800918a:	4298      	cmp	r0, r3
 800918c:	d005      	beq.n	800919a <GUI__DoAlphaBlending+0x66>
 800918e:	4b5b      	ldr	r3, [pc, #364]	@ (80092fc <GUI__DoAlphaBlending+0x1c8>)
 8009190:	1ac3      	subs	r3, r0, r3
 8009192:	bf18      	it	ne
 8009194:	2301      	movne	r3, #1
 8009196:	9305      	str	r3, [sp, #20]
 8009198:	e000      	b.n	800919c <GUI__DoAlphaBlending+0x68>
 800919a:	9505      	str	r5, [sp, #20]
 800919c:	2600      	movs	r6, #0
 800919e:	4635      	mov	r5, r6
 80091a0:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80091a4:	4653      	mov	r3, sl
 80091a6:	f853 0b04 	ldr.w	r0, [r3], #4
 80091aa:	930d      	str	r3, [sp, #52]	@ 0x34
 80091ac:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80091ae:	4798      	blx	r3
 80091b0:	0e03      	lsrs	r3, r0, #24
 80091b2:	9004      	str	r0, [sp, #16]
 80091b4:	9308      	str	r3, [sp, #32]
 80091b6:	f000 8084 	beq.w	80092c2 <GUI__DoAlphaBlending+0x18e>
 80091ba:	2d00      	cmp	r5, #0
 80091bc:	d139      	bne.n	8009232 <GUI__DoAlphaBlending+0xfe>
 80091be:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80091c0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80091c2:	eb03 0906 	add.w	r9, r3, r6
 80091c6:	4b4a      	ldr	r3, [pc, #296]	@ (80092f0 <GUI__DoAlphaBlending+0x1bc>)
 80091c8:	681b      	ldr	r3, [r3, #0]
 80091ca:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80091ce:	454b      	cmp	r3, r9
 80091d0:	bfc4      	itt	gt
 80091d2:	ebc9 0503 	rsbgt	r5, r9, r3
 80091d6:	4699      	movgt	r9, r3
 80091d8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80091da:	19ac      	adds	r4, r5, r6
 80091dc:	eb03 0802 	add.w	r8, r3, r2
 80091e0:	9b06      	ldr	r3, [sp, #24]
 80091e2:	00a4      	lsls	r4, r4, #2
 80091e4:	9301      	str	r3, [sp, #4]
 80091e6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80091e8:	4648      	mov	r0, r9
 80091ea:	4423      	add	r3, r4
 80091ec:	9300      	str	r3, [sp, #0]
 80091ee:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80091f0:	f108 32ff 	add.w	r2, r8, #4294967295
 80091f4:	4619      	mov	r1, r3
 80091f6:	f000 fc4f 	bl	8009a98 <GUI_ReadRectEx>
 80091fa:	9b07      	ldr	r3, [sp, #28]
 80091fc:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80091fe:	2b17      	cmp	r3, #23
 8009200:	dc07      	bgt.n	8009212 <GUI__DoAlphaBlending+0xde>
 8009202:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8009204:	9a07      	ldr	r2, [sp, #28]
 8009206:	ebc5 010b 	rsb	r1, r5, fp
 800920a:	4420      	add	r0, r4
 800920c:	f000 fa12 	bl	8009634 <GUI__ExpandPixelIndicesEx>
 8009210:	e001      	b.n	8009216 <GUI__DoAlphaBlending+0xe2>
 8009212:	9b05      	ldr	r3, [sp, #20]
 8009214:	b90b      	cbnz	r3, 800921a <GUI__DoAlphaBlending+0xe6>
 8009216:	2501      	movs	r5, #1
 8009218:	e00b      	b.n	8009232 <GUI__DoAlphaBlending+0xfe>
 800921a:	4404      	add	r4, r0
 800921c:	ebc9 0808 	rsb	r8, r9, r8
 8009220:	6820      	ldr	r0, [r4, #0]
 8009222:	9b03      	ldr	r3, [sp, #12]
 8009224:	4798      	blx	r3
 8009226:	f1b8 0801 	subs.w	r8, r8, #1
 800922a:	f844 0b04 	str.w	r0, [r4], #4
 800922e:	d1f7      	bne.n	8009220 <GUI__DoAlphaBlending+0xec>
 8009230:	e7f1      	b.n	8009216 <GUI__DoAlphaBlending+0xe2>
 8009232:	4b33      	ldr	r3, [pc, #204]	@ (8009300 <GUI__DoAlphaBlending+0x1cc>)
 8009234:	00b4      	lsls	r4, r6, #2
 8009236:	f8d3 801c 	ldr.w	r8, [r3, #28]
 800923a:	f1b8 0f00 	cmp.w	r8, #0
 800923e:	d027      	beq.n	8009290 <GUI__DoAlphaBlending+0x15c>
 8009240:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8009242:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8009244:	192a      	adds	r2, r5, r4
 8009246:	4421      	add	r1, r4
 8009248:	910f      	str	r1, [sp, #60]	@ 0x3c
 800924a:	465b      	mov	r3, fp
 800924c:	9210      	str	r2, [sp, #64]	@ 0x40
 800924e:	4650      	mov	r0, sl
 8009250:	47c0      	blx	r8
 8009252:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8009254:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8009256:	2300      	movs	r3, #0
 8009258:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 800925c:	f000 427f 	and.w	r2, r0, #4278190080	@ 0xff000000
 8009260:	f1b2 4f7f 	cmp.w	r2, #4278190080	@ 0xff000000
 8009264:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
 8009268:	d102      	bne.n	8009270 <GUI__DoAlphaBlending+0x13c>
 800926a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800926e:	e006      	b.n	800927e <GUI__DoAlphaBlending+0x14a>
 8009270:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 8009274:	f1b2 4f7f 	cmp.w	r2, #4278190080	@ 0xff000000
 8009278:	bf08      	it	eq
 800927a:	f841 0023 	streq.w	r0, [r1, r3, lsl #2]
 800927e:	3301      	adds	r3, #1
 8009280:	459b      	cmp	fp, r3
 8009282:	d1e9      	bne.n	8009258 <GUI__DoAlphaBlending+0x124>
 8009284:	683b      	ldr	r3, [r7, #0]
 8009286:	9510      	str	r5, [sp, #64]	@ 0x40
 8009288:	f043 0301 	orr.w	r3, r3, #1
 800928c:	603b      	str	r3, [r7, #0]
 800928e:	e028      	b.n	80092e2 <GUI__DoAlphaBlending+0x1ae>
 8009290:	9b08      	ldr	r3, [sp, #32]
 8009292:	f89d 2020 	ldrb.w	r2, [sp, #32]
 8009296:	2bff      	cmp	r3, #255	@ 0xff
 8009298:	f8dd 8040 	ldr.w	r8, [sp, #64]	@ 0x40
 800929c:	d104      	bne.n	80092a8 <GUI__DoAlphaBlending+0x174>
 800929e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80092a0:	591b      	ldr	r3, [r3, r4]
 80092a2:	f848 3004 	str.w	r3, [r8, r4]
 80092a6:	e014      	b.n	80092d2 <GUI__DoAlphaBlending+0x19e>
 80092a8:	43d2      	mvns	r2, r2
 80092aa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80092ac:	b2d2      	uxtb	r2, r2
 80092ae:	5919      	ldr	r1, [r3, r4]
 80092b0:	9b04      	ldr	r3, [sp, #16]
 80092b2:	f023 407f 	bic.w	r0, r3, #4278190080	@ 0xff000000
 80092b6:	4b13      	ldr	r3, [pc, #76]	@ (8009304 <GUI__DoAlphaBlending+0x1d0>)
 80092b8:	681b      	ldr	r3, [r3, #0]
 80092ba:	4798      	blx	r3
 80092bc:	f848 0004 	str.w	r0, [r8, r4]
 80092c0:	e003      	b.n	80092ca <GUI__DoAlphaBlending+0x196>
 80092c2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80092c4:	9a04      	ldr	r2, [sp, #16]
 80092c6:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 80092ca:	683b      	ldr	r3, [r7, #0]
 80092cc:	f043 0301 	orr.w	r3, r3, #1
 80092d0:	603b      	str	r3, [r7, #0]
 80092d2:	f1bb 0b01 	subs.w	fp, fp, #1
 80092d6:	f106 0601 	add.w	r6, r6, #1
 80092da:	f8dd a034 	ldr.w	sl, [sp, #52]	@ 0x34
 80092de:	f47f af61 	bne.w	80091a4 <GUI__DoAlphaBlending+0x70>
 80092e2:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80092e4:	e000      	b.n	80092e8 <GUI__DoAlphaBlending+0x1b4>
 80092e6:	4620      	mov	r0, r4
 80092e8:	b013      	add	sp, #76	@ 0x4c
 80092ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80092ee:	bf00      	nop
 80092f0:	20000014 	.word	0x20000014
 80092f4:	20002c38 	.word	0x20002c38
 80092f8:	0800a5e3 	.word	0x0800a5e3
 80092fc:	0800a5e5 	.word	0x0800a5e5
 8009300:	20000284 	.word	0x20000284
 8009304:	20000094 	.word	0x20000094

08009308 <GUI__AllocAlphaBuffer>:
 8009308:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800930a:	b908      	cbnz	r0, 8009310 <GUI__AllocAlphaBuffer+0x8>
 800930c:	4602      	mov	r2, r0
 800930e:	e000      	b.n	8009312 <GUI__AllocAlphaBuffer+0xa>
 8009310:	aa03      	add	r2, sp, #12
 8009312:	2300      	movs	r3, #0
 8009314:	a902      	add	r1, sp, #8
 8009316:	a801      	add	r0, sp, #4
 8009318:	f7ff feb0 	bl	800907c <GUI__GetAlphaBuffer>
 800931c:	b005      	add	sp, #20
 800931e:	f85d fb04 	ldr.w	pc, [sp], #4

08009322 <GUI__CompactPixelIndices>:
 8009322:	2a08      	cmp	r2, #8
 8009324:	b510      	push	{r4, lr}
 8009326:	dd0e      	ble.n	8009346 <GUI__CompactPixelIndices+0x24>
 8009328:	2a10      	cmp	r2, #16
 800932a:	dc0a      	bgt.n	8009342 <GUI__CompactPixelIndices+0x20>
 800932c:	4603      	mov	r3, r0
 800932e:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8009332:	f850 2b04 	ldr.w	r2, [r0], #4
 8009336:	f823 2b02 	strh.w	r2, [r3], #2
 800933a:	428b      	cmp	r3, r1
 800933c:	d1f9      	bne.n	8009332 <GUI__CompactPixelIndices+0x10>
 800933e:	2001      	movs	r0, #1
 8009340:	bd10      	pop	{r4, pc}
 8009342:	2000      	movs	r0, #0
 8009344:	bd10      	pop	{r4, pc}
 8009346:	2a02      	cmp	r2, #2
 8009348:	d12a      	bne.n	80093a0 <GUI__CompactPixelIndices+0x7e>
 800934a:	4604      	mov	r4, r0
 800934c:	6803      	ldr	r3, [r0, #0]
 800934e:	2901      	cmp	r1, #1
 8009350:	ea4f 1383 	mov.w	r3, r3, lsl #6
 8009354:	b2db      	uxtb	r3, r3
 8009356:	d020      	beq.n	800939a <GUI__CompactPixelIndices+0x78>
 8009358:	6842      	ldr	r2, [r0, #4]
 800935a:	2902      	cmp	r1, #2
 800935c:	ea4f 1202 	mov.w	r2, r2, lsl #4
 8009360:	f002 0230 	and.w	r2, r2, #48	@ 0x30
 8009364:	ea43 0302 	orr.w	r3, r3, r2
 8009368:	d101      	bne.n	800936e <GUI__CompactPixelIndices+0x4c>
 800936a:	3008      	adds	r0, #8
 800936c:	e016      	b.n	800939c <GUI__CompactPixelIndices+0x7a>
 800936e:	6882      	ldr	r2, [r0, #8]
 8009370:	2903      	cmp	r1, #3
 8009372:	ea4f 0282 	mov.w	r2, r2, lsl #2
 8009376:	f002 020c 	and.w	r2, r2, #12
 800937a:	ea43 0302 	orr.w	r3, r3, r2
 800937e:	d101      	bne.n	8009384 <GUI__CompactPixelIndices+0x62>
 8009380:	300c      	adds	r0, #12
 8009382:	e00b      	b.n	800939c <GUI__CompactPixelIndices+0x7a>
 8009384:	68c2      	ldr	r2, [r0, #12]
 8009386:	3904      	subs	r1, #4
 8009388:	f002 0203 	and.w	r2, r2, #3
 800938c:	4313      	orrs	r3, r2
 800938e:	3010      	adds	r0, #16
 8009390:	f804 3b01 	strb.w	r3, [r4], #1
 8009394:	2900      	cmp	r1, #0
 8009396:	d1d9      	bne.n	800934c <GUI__CompactPixelIndices+0x2a>
 8009398:	e7d1      	b.n	800933e <GUI__CompactPixelIndices+0x1c>
 800939a:	3004      	adds	r0, #4
 800939c:	2100      	movs	r1, #0
 800939e:	e7f7      	b.n	8009390 <GUI__CompactPixelIndices+0x6e>
 80093a0:	2a04      	cmp	r2, #4
 80093a2:	d115      	bne.n	80093d0 <GUI__CompactPixelIndices+0xae>
 80093a4:	4604      	mov	r4, r0
 80093a6:	2901      	cmp	r1, #1
 80093a8:	6803      	ldr	r3, [r0, #0]
 80093aa:	bf18      	it	ne
 80093ac:	6842      	ldrne	r2, [r0, #4]
 80093ae:	ea4f 1303 	mov.w	r3, r3, lsl #4
 80093b2:	b2db      	uxtb	r3, r3
 80093b4:	bf1b      	ittet	ne
 80093b6:	f002 020f 	andne.w	r2, r2, #15
 80093ba:	4313      	orrne	r3, r2
 80093bc:	2100      	moveq	r1, #0
 80093be:	3902      	subne	r1, #2
 80093c0:	bf0c      	ite	eq
 80093c2:	3004      	addeq	r0, #4
 80093c4:	3008      	addne	r0, #8
 80093c6:	f804 3b01 	strb.w	r3, [r4], #1
 80093ca:	2900      	cmp	r1, #0
 80093cc:	d1eb      	bne.n	80093a6 <GUI__CompactPixelIndices+0x84>
 80093ce:	e7b6      	b.n	800933e <GUI__CompactPixelIndices+0x1c>
 80093d0:	2a01      	cmp	r2, #1
 80093d2:	4603      	mov	r3, r0
 80093d4:	d154      	bne.n	8009480 <GUI__CompactPixelIndices+0x15e>
 80093d6:	681a      	ldr	r2, [r3, #0]
 80093d8:	2901      	cmp	r1, #1
 80093da:	ea4f 12c2 	mov.w	r2, r2, lsl #7
 80093de:	b2d2      	uxtb	r2, r2
 80093e0:	d04b      	beq.n	800947a <GUI__CompactPixelIndices+0x158>
 80093e2:	685c      	ldr	r4, [r3, #4]
 80093e4:	2902      	cmp	r1, #2
 80093e6:	ea4f 1484 	mov.w	r4, r4, lsl #6
 80093ea:	f004 0440 	and.w	r4, r4, #64	@ 0x40
 80093ee:	ea42 0204 	orr.w	r2, r2, r4
 80093f2:	d101      	bne.n	80093f8 <GUI__CompactPixelIndices+0xd6>
 80093f4:	3308      	adds	r3, #8
 80093f6:	e041      	b.n	800947c <GUI__CompactPixelIndices+0x15a>
 80093f8:	689c      	ldr	r4, [r3, #8]
 80093fa:	2903      	cmp	r1, #3
 80093fc:	ea4f 1444 	mov.w	r4, r4, lsl #5
 8009400:	f004 0420 	and.w	r4, r4, #32
 8009404:	ea42 0204 	orr.w	r2, r2, r4
 8009408:	d101      	bne.n	800940e <GUI__CompactPixelIndices+0xec>
 800940a:	330c      	adds	r3, #12
 800940c:	e036      	b.n	800947c <GUI__CompactPixelIndices+0x15a>
 800940e:	68dc      	ldr	r4, [r3, #12]
 8009410:	2904      	cmp	r1, #4
 8009412:	ea4f 1404 	mov.w	r4, r4, lsl #4
 8009416:	f004 0410 	and.w	r4, r4, #16
 800941a:	ea42 0204 	orr.w	r2, r2, r4
 800941e:	d101      	bne.n	8009424 <GUI__CompactPixelIndices+0x102>
 8009420:	3310      	adds	r3, #16
 8009422:	e02b      	b.n	800947c <GUI__CompactPixelIndices+0x15a>
 8009424:	691c      	ldr	r4, [r3, #16]
 8009426:	2905      	cmp	r1, #5
 8009428:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800942c:	f004 0408 	and.w	r4, r4, #8
 8009430:	ea42 0204 	orr.w	r2, r2, r4
 8009434:	d101      	bne.n	800943a <GUI__CompactPixelIndices+0x118>
 8009436:	3314      	adds	r3, #20
 8009438:	e020      	b.n	800947c <GUI__CompactPixelIndices+0x15a>
 800943a:	695c      	ldr	r4, [r3, #20]
 800943c:	2906      	cmp	r1, #6
 800943e:	ea4f 0484 	mov.w	r4, r4, lsl #2
 8009442:	f004 0404 	and.w	r4, r4, #4
 8009446:	ea42 0204 	orr.w	r2, r2, r4
 800944a:	d101      	bne.n	8009450 <GUI__CompactPixelIndices+0x12e>
 800944c:	3318      	adds	r3, #24
 800944e:	e015      	b.n	800947c <GUI__CompactPixelIndices+0x15a>
 8009450:	699c      	ldr	r4, [r3, #24]
 8009452:	3907      	subs	r1, #7
 8009454:	ea4f 0444 	mov.w	r4, r4, lsl #1
 8009458:	f004 0402 	and.w	r4, r4, #2
 800945c:	ea42 0204 	orr.w	r2, r2, r4
 8009460:	bf17      	itett	ne
 8009462:	69dc      	ldrne	r4, [r3, #28]
 8009464:	331c      	addeq	r3, #28
 8009466:	f004 0401 	andne.w	r4, r4, #1
 800946a:	4322      	orrne	r2, r4
 800946c:	bf18      	it	ne
 800946e:	3320      	addne	r3, #32
 8009470:	f800 2b01 	strb.w	r2, [r0], #1
 8009474:	2900      	cmp	r1, #0
 8009476:	d1ae      	bne.n	80093d6 <GUI__CompactPixelIndices+0xb4>
 8009478:	e761      	b.n	800933e <GUI__CompactPixelIndices+0x1c>
 800947a:	3304      	adds	r3, #4
 800947c:	2100      	movs	r1, #0
 800947e:	e7f7      	b.n	8009470 <GUI__CompactPixelIndices+0x14e>
 8009480:	4401      	add	r1, r0
 8009482:	f850 2b04 	ldr.w	r2, [r0], #4
 8009486:	f803 2b01 	strb.w	r2, [r3], #1
 800948a:	4299      	cmp	r1, r3
 800948c:	d1f9      	bne.n	8009482 <GUI__CompactPixelIndices+0x160>
 800948e:	e756      	b.n	800933e <GUI__CompactPixelIndices+0x1c>

08009490 <GUI__ConvertColor2Index>:
 8009490:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009494:	9f08      	ldr	r7, [sp, #32]
 8009496:	4604      	mov	r4, r0
 8009498:	2f00      	cmp	r7, #0
 800949a:	bf08      	it	eq
 800949c:	4607      	moveq	r7, r0
 800949e:	2a08      	cmp	r2, #8
 80094a0:	460d      	mov	r5, r1
 80094a2:	f8d3 8000 	ldr.w	r8, [r3]
 80094a6:	dd05      	ble.n	80094b4 <GUI__ConvertColor2Index+0x24>
 80094a8:	2a10      	cmp	r2, #16
 80094aa:	f340 80ad 	ble.w	8009608 <GUI__ConvertColor2Index+0x178>
 80094ae:	2000      	movs	r0, #0
 80094b0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80094b4:	3a01      	subs	r2, #1
 80094b6:	2a07      	cmp	r2, #7
 80094b8:	f200 809d 	bhi.w	80095f6 <GUI__ConvertColor2Index+0x166>
 80094bc:	e8df f002 	tbb	[pc, r2]
 80094c0:	7f9b5b11 	.word	0x7f9b5b11
 80094c4:	899b9b9b 	.word	0x899b9b9b
 80094c8:	69e0      	ldr	r0, [r4, #28]
 80094ca:	47c0      	blx	r8
 80094cc:	f104 0920 	add.w	r9, r4, #32
 80094d0:	464c      	mov	r4, r9
 80094d2:	4330      	orrs	r0, r6
 80094d4:	b2c6      	uxtb	r6, r0
 80094d6:	3d08      	subs	r5, #8
 80094d8:	f807 6b01 	strb.w	r6, [r7], #1
 80094dc:	2d00      	cmp	r5, #0
 80094de:	f000 808a 	beq.w	80095f6 <GUI__ConvertColor2Index+0x166>
 80094e2:	6820      	ldr	r0, [r4, #0]
 80094e4:	47c0      	blx	r8
 80094e6:	2d01      	cmp	r5, #1
 80094e8:	ea4f 10c0 	mov.w	r0, r0, lsl #7
 80094ec:	b2c6      	uxtb	r6, r0
 80094ee:	f000 8085 	beq.w	80095fc <GUI__ConvertColor2Index+0x16c>
 80094f2:	6860      	ldr	r0, [r4, #4]
 80094f4:	47c0      	blx	r8
 80094f6:	2d02      	cmp	r5, #2
 80094f8:	ea46 1080 	orr.w	r0, r6, r0, lsl #6
 80094fc:	b2c6      	uxtb	r6, r0
 80094fe:	d101      	bne.n	8009504 <GUI__ConvertColor2Index+0x74>
 8009500:	3408      	adds	r4, #8
 8009502:	e07c      	b.n	80095fe <GUI__ConvertColor2Index+0x16e>
 8009504:	68a0      	ldr	r0, [r4, #8]
 8009506:	47c0      	blx	r8
 8009508:	2d03      	cmp	r5, #3
 800950a:	ea46 1040 	orr.w	r0, r6, r0, lsl #5
 800950e:	b2c6      	uxtb	r6, r0
 8009510:	d101      	bne.n	8009516 <GUI__ConvertColor2Index+0x86>
 8009512:	340c      	adds	r4, #12
 8009514:	e073      	b.n	80095fe <GUI__ConvertColor2Index+0x16e>
 8009516:	68e0      	ldr	r0, [r4, #12]
 8009518:	47c0      	blx	r8
 800951a:	2d04      	cmp	r5, #4
 800951c:	ea46 1000 	orr.w	r0, r6, r0, lsl #4
 8009520:	b2c6      	uxtb	r6, r0
 8009522:	d101      	bne.n	8009528 <GUI__ConvertColor2Index+0x98>
 8009524:	3410      	adds	r4, #16
 8009526:	e06a      	b.n	80095fe <GUI__ConvertColor2Index+0x16e>
 8009528:	6920      	ldr	r0, [r4, #16]
 800952a:	47c0      	blx	r8
 800952c:	2d05      	cmp	r5, #5
 800952e:	ea46 00c0 	orr.w	r0, r6, r0, lsl #3
 8009532:	b2c6      	uxtb	r6, r0
 8009534:	d101      	bne.n	800953a <GUI__ConvertColor2Index+0xaa>
 8009536:	3414      	adds	r4, #20
 8009538:	e061      	b.n	80095fe <GUI__ConvertColor2Index+0x16e>
 800953a:	6960      	ldr	r0, [r4, #20]
 800953c:	47c0      	blx	r8
 800953e:	2d06      	cmp	r5, #6
 8009540:	ea46 0080 	orr.w	r0, r6, r0, lsl #2
 8009544:	b2c6      	uxtb	r6, r0
 8009546:	d101      	bne.n	800954c <GUI__ConvertColor2Index+0xbc>
 8009548:	3418      	adds	r4, #24
 800954a:	e058      	b.n	80095fe <GUI__ConvertColor2Index+0x16e>
 800954c:	69a0      	ldr	r0, [r4, #24]
 800954e:	47c0      	blx	r8
 8009550:	2d07      	cmp	r5, #7
 8009552:	ea46 0040 	orr.w	r0, r6, r0, lsl #1
 8009556:	b2c6      	uxtb	r6, r0
 8009558:	d1b6      	bne.n	80094c8 <GUI__ConvertColor2Index+0x38>
 800955a:	341c      	adds	r4, #28
 800955c:	e04f      	b.n	80095fe <GUI__ConvertColor2Index+0x16e>
 800955e:	68e0      	ldr	r0, [r4, #12]
 8009560:	47c0      	blx	r8
 8009562:	f104 0910 	add.w	r9, r4, #16
 8009566:	464c      	mov	r4, r9
 8009568:	4330      	orrs	r0, r6
 800956a:	b2c6      	uxtb	r6, r0
 800956c:	3d04      	subs	r5, #4
 800956e:	f807 6b01 	strb.w	r6, [r7], #1
 8009572:	2d00      	cmp	r5, #0
 8009574:	d03f      	beq.n	80095f6 <GUI__ConvertColor2Index+0x166>
 8009576:	6820      	ldr	r0, [r4, #0]
 8009578:	47c0      	blx	r8
 800957a:	2d01      	cmp	r5, #1
 800957c:	ea4f 1080 	mov.w	r0, r0, lsl #6
 8009580:	b2c6      	uxtb	r6, r0
 8009582:	d03e      	beq.n	8009602 <GUI__ConvertColor2Index+0x172>
 8009584:	6860      	ldr	r0, [r4, #4]
 8009586:	47c0      	blx	r8
 8009588:	2d02      	cmp	r5, #2
 800958a:	ea46 1000 	orr.w	r0, r6, r0, lsl #4
 800958e:	b2c6      	uxtb	r6, r0
 8009590:	d101      	bne.n	8009596 <GUI__ConvertColor2Index+0x106>
 8009592:	3408      	adds	r4, #8
 8009594:	e036      	b.n	8009604 <GUI__ConvertColor2Index+0x174>
 8009596:	68a0      	ldr	r0, [r4, #8]
 8009598:	47c0      	blx	r8
 800959a:	2d03      	cmp	r5, #3
 800959c:	ea46 0080 	orr.w	r0, r6, r0, lsl #2
 80095a0:	b2c6      	uxtb	r6, r0
 80095a2:	d1dc      	bne.n	800955e <GUI__ConvertColor2Index+0xce>
 80095a4:	340c      	adds	r4, #12
 80095a6:	e02d      	b.n	8009604 <GUI__ConvertColor2Index+0x174>
 80095a8:	6860      	ldr	r0, [r4, #4]
 80095aa:	47c0      	blx	r8
 80095ac:	f104 0908 	add.w	r9, r4, #8
 80095b0:	464c      	mov	r4, r9
 80095b2:	4330      	orrs	r0, r6
 80095b4:	b2c6      	uxtb	r6, r0
 80095b6:	3d02      	subs	r5, #2
 80095b8:	f807 6b01 	strb.w	r6, [r7], #1
 80095bc:	b1dd      	cbz	r5, 80095f6 <GUI__ConvertColor2Index+0x166>
 80095be:	6820      	ldr	r0, [r4, #0]
 80095c0:	47c0      	blx	r8
 80095c2:	2d01      	cmp	r5, #1
 80095c4:	ea4f 1000 	mov.w	r0, r0, lsl #4
 80095c8:	b2c6      	uxtb	r6, r0
 80095ca:	d1ed      	bne.n	80095a8 <GUI__ConvertColor2Index+0x118>
 80095cc:	3404      	adds	r4, #4
 80095ce:	2500      	movs	r5, #0
 80095d0:	e7f2      	b.n	80095b8 <GUI__ConvertColor2Index+0x128>
 80095d2:	691e      	ldr	r6, [r3, #16]
 80095d4:	b12e      	cbz	r6, 80095e2 <GUI__ConvertColor2Index+0x152>
 80095d6:	462a      	mov	r2, r5
 80095d8:	4639      	mov	r1, r7
 80095da:	4620      	mov	r0, r4
 80095dc:	2301      	movs	r3, #1
 80095de:	47b0      	blx	r6
 80095e0:	e009      	b.n	80095f6 <GUI__ConvertColor2Index+0x166>
 80095e2:	1e7e      	subs	r6, r7, #1
 80095e4:	f854 0b04 	ldr.w	r0, [r4], #4
 80095e8:	47c0      	blx	r8
 80095ea:	f806 0f01 	strb.w	r0, [r6, #1]!
 80095ee:	43f3      	mvns	r3, r6
 80095f0:	442b      	add	r3, r5
 80095f2:	42df      	cmn	r7, r3
 80095f4:	d1f6      	bne.n	80095e4 <GUI__ConvertColor2Index+0x154>
 80095f6:	2001      	movs	r0, #1
 80095f8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80095fc:	3404      	adds	r4, #4
 80095fe:	2500      	movs	r5, #0
 8009600:	e76a      	b.n	80094d8 <GUI__ConvertColor2Index+0x48>
 8009602:	3404      	adds	r4, #4
 8009604:	2500      	movs	r5, #0
 8009606:	e7b2      	b.n	800956e <GUI__ConvertColor2Index+0xde>
 8009608:	691e      	ldr	r6, [r3, #16]
 800960a:	b11e      	cbz	r6, 8009614 <GUI__ConvertColor2Index+0x184>
 800960c:	2302      	movs	r3, #2
 800960e:	462a      	mov	r2, r5
 8009610:	4639      	mov	r1, r7
 8009612:	e7e4      	b.n	80095de <GUI__ConvertColor2Index+0x14e>
 8009614:	3f02      	subs	r7, #2
 8009616:	f854 0b04 	ldr.w	r0, [r4], #4
 800961a:	47c0      	blx	r8
 800961c:	3d01      	subs	r5, #1
 800961e:	f827 0f02 	strh.w	r0, [r7, #2]!
 8009622:	d1f8      	bne.n	8009616 <GUI__ConvertColor2Index+0x186>
 8009624:	e7e7      	b.n	80095f6 <GUI__ConvertColor2Index+0x166>

08009626 <GUI__CompactPixelIndicesEx>:
 8009626:	b513      	push	{r0, r1, r4, lr}
 8009628:	2400      	movs	r4, #0
 800962a:	9400      	str	r4, [sp, #0]
 800962c:	f7ff ff30 	bl	8009490 <GUI__ConvertColor2Index>
 8009630:	b002      	add	sp, #8
 8009632:	bd10      	pop	{r4, pc}

08009634 <GUI__ExpandPixelIndicesEx>:
 8009634:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009638:	1e0c      	subs	r4, r1, #0
 800963a:	4605      	mov	r5, r0
 800963c:	f340 80b6 	ble.w	80097ac <GUI__ExpandPixelIndicesEx+0x178>
 8009640:	2a08      	cmp	r2, #8
 8009642:	685e      	ldr	r6, [r3, #4]
 8009644:	dd04      	ble.n	8009650 <GUI__ExpandPixelIndicesEx+0x1c>
 8009646:	2a10      	cmp	r2, #16
 8009648:	f340 809a 	ble.w	8009780 <GUI__ExpandPixelIndicesEx+0x14c>
 800964c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009650:	3a01      	subs	r2, #1
 8009652:	2a07      	cmp	r2, #7
 8009654:	f200 80aa 	bhi.w	80097ac <GUI__ExpandPixelIndicesEx+0x178>
 8009658:	e8df f002 	tbb	[pc, r2]
 800965c:	59a82d04 	.word	0x59a82d04
 8009660:	85a8a8a8 	.word	0x85a8a8a8
 8009664:	1e67      	subs	r7, r4, #1
 8009666:	10fb      	asrs	r3, r7, #3
 8009668:	f104 4880 	add.w	r8, r4, #1073741824	@ 0x40000000
 800966c:	f108 38ff 	add.w	r8, r8, #4294967295
 8009670:	f103 39ff 	add.w	r9, r3, #4294967295
 8009674:	eb05 0888 	add.w	r8, r5, r8, lsl #2
 8009678:	f007 0707 	and.w	r7, r7, #7
 800967c:	44a9      	add	r9, r5
 800967e:	f815 a003 	ldrb.w	sl, [r5, r3]
 8009682:	2580      	movs	r5, #128	@ 0x80
 8009684:	413d      	asrs	r5, r7
 8009686:	b2ed      	uxtb	r5, r5
 8009688:	f1c7 0307 	rsb	r3, r7, #7
 800968c:	ea05 000a 	and.w	r0, r5, sl
 8009690:	4118      	asrs	r0, r3
 8009692:	47b0      	blx	r6
 8009694:	f848 0904 	str.w	r0, [r8], #-4
 8009698:	b937      	cbnz	r7, 80096a8 <GUI__ExpandPixelIndicesEx+0x74>
 800969a:	f899 a000 	ldrb.w	sl, [r9]
 800969e:	2501      	movs	r5, #1
 80096a0:	f109 39ff 	add.w	r9, r9, #4294967295
 80096a4:	2707      	movs	r7, #7
 80096a6:	e002      	b.n	80096ae <GUI__ExpandPixelIndicesEx+0x7a>
 80096a8:	006d      	lsls	r5, r5, #1
 80096aa:	3f01      	subs	r7, #1
 80096ac:	b2ed      	uxtb	r5, r5
 80096ae:	3c01      	subs	r4, #1
 80096b0:	d1ea      	bne.n	8009688 <GUI__ExpandPixelIndicesEx+0x54>
 80096b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80096b6:	1e67      	subs	r7, r4, #1
 80096b8:	10bb      	asrs	r3, r7, #2
 80096ba:	f104 4880 	add.w	r8, r4, #1073741824	@ 0x40000000
 80096be:	f103 39ff 	add.w	r9, r3, #4294967295
 80096c2:	f108 38ff 	add.w	r8, r8, #4294967295
 80096c6:	f007 0703 	and.w	r7, r7, #3
 80096ca:	f815 a003 	ldrb.w	sl, [r5, r3]
 80096ce:	eb05 0888 	add.w	r8, r5, r8, lsl #2
 80096d2:	44a9      	add	r9, r5
 80096d4:	23c0      	movs	r3, #192	@ 0xc0
 80096d6:	007d      	lsls	r5, r7, #1
 80096d8:	fa43 f505 	asr.w	r5, r3, r5
 80096dc:	b2ed      	uxtb	r5, r5
 80096de:	007b      	lsls	r3, r7, #1
 80096e0:	f1c3 0306 	rsb	r3, r3, #6
 80096e4:	ea05 000a 	and.w	r0, r5, sl
 80096e8:	4118      	asrs	r0, r3
 80096ea:	47b0      	blx	r6
 80096ec:	f848 0904 	str.w	r0, [r8], #-4
 80096f0:	b937      	cbnz	r7, 8009700 <GUI__ExpandPixelIndicesEx+0xcc>
 80096f2:	2503      	movs	r5, #3
 80096f4:	f899 a000 	ldrb.w	sl, [r9]
 80096f8:	462f      	mov	r7, r5
 80096fa:	f109 39ff 	add.w	r9, r9, #4294967295
 80096fe:	e002      	b.n	8009706 <GUI__ExpandPixelIndicesEx+0xd2>
 8009700:	00ad      	lsls	r5, r5, #2
 8009702:	3f01      	subs	r7, #1
 8009704:	b2ed      	uxtb	r5, r5
 8009706:	3c01      	subs	r4, #1
 8009708:	d1e9      	bne.n	80096de <GUI__ExpandPixelIndicesEx+0xaa>
 800970a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800970e:	1e67      	subs	r7, r4, #1
 8009710:	107b      	asrs	r3, r7, #1
 8009712:	f104 4880 	add.w	r8, r4, #1073741824	@ 0x40000000
 8009716:	f103 39ff 	add.w	r9, r3, #4294967295
 800971a:	f108 38ff 	add.w	r8, r8, #4294967295
 800971e:	f007 0701 	and.w	r7, r7, #1
 8009722:	f815 a003 	ldrb.w	sl, [r5, r3]
 8009726:	eb05 0888 	add.w	r8, r5, r8, lsl #2
 800972a:	44a9      	add	r9, r5
 800972c:	23f0      	movs	r3, #240	@ 0xf0
 800972e:	00bd      	lsls	r5, r7, #2
 8009730:	fa43 f505 	asr.w	r5, r3, r5
 8009734:	b2ed      	uxtb	r5, r5
 8009736:	00bb      	lsls	r3, r7, #2
 8009738:	f1c3 0304 	rsb	r3, r3, #4
 800973c:	ea05 000a 	and.w	r0, r5, sl
 8009740:	4118      	asrs	r0, r3
 8009742:	47b0      	blx	r6
 8009744:	f848 0904 	str.w	r0, [r8], #-4
 8009748:	b937      	cbnz	r7, 8009758 <GUI__ExpandPixelIndicesEx+0x124>
 800974a:	f899 a000 	ldrb.w	sl, [r9]
 800974e:	250f      	movs	r5, #15
 8009750:	f109 39ff 	add.w	r9, r9, #4294967295
 8009754:	2701      	movs	r7, #1
 8009756:	e002      	b.n	800975e <GUI__ExpandPixelIndicesEx+0x12a>
 8009758:	012d      	lsls	r5, r5, #4
 800975a:	b2ed      	uxtb	r5, r5
 800975c:	2700      	movs	r7, #0
 800975e:	3c01      	subs	r4, #1
 8009760:	d1e9      	bne.n	8009736 <GUI__ExpandPixelIndicesEx+0x102>
 8009762:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009766:	eb05 0784 	add.w	r7, r5, r4, lsl #2
 800976a:	4425      	add	r5, r4
 800976c:	1b64      	subs	r4, r4, r5
 800976e:	f815 0d01 	ldrb.w	r0, [r5, #-1]!
 8009772:	47b0      	blx	r6
 8009774:	42e5      	cmn	r5, r4
 8009776:	f847 0d04 	str.w	r0, [r7, #-4]!
 800977a:	d1f8      	bne.n	800976e <GUI__ExpandPixelIndicesEx+0x13a>
 800977c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009780:	695f      	ldr	r7, [r3, #20]
 8009782:	b137      	cbz	r7, 8009792 <GUI__ExpandPixelIndicesEx+0x15e>
 8009784:	4622      	mov	r2, r4
 8009786:	4629      	mov	r1, r5
 8009788:	46bc      	mov	ip, r7
 800978a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800978e:	2302      	movs	r3, #2
 8009790:	4760      	bx	ip
 8009792:	eb05 0744 	add.w	r7, r5, r4, lsl #1
 8009796:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 800979a:	f837 0d02 	ldrh.w	r0, [r7, #-2]!
 800979e:	47b0      	blx	r6
 80097a0:	3c01      	subs	r4, #1
 80097a2:	f845 0d04 	str.w	r0, [r5, #-4]!
 80097a6:	d1f8      	bne.n	800979a <GUI__ExpandPixelIndicesEx+0x166>
 80097a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80097ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080097b0 <GUI__ManageCacheEx>:
 80097b0:	2801      	cmp	r0, #1
 80097b2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80097b4:	4606      	mov	r6, r0
 80097b6:	460c      	mov	r4, r1
 80097b8:	dc62      	bgt.n	8009880 <GUI__ManageCacheEx+0xd0>
 80097ba:	4d33      	ldr	r5, [pc, #204]	@ (8009888 <GUI__ManageCacheEx+0xd8>)
 80097bc:	686b      	ldr	r3, [r5, #4]
 80097be:	b103      	cbz	r3, 80097c2 <GUI__ManageCacheEx+0x12>
 80097c0:	4798      	blx	r3
 80097c2:	2c01      	cmp	r4, #1
 80097c4:	d004      	beq.n	80097d0 <GUI__ManageCacheEx+0x20>
 80097c6:	2c02      	cmp	r4, #2
 80097c8:	d020      	beq.n	800980c <GUI__ManageCacheEx+0x5c>
 80097ca:	2c00      	cmp	r4, #0
 80097cc:	d158      	bne.n	8009880 <GUI__ManageCacheEx+0xd0>
 80097ce:	e033      	b.n	8009838 <GUI__ManageCacheEx+0x88>
 80097d0:	eb05 0586 	add.w	r5, r5, r6, lsl #2
 80097d4:	68af      	ldr	r7, [r5, #8]
 80097d6:	b9af      	cbnz	r7, 8009804 <GUI__ManageCacheEx+0x54>
 80097d8:	4630      	mov	r0, r6
 80097da:	f7f9 f9bb 	bl	8002b54 <GUI_DEVICE__GetpDriver>
 80097de:	9001      	str	r0, [sp, #4]
 80097e0:	2800      	cmp	r0, #0
 80097e2:	d04d      	beq.n	8009880 <GUI__ManageCacheEx+0xd0>
 80097e4:	68c3      	ldr	r3, [r0, #12]
 80097e6:	210d      	movs	r1, #13
 80097e8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80097ea:	a801      	add	r0, sp, #4
 80097ec:	4798      	blx	r3
 80097ee:	4603      	mov	r3, r0
 80097f0:	2800      	cmp	r0, #0
 80097f2:	d045      	beq.n	8009880 <GUI__ManageCacheEx+0xd0>
 80097f4:	4621      	mov	r1, r4
 80097f6:	9801      	ldr	r0, [sp, #4]
 80097f8:	4798      	blx	r3
 80097fa:	68ab      	ldr	r3, [r5, #8]
 80097fc:	4638      	mov	r0, r7
 80097fe:	3301      	adds	r3, #1
 8009800:	60ab      	str	r3, [r5, #8]
 8009802:	e03e      	b.n	8009882 <GUI__ManageCacheEx+0xd2>
 8009804:	1c78      	adds	r0, r7, #1
 8009806:	60a8      	str	r0, [r5, #8]
 8009808:	4620      	mov	r0, r4
 800980a:	e03a      	b.n	8009882 <GUI__ManageCacheEx+0xd2>
 800980c:	4630      	mov	r0, r6
 800980e:	f7f9 f9a1 	bl	8002b54 <GUI_DEVICE__GetpDriver>
 8009812:	9001      	str	r0, [sp, #4]
 8009814:	2800      	cmp	r0, #0
 8009816:	d033      	beq.n	8009880 <GUI__ManageCacheEx+0xd0>
 8009818:	68c3      	ldr	r3, [r0, #12]
 800981a:	210d      	movs	r1, #13
 800981c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800981e:	a801      	add	r0, sp, #4
 8009820:	4798      	blx	r3
 8009822:	4604      	mov	r4, r0
 8009824:	2800      	cmp	r0, #0
 8009826:	d02b      	beq.n	8009880 <GUI__ManageCacheEx+0xd0>
 8009828:	682b      	ldr	r3, [r5, #0]
 800982a:	b103      	cbz	r3, 800982e <GUI__ManageCacheEx+0x7e>
 800982c:	4798      	blx	r3
 800982e:	2102      	movs	r1, #2
 8009830:	9801      	ldr	r0, [sp, #4]
 8009832:	47a0      	blx	r4
 8009834:	2000      	movs	r0, #0
 8009836:	e024      	b.n	8009882 <GUI__ManageCacheEx+0xd2>
 8009838:	00b4      	lsls	r4, r6, #2
 800983a:	192b      	adds	r3, r5, r4
 800983c:	689b      	ldr	r3, [r3, #8]
 800983e:	2b01      	cmp	r3, #1
 8009840:	d001      	beq.n	8009846 <GUI__ManageCacheEx+0x96>
 8009842:	2001      	movs	r0, #1
 8009844:	e015      	b.n	8009872 <GUI__ManageCacheEx+0xc2>
 8009846:	4630      	mov	r0, r6
 8009848:	f7f9 f984 	bl	8002b54 <GUI_DEVICE__GetpDriver>
 800984c:	9001      	str	r0, [sp, #4]
 800984e:	2800      	cmp	r0, #0
 8009850:	d0f7      	beq.n	8009842 <GUI__ManageCacheEx+0x92>
 8009852:	68c3      	ldr	r3, [r0, #12]
 8009854:	210d      	movs	r1, #13
 8009856:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009858:	a801      	add	r0, sp, #4
 800985a:	4798      	blx	r3
 800985c:	4606      	mov	r6, r0
 800985e:	2800      	cmp	r0, #0
 8009860:	d0ef      	beq.n	8009842 <GUI__ManageCacheEx+0x92>
 8009862:	4b09      	ldr	r3, [pc, #36]	@ (8009888 <GUI__ManageCacheEx+0xd8>)
 8009864:	681b      	ldr	r3, [r3, #0]
 8009866:	b103      	cbz	r3, 800986a <GUI__ManageCacheEx+0xba>
 8009868:	4798      	blx	r3
 800986a:	2100      	movs	r1, #0
 800986c:	9801      	ldr	r0, [sp, #4]
 800986e:	47b0      	blx	r6
 8009870:	2000      	movs	r0, #0
 8009872:	4425      	add	r5, r4
 8009874:	68ab      	ldr	r3, [r5, #8]
 8009876:	2b00      	cmp	r3, #0
 8009878:	bf18      	it	ne
 800987a:	3b01      	subne	r3, #1
 800987c:	60ab      	str	r3, [r5, #8]
 800987e:	e000      	b.n	8009882 <GUI__ManageCacheEx+0xd2>
 8009880:	2001      	movs	r0, #1
 8009882:	b003      	add	sp, #12
 8009884:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009886:	bf00      	nop
 8009888:	200002a4 	.word	0x200002a4

0800988c <GUI__ManageCache>:
 800988c:	4b02      	ldr	r3, [pc, #8]	@ (8009898 <GUI__ManageCache+0xc>)
 800988e:	4601      	mov	r1, r0
 8009890:	681b      	ldr	r3, [r3, #0]
 8009892:	7c58      	ldrb	r0, [r3, #17]
 8009894:	f7ff bf8c 	b.w	80097b0 <GUI__ManageCacheEx>
 8009898:	20000014 	.word	0x20000014

0800989c <LCD_AA_MixColors16>:
 800989c:	0e0b      	lsrs	r3, r1, #24
 800989e:	2bff      	cmp	r3, #255	@ 0xff
 80098a0:	b510      	push	{r4, lr}
 80098a2:	4c0e      	ldr	r4, [pc, #56]	@ (80098dc <LCD_AA_MixColors16+0x40>)
 80098a4:	d110      	bne.n	80098c8 <LCD_AA_MixColors16+0x2c>
 80098a6:	0e03      	lsrs	r3, r0, #24
 80098a8:	d108      	bne.n	80098bc <LCD_AA_MixColors16+0x20>
 80098aa:	f06f 0310 	mvn.w	r3, #16
 80098ae:	435a      	muls	r2, r3
 80098b0:	6963      	ldr	r3, [r4, #20]
 80098b2:	32ff      	adds	r2, #255	@ 0xff
 80098b4:	ea40 6002 	orr.w	r0, r0, r2, lsl #24
 80098b8:	4018      	ands	r0, r3
 80098ba:	bd10      	pop	{r4, pc}
 80098bc:	2bff      	cmp	r3, #255	@ 0xff
 80098be:	d103      	bne.n	80098c8 <LCD_AA_MixColors16+0x2c>
 80098c0:	6963      	ldr	r3, [r4, #20]
 80098c2:	ea01 0003 	and.w	r0, r1, r3
 80098c6:	bd10      	pop	{r4, pc}
 80098c8:	4b05      	ldr	r3, [pc, #20]	@ (80098e0 <LCD_AA_MixColors16+0x44>)
 80098ca:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80098ce:	681b      	ldr	r3, [r3, #0]
 80098d0:	b2d2      	uxtb	r2, r2
 80098d2:	4798      	blx	r3
 80098d4:	6961      	ldr	r1, [r4, #20]
 80098d6:	4008      	ands	r0, r1
 80098d8:	bd10      	pop	{r4, pc}
 80098da:	bf00      	nop
 80098dc:	2000009c 	.word	0x2000009c
 80098e0:	20000094 	.word	0x20000094

080098e4 <LCD_AA_SetAndMask>:
 80098e4:	4b02      	ldr	r3, [pc, #8]	@ (80098f0 <LCD_AA_SetAndMask+0xc>)
 80098e6:	695a      	ldr	r2, [r3, #20]
 80098e8:	6158      	str	r0, [r3, #20]
 80098ea:	4610      	mov	r0, r2
 80098ec:	4770      	bx	lr
 80098ee:	bf00      	nop
 80098f0:	2000009c 	.word	0x2000009c

080098f4 <LCD_ReadRectEx>:
 80098f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80098f8:	b087      	sub	sp, #28
 80098fa:	9303      	str	r3, [sp, #12]
 80098fc:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80098fe:	4690      	mov	r8, r2
 8009900:	68da      	ldr	r2, [r3, #12]
 8009902:	4607      	mov	r7, r0
 8009904:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 8009906:	460e      	mov	r6, r1
 8009908:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 800990a:	f8d2 9014 	ldr.w	r9, [r2, #20]
 800990e:	b96b      	cbnz	r3, 800992c <LCD_ReadRectEx+0x38>
 8009910:	4b60      	ldr	r3, [pc, #384]	@ (8009a94 <LCD_ReadRectEx+0x1a0>)
 8009912:	681b      	ldr	r3, [r3, #0]
 8009914:	7c58      	ldrb	r0, [r3, #17]
 8009916:	f7f9 ffcf 	bl	80038b8 <GUI_GetBitsPerPixelEx>
 800991a:	2808      	cmp	r0, #8
 800991c:	dd15      	ble.n	800994a <LCD_ReadRectEx+0x56>
 800991e:	2811      	cmp	r0, #17
 8009920:	bfb4      	ite	lt
 8009922:	f04f 0a02 	movlt.w	sl, #2
 8009926:	f04f 0a04 	movge.w	sl, #4
 800992a:	e010      	b.n	800994e <LCD_ReadRectEx+0x5a>
 800992c:	2101      	movs	r1, #1
 800992e:	a811      	add	r0, sp, #68	@ 0x44
 8009930:	4798      	blx	r3
 8009932:	4605      	mov	r5, r0
 8009934:	2800      	cmp	r0, #0
 8009936:	d0eb      	beq.n	8009910 <LCD_ReadRectEx+0x1c>
 8009938:	9b03      	ldr	r3, [sp, #12]
 800993a:	9401      	str	r4, [sp, #4]
 800993c:	9300      	str	r3, [sp, #0]
 800993e:	4632      	mov	r2, r6
 8009940:	4643      	mov	r3, r8
 8009942:	4639      	mov	r1, r7
 8009944:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8009946:	47a8      	blx	r5
 8009948:	e0a0      	b.n	8009a8c <LCD_ReadRectEx+0x198>
 800994a:	f04f 0a01 	mov.w	sl, #1
 800994e:	1e43      	subs	r3, r0, #1
 8009950:	2500      	movs	r5, #0
 8009952:	9304      	str	r3, [sp, #16]
 8009954:	9b03      	ldr	r3, [sp, #12]
 8009956:	429e      	cmp	r6, r3
 8009958:	f300 8098 	bgt.w	8009a8c <LCD_ReadRectEx+0x198>
 800995c:	f1ba 0f02 	cmp.w	sl, #2
 8009960:	d009      	beq.n	8009976 <LCD_ReadRectEx+0x82>
 8009962:	f1ba 0f04 	cmp.w	sl, #4
 8009966:	d004      	beq.n	8009972 <LCD_ReadRectEx+0x7e>
 8009968:	f1ba 0f01 	cmp.w	sl, #1
 800996c:	f040 808c 	bne.w	8009a88 <LCD_ReadRectEx+0x194>
 8009970:	e003      	b.n	800997a <LCD_ReadRectEx+0x86>
 8009972:	46bb      	mov	fp, r7
 8009974:	e07d      	b.n	8009a72 <LCD_ReadRectEx+0x17e>
 8009976:	46bb      	mov	fp, r7
 8009978:	e070      	b.n	8009a5c <LCD_ReadRectEx+0x168>
 800997a:	9b04      	ldr	r3, [sp, #16]
 800997c:	2b07      	cmp	r3, #7
 800997e:	f200 8083 	bhi.w	8009a88 <LCD_ReadRectEx+0x194>
 8009982:	e8df f003 	tbb	[pc, r3]
 8009986:	0a0e      	.short	0x0a0e
 8009988:	04040707 	.word	0x04040707
 800998c:	0404      	.short	0x0404
 800998e:	ebc4 0b07 	rsb	fp, r4, r7
 8009992:	e059      	b.n	8009a48 <LCD_ReadRectEx+0x154>
 8009994:	46bb      	mov	fp, r7
 8009996:	230f      	movs	r3, #15
 8009998:	e03b      	b.n	8009a12 <LCD_ReadRectEx+0x11e>
 800999a:	46bb      	mov	fp, r7
 800999c:	f64f 733f 	movw	r3, #65343	@ 0xff3f
 80099a0:	e019      	b.n	80099d6 <LCD_ReadRectEx+0xe2>
 80099a2:	46bb      	mov	fp, r7
 80099a4:	45c3      	cmp	fp, r8
 80099a6:	dc6f      	bgt.n	8009a88 <LCD_ReadRectEx+0x194>
 80099a8:	4632      	mov	r2, r6
 80099aa:	4659      	mov	r1, fp
 80099ac:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80099ae:	47c8      	blx	r9
 80099b0:	f64f 737f 	movw	r3, #65407	@ 0xff7f
 80099b4:	7822      	ldrb	r2, [r4, #0]
 80099b6:	412b      	asrs	r3, r5
 80099b8:	401a      	ands	r2, r3
 80099ba:	f1c5 0307 	rsb	r3, r5, #7
 80099be:	4098      	lsls	r0, r3
 80099c0:	3501      	adds	r5, #1
 80099c2:	4310      	orrs	r0, r2
 80099c4:	f025 0307 	bic.w	r3, r5, #7
 80099c8:	7020      	strb	r0, [r4, #0]
 80099ca:	f10b 0b01 	add.w	fp, fp, #1
 80099ce:	eb04 04e5 	add.w	r4, r4, r5, asr #3
 80099d2:	411d      	asrs	r5, r3
 80099d4:	e7e6      	b.n	80099a4 <LCD_ReadRectEx+0xb0>
 80099d6:	45c3      	cmp	fp, r8
 80099d8:	dc56      	bgt.n	8009a88 <LCD_ReadRectEx+0x194>
 80099da:	4659      	mov	r1, fp
 80099dc:	4632      	mov	r2, r6
 80099de:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80099e0:	9305      	str	r3, [sp, #20]
 80099e2:	47c8      	blx	r9
 80099e4:	9b05      	ldr	r3, [sp, #20]
 80099e6:	006a      	lsls	r2, r5, #1
 80099e8:	f894 e000 	ldrb.w	lr, [r4]
 80099ec:	fa43 f102 	asr.w	r1, r3, r2
 80099f0:	f1c2 0206 	rsb	r2, r2, #6
 80099f4:	ea0e 0101 	and.w	r1, lr, r1
 80099f8:	4090      	lsls	r0, r2
 80099fa:	3501      	adds	r5, #1
 80099fc:	ea41 0200 	orr.w	r2, r1, r0
 8009a00:	7022      	strb	r2, [r4, #0]
 8009a02:	f025 0203 	bic.w	r2, r5, #3
 8009a06:	eb04 04a5 	add.w	r4, r4, r5, asr #2
 8009a0a:	f10b 0b01 	add.w	fp, fp, #1
 8009a0e:	4115      	asrs	r5, r2
 8009a10:	e7e1      	b.n	80099d6 <LCD_ReadRectEx+0xe2>
 8009a12:	45c3      	cmp	fp, r8
 8009a14:	dc38      	bgt.n	8009a88 <LCD_ReadRectEx+0x194>
 8009a16:	4659      	mov	r1, fp
 8009a18:	4632      	mov	r2, r6
 8009a1a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8009a1c:	9305      	str	r3, [sp, #20]
 8009a1e:	47c8      	blx	r9
 8009a20:	9b05      	ldr	r3, [sp, #20]
 8009a22:	00aa      	lsls	r2, r5, #2
 8009a24:	f894 e000 	ldrb.w	lr, [r4]
 8009a28:	fa03 f102 	lsl.w	r1, r3, r2
 8009a2c:	f1c2 0204 	rsb	r2, r2, #4
 8009a30:	ea0e 0101 	and.w	r1, lr, r1
 8009a34:	4090      	lsls	r0, r2
 8009a36:	ea41 0200 	orr.w	r2, r1, r0
 8009a3a:	7022      	strb	r2, [r4, #0]
 8009a3c:	f10b 0b01 	add.w	fp, fp, #1
 8009a40:	442c      	add	r4, r5
 8009a42:	f085 0501 	eor.w	r5, r5, #1
 8009a46:	e7e4      	b.n	8009a12 <LCD_ReadRectEx+0x11e>
 8009a48:	eb04 010b 	add.w	r1, r4, fp
 8009a4c:	4588      	cmp	r8, r1
 8009a4e:	db1b      	blt.n	8009a88 <LCD_ReadRectEx+0x194>
 8009a50:	4632      	mov	r2, r6
 8009a52:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8009a54:	47c8      	blx	r9
 8009a56:	f804 0b01 	strb.w	r0, [r4], #1
 8009a5a:	e7f5      	b.n	8009a48 <LCD_ReadRectEx+0x154>
 8009a5c:	45c3      	cmp	fp, r8
 8009a5e:	dc13      	bgt.n	8009a88 <LCD_ReadRectEx+0x194>
 8009a60:	4659      	mov	r1, fp
 8009a62:	4632      	mov	r2, r6
 8009a64:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8009a66:	47c8      	blx	r9
 8009a68:	f10b 0b01 	add.w	fp, fp, #1
 8009a6c:	f824 0b02 	strh.w	r0, [r4], #2
 8009a70:	e7f4      	b.n	8009a5c <LCD_ReadRectEx+0x168>
 8009a72:	45c3      	cmp	fp, r8
 8009a74:	dc08      	bgt.n	8009a88 <LCD_ReadRectEx+0x194>
 8009a76:	4659      	mov	r1, fp
 8009a78:	4632      	mov	r2, r6
 8009a7a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8009a7c:	47c8      	blx	r9
 8009a7e:	f10b 0b01 	add.w	fp, fp, #1
 8009a82:	f844 0b04 	str.w	r0, [r4], #4
 8009a86:	e7f4      	b.n	8009a72 <LCD_ReadRectEx+0x17e>
 8009a88:	3601      	adds	r6, #1
 8009a8a:	e763      	b.n	8009954 <LCD_ReadRectEx+0x60>
 8009a8c:	b007      	add	sp, #28
 8009a8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009a92:	bf00      	nop
 8009a94:	20000014 	.word	0x20000014

08009a98 <GUI_ReadRectEx>:
 8009a98:	b4f0      	push	{r4, r5, r6, r7}
 8009a9a:	4d16      	ldr	r5, [pc, #88]	@ (8009af4 <GUI_ReadRectEx+0x5c>)
 8009a9c:	9e04      	ldr	r6, [sp, #16]
 8009a9e:	682d      	ldr	r5, [r5, #0]
 8009aa0:	9c05      	ldr	r4, [sp, #20]
 8009aa2:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
 8009aa6:	42b8      	cmp	r0, r7
 8009aa8:	bfb8      	it	lt
 8009aaa:	4638      	movlt	r0, r7
 8009aac:	f9b5 700c 	ldrsh.w	r7, [r5, #12]
 8009ab0:	42ba      	cmp	r2, r7
 8009ab2:	bfa8      	it	ge
 8009ab4:	463a      	movge	r2, r7
 8009ab6:	4290      	cmp	r0, r2
 8009ab8:	dc1a      	bgt.n	8009af0 <GUI_ReadRectEx+0x58>
 8009aba:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 8009abe:	f9b5 500e 	ldrsh.w	r5, [r5, #14]
 8009ac2:	42b9      	cmp	r1, r7
 8009ac4:	bfb8      	it	lt
 8009ac6:	4639      	movlt	r1, r7
 8009ac8:	42ab      	cmp	r3, r5
 8009aca:	bfa8      	it	ge
 8009acc:	462b      	movge	r3, r5
 8009ace:	428b      	cmp	r3, r1
 8009ad0:	db0e      	blt.n	8009af0 <GUI_ReadRectEx+0x58>
 8009ad2:	68e5      	ldr	r5, [r4, #12]
 8009ad4:	682d      	ldr	r5, [r5, #0]
 8009ad6:	f035 0504 	bics.w	r5, r5, #4
 8009ada:	d104      	bne.n	8009ae6 <GUI_ReadRectEx+0x4e>
 8009adc:	9405      	str	r4, [sp, #20]
 8009ade:	9604      	str	r6, [sp, #16]
 8009ae0:	bcf0      	pop	{r4, r5, r6, r7}
 8009ae2:	f7ff bf07 	b.w	80098f4 <LCD_ReadRectEx>
 8009ae6:	6825      	ldr	r5, [r4, #0]
 8009ae8:	2d00      	cmp	r5, #0
 8009aea:	d0f7      	beq.n	8009adc <GUI_ReadRectEx+0x44>
 8009aec:	462c      	mov	r4, r5
 8009aee:	e7f0      	b.n	8009ad2 <GUI_ReadRectEx+0x3a>
 8009af0:	bcf0      	pop	{r4, r5, r6, r7}
 8009af2:	4770      	bx	lr
 8009af4:	20000014 	.word	0x20000014

08009af8 <LCD_SetClipRectEx>:
 8009af8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009afa:	4605      	mov	r5, r0
 8009afc:	4c08      	ldr	r4, [pc, #32]	@ (8009b20 <LCD_SetClipRectEx+0x28>)
 8009afe:	4669      	mov	r1, sp
 8009b00:	6823      	ldr	r3, [r4, #0]
 8009b02:	7c5a      	ldrb	r2, [r3, #17]
 8009b04:	4b07      	ldr	r3, [pc, #28]	@ (8009b24 <LCD_SetClipRectEx+0x2c>)
 8009b06:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8009b0a:	68c3      	ldr	r3, [r0, #12]
 8009b0c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8009b0e:	4798      	blx	r3
 8009b10:	6820      	ldr	r0, [r4, #0]
 8009b12:	466a      	mov	r2, sp
 8009b14:	4629      	mov	r1, r5
 8009b16:	3008      	adds	r0, #8
 8009b18:	f7f9 f9e3 	bl	8002ee2 <GUI__IntersectRects>
 8009b1c:	b003      	add	sp, #12
 8009b1e:	bd30      	pop	{r4, r5, pc}
 8009b20:	20000014 	.word	0x20000014
 8009b24:	20002c38 	.word	0x20002c38

08009b28 <GUI_MEMDEV__WriteToActiveAt>:
 8009b28:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009b2c:	460f      	mov	r7, r1
 8009b2e:	4690      	mov	r8, r2
 8009b30:	4606      	mov	r6, r0
 8009b32:	f7f8 fa8d 	bl	8002050 <GUI_ALLOC_LockH>
 8009b36:	6803      	ldr	r3, [r0, #0]
 8009b38:	ac02      	add	r4, sp, #8
 8009b3a:	68db      	ldr	r3, [r3, #12]
 8009b3c:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009b40:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009b42:	2116      	movs	r1, #22
 8009b44:	2000      	movs	r0, #0
 8009b46:	4798      	blx	r3
 8009b48:	4605      	mov	r5, r0
 8009b4a:	4620      	mov	r0, r4
 8009b4c:	f7f8 fa8e 	bl	800206c <GUI_ALLOC_UnlockH>
 8009b50:	b11d      	cbz	r5, 8009b5a <GUI_MEMDEV__WriteToActiveAt+0x32>
 8009b52:	4642      	mov	r2, r8
 8009b54:	4639      	mov	r1, r7
 8009b56:	4630      	mov	r0, r6
 8009b58:	47a8      	blx	r5
 8009b5a:	b002      	add	sp, #8
 8009b5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009b60 <GUI_MEMDEV__CreateFixed>:
 8009b60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009b64:	4d46      	ldr	r5, [pc, #280]	@ (8009c80 <GUI_MEMDEV__CreateFixed+0x120>)
 8009b66:	461c      	mov	r4, r3
 8009b68:	682b      	ldr	r3, [r5, #0]
 8009b6a:	b087      	sub	sp, #28
 8009b6c:	4681      	mov	r9, r0
 8009b6e:	468a      	mov	sl, r1
 8009b70:	4690      	mov	r8, r2
 8009b72:	7c5b      	ldrb	r3, [r3, #17]
 8009b74:	2200      	movs	r2, #0
 8009b76:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8009b78:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8009b7a:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8009b7c:	f7f8 fffc 	bl	8002b78 <GUI_DEVICE_Create>
 8009b80:	9503      	str	r5, [sp, #12]
 8009b82:	4606      	mov	r6, r0
 8009b84:	b380      	cbz	r0, 8009be8 <GUI_MEMDEV__CreateFixed+0x88>
 8009b86:	6903      	ldr	r3, [r0, #16]
 8009b88:	689b      	ldr	r3, [r3, #8]
 8009b8a:	4798      	blx	r3
 8009b8c:	f7f9 ff1d 	bl	80039ca <LCD__GetBPPDevice>
 8009b90:	fb00 f508 	mul.w	r5, r0, r8
 8009b94:	9002      	str	r0, [sp, #8]
 8009b96:	f7f8 fb9b 	bl	80022d0 <GUI_ALLOC_RequestSize>
 8009b9a:	f017 0701 	ands.w	r7, r7, #1
 8009b9e:	bf04      	itt	eq
 8009ba0:	2304      	moveq	r3, #4
 8009ba2:	fb90 f0f3 	sdiveq	r0, r0, r3
 8009ba6:	f105 0507 	add.w	r5, r5, #7
 8009baa:	bf08      	it	eq
 8009bac:	eb00 0040 	addeq.w	r0, r0, r0, lsl #1
 8009bb0:	2c00      	cmp	r4, #0
 8009bb2:	ea4f 05d5 	mov.w	r5, r5, lsr #3
 8009bb6:	dc44      	bgt.n	8009c42 <GUI_MEMDEV__CreateFixed+0xe2>
 8009bb8:	b11d      	cbz	r5, 8009bc2 <GUI_MEMDEV__CreateFixed+0x62>
 8009bba:	3818      	subs	r0, #24
 8009bbc:	fbb0 f0f5 	udiv	r0, r0, r5
 8009bc0:	e000      	b.n	8009bc4 <GUI_MEMDEV__CreateFixed+0x64>
 8009bc2:	4628      	mov	r0, r5
 8009bc4:	4264      	negs	r4, r4
 8009bc6:	4284      	cmp	r4, r0
 8009bc8:	bfa8      	it	ge
 8009bca:	4604      	movge	r4, r0
 8009bcc:	b977      	cbnz	r7, 8009bec <GUI_MEMDEV__CreateFixed+0x8c>
 8009bce:	9700      	str	r7, [sp, #0]
 8009bd0:	4623      	mov	r3, r4
 8009bd2:	4642      	mov	r2, r8
 8009bd4:	4651      	mov	r1, sl
 8009bd6:	4648      	mov	r0, r9
 8009bd8:	f000 fbe8 	bl	800a3ac <GUI_USAGE_BM_Create>
 8009bdc:	2c00      	cmp	r4, #0
 8009bde:	4683      	mov	fp, r0
 8009be0:	dc39      	bgt.n	8009c56 <GUI_MEMDEV__CreateFixed+0xf6>
 8009be2:	4630      	mov	r0, r6
 8009be4:	f7f8 ffc6 	bl	8002b74 <GUI_DEVICE_Delete>
 8009be8:	2000      	movs	r0, #0
 8009bea:	e046      	b.n	8009c7a <GUI_MEMDEV__CreateFixed+0x11a>
 8009bec:	2c00      	cmp	r4, #0
 8009bee:	ddf8      	ble.n	8009be2 <GUI_MEMDEV__CreateFixed+0x82>
 8009bf0:	fb05 f004 	mul.w	r0, r5, r4
 8009bf4:	3018      	adds	r0, #24
 8009bf6:	f7f8 fbf9 	bl	80023ec <GUI_ALLOC_AllocNoInit>
 8009bfa:	4607      	mov	r7, r0
 8009bfc:	2800      	cmp	r0, #0
 8009bfe:	d0f0      	beq.n	8009be2 <GUI_MEMDEV__CreateFixed+0x82>
 8009c00:	f04f 0b00 	mov.w	fp, #0
 8009c04:	4638      	mov	r0, r7
 8009c06:	f7f8 fa23 	bl	8002050 <GUI_ALLOC_LockH>
 8009c0a:	4603      	mov	r3, r0
 8009c0c:	9a02      	ldr	r2, [sp, #8]
 8009c0e:	a806      	add	r0, sp, #24
 8009c10:	f840 3d04 	str.w	r3, [r0, #-4]!
 8009c14:	f8a3 9004 	strh.w	r9, [r3, #4]
 8009c18:	601e      	str	r6, [r3, #0]
 8009c1a:	f8a3 a006 	strh.w	sl, [r3, #6]
 8009c1e:	f8a3 8008 	strh.w	r8, [r3, #8]
 8009c22:	815c      	strh	r4, [r3, #10]
 8009c24:	60dd      	str	r5, [r3, #12]
 8009c26:	611a      	str	r2, [r3, #16]
 8009c28:	f8c3 b014 	str.w	fp, [r3, #20]
 8009c2c:	f7f8 fa1e 	bl	800206c <GUI_ALLOC_UnlockH>
 8009c30:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8009c32:	60b7      	str	r7, [r6, #8]
 8009c34:	6133      	str	r3, [r6, #16]
 8009c36:	9b03      	ldr	r3, [sp, #12]
 8009c38:	681b      	ldr	r3, [r3, #0]
 8009c3a:	7c5b      	ldrb	r3, [r3, #17]
 8009c3c:	61b3      	str	r3, [r6, #24]
 8009c3e:	4638      	mov	r0, r7
 8009c40:	e01b      	b.n	8009c7a <GUI_MEMDEV__CreateFixed+0x11a>
 8009c42:	2f00      	cmp	r7, #0
 8009c44:	d1d4      	bne.n	8009bf0 <GUI_MEMDEV__CreateFixed+0x90>
 8009c46:	9700      	str	r7, [sp, #0]
 8009c48:	4623      	mov	r3, r4
 8009c4a:	4642      	mov	r2, r8
 8009c4c:	4651      	mov	r1, sl
 8009c4e:	4648      	mov	r0, r9
 8009c50:	f000 fbac 	bl	800a3ac <GUI_USAGE_BM_Create>
 8009c54:	4683      	mov	fp, r0
 8009c56:	fb05 f004 	mul.w	r0, r5, r4
 8009c5a:	3018      	adds	r0, #24
 8009c5c:	f7f8 fbd2 	bl	8002404 <GUI_ALLOC_AllocZero>
 8009c60:	4607      	mov	r7, r0
 8009c62:	2800      	cmp	r0, #0
 8009c64:	d1ce      	bne.n	8009c04 <GUI_MEMDEV__CreateFixed+0xa4>
 8009c66:	4630      	mov	r0, r6
 8009c68:	f7f8 ff84 	bl	8002b74 <GUI_DEVICE_Delete>
 8009c6c:	f1bb 0f00 	cmp.w	fp, #0
 8009c70:	d0ba      	beq.n	8009be8 <GUI_MEMDEV__CreateFixed+0x88>
 8009c72:	4658      	mov	r0, fp
 8009c74:	f7f8 fa26 	bl	80020c4 <GUI_ALLOC_Free>
 8009c78:	e7e1      	b.n	8009c3e <GUI_MEMDEV__CreateFixed+0xde>
 8009c7a:	b007      	add	sp, #28
 8009c7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009c80:	20000014 	.word	0x20000014

08009c84 <GUI_MEMDEV_GetBitsPerPixel>:
 8009c84:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009c86:	4604      	mov	r4, r0
 8009c88:	b170      	cbz	r0, 8009ca8 <GUI_MEMDEV_GetBitsPerPixel+0x24>
 8009c8a:	f7f8 f9e1 	bl	8002050 <GUI_ALLOC_LockH>
 8009c8e:	6803      	ldr	r3, [r0, #0]
 8009c90:	ad02      	add	r5, sp, #8
 8009c92:	691b      	ldr	r3, [r3, #16]
 8009c94:	f845 0d04 	str.w	r0, [r5, #-4]!
 8009c98:	689b      	ldr	r3, [r3, #8]
 8009c9a:	4798      	blx	r3
 8009c9c:	f7f9 fe95 	bl	80039ca <LCD__GetBPPDevice>
 8009ca0:	4604      	mov	r4, r0
 8009ca2:	4628      	mov	r0, r5
 8009ca4:	f7f8 f9e2 	bl	800206c <GUI_ALLOC_UnlockH>
 8009ca8:	4620      	mov	r0, r4
 8009caa:	b003      	add	sp, #12
 8009cac:	bd30      	pop	{r4, r5, pc}
	...

08009cb0 <GUI_MEMDEV_Delete>:
 8009cb0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009cb2:	4604      	mov	r4, r0
 8009cb4:	b1d0      	cbz	r0, 8009cec <GUI_MEMDEV_Delete+0x3c>
 8009cb6:	4b0e      	ldr	r3, [pc, #56]	@ (8009cf0 <GUI_MEMDEV_Delete+0x40>)
 8009cb8:	681b      	ldr	r3, [r3, #0]
 8009cba:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8009cbc:	4298      	cmp	r0, r3
 8009cbe:	d101      	bne.n	8009cc4 <GUI_MEMDEV_Delete+0x14>
 8009cc0:	f7f8 fd4c 	bl	800275c <GUI_SelectLCD>
 8009cc4:	4620      	mov	r0, r4
 8009cc6:	f7f8 f9c3 	bl	8002050 <GUI_ALLOC_LockH>
 8009cca:	9001      	str	r0, [sp, #4]
 8009ccc:	6940      	ldr	r0, [r0, #20]
 8009cce:	b108      	cbz	r0, 8009cd4 <GUI_MEMDEV_Delete+0x24>
 8009cd0:	f7fb fc98 	bl	8005604 <GUI_USAGE_DecUseCnt>
 8009cd4:	ad02      	add	r5, sp, #8
 8009cd6:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8009cda:	6818      	ldr	r0, [r3, #0]
 8009cdc:	f7f8 ff4a 	bl	8002b74 <GUI_DEVICE_Delete>
 8009ce0:	4628      	mov	r0, r5
 8009ce2:	f7f8 f9c3 	bl	800206c <GUI_ALLOC_UnlockH>
 8009ce6:	4620      	mov	r0, r4
 8009ce8:	f7f8 f9ec 	bl	80020c4 <GUI_ALLOC_Free>
 8009cec:	b003      	add	sp, #12
 8009cee:	bd30      	pop	{r4, r5, pc}
 8009cf0:	20000014 	.word	0x20000014

08009cf4 <GUI_MEMDEV_CreateEx>:
 8009cf4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8009cf8:	460f      	mov	r7, r1
 8009cfa:	4690      	mov	r8, r2
 8009cfc:	4699      	mov	r9, r3
 8009cfe:	4b18      	ldr	r3, [pc, #96]	@ (8009d60 <GUI_MEMDEV_CreateEx+0x6c>)
 8009d00:	4606      	mov	r6, r0
 8009d02:	681b      	ldr	r3, [r3, #0]
 8009d04:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8009d06:	7c58      	ldrb	r0, [r3, #17]
 8009d08:	4b16      	ldr	r3, [pc, #88]	@ (8009d64 <GUI_MEMDEV_CreateEx+0x70>)
 8009d0a:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8009d0e:	68e3      	ldr	r3, [r4, #12]
 8009d10:	681b      	ldr	r3, [r3, #0]
 8009d12:	2b04      	cmp	r3, #4
 8009d14:	d006      	beq.n	8009d24 <GUI_MEMDEV_CreateEx+0x30>
 8009d16:	6824      	ldr	r4, [r4, #0]
 8009d18:	2c00      	cmp	r4, #0
 8009d1a:	d1f8      	bne.n	8009d0e <GUI_MEMDEV_CreateEx+0x1a>
 8009d1c:	f7f8 ff1a 	bl	8002b54 <GUI_DEVICE__GetpDriver>
 8009d20:	4604      	mov	r4, r0
 8009d22:	b130      	cbz	r0, 8009d32 <GUI_MEMDEV_CreateEx+0x3e>
 8009d24:	68e3      	ldr	r3, [r4, #12]
 8009d26:	2101      	movs	r1, #1
 8009d28:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009d2a:	4620      	mov	r0, r4
 8009d2c:	4798      	blx	r3
 8009d2e:	4682      	mov	sl, r0
 8009d30:	b908      	cbnz	r0, 8009d36 <GUI_MEMDEV_CreateEx+0x42>
 8009d32:	2000      	movs	r0, #0
 8009d34:	e010      	b.n	8009d58 <GUI_MEMDEV_CreateEx+0x64>
 8009d36:	6924      	ldr	r4, [r4, #16]
 8009d38:	68a3      	ldr	r3, [r4, #8]
 8009d3a:	4798      	blx	r3
 8009d3c:	3001      	adds	r0, #1
 8009d3e:	bf04      	itt	eq
 8009d40:	4c09      	ldreq	r4, [pc, #36]	@ (8009d68 <GUI_MEMDEV_CreateEx+0x74>)
 8009d42:	f045 0501 	orreq.w	r5, r5, #1
 8009d46:	9402      	str	r4, [sp, #8]
 8009d48:	e88d 0420 	stmia.w	sp, {r5, sl}
 8009d4c:	464b      	mov	r3, r9
 8009d4e:	4642      	mov	r2, r8
 8009d50:	4639      	mov	r1, r7
 8009d52:	4630      	mov	r0, r6
 8009d54:	f7ff ff04 	bl	8009b60 <GUI_MEMDEV__CreateFixed>
 8009d58:	b004      	add	sp, #16
 8009d5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009d5e:	bf00      	nop
 8009d60:	20000014 	.word	0x20000014
 8009d64:	20002c38 	.word	0x20002c38
 8009d68:	0800bfe8 	.word	0x0800bfe8

08009d6c <GUI_MEMDEV_Select>:
 8009d6c:	4b11      	ldr	r3, [pc, #68]	@ (8009db4 <GUI_MEMDEV_Select+0x48>)
 8009d6e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009d70:	681a      	ldr	r2, [r3, #0]
 8009d72:	4606      	mov	r6, r0
 8009d74:	6e17      	ldr	r7, [r2, #96]	@ 0x60
 8009d76:	461c      	mov	r4, r3
 8009d78:	b910      	cbnz	r0, 8009d80 <GUI_MEMDEV_Select+0x14>
 8009d7a:	f7f8 fcef 	bl	800275c <GUI_SelectLCD>
 8009d7e:	e016      	b.n	8009dae <GUI_MEMDEV_Select+0x42>
 8009d80:	b10f      	cbz	r7, 8009d86 <GUI_MEMDEV_Select+0x1a>
 8009d82:	f7f8 fceb 	bl	800275c <GUI_SelectLCD>
 8009d86:	f7fd f94b 	bl	8007020 <WM_Deactivate>
 8009d8a:	4630      	mov	r0, r6
 8009d8c:	f7f8 f960 	bl	8002050 <GUI_ALLOC_LockH>
 8009d90:	6823      	ldr	r3, [r4, #0]
 8009d92:	ad02      	add	r5, sp, #8
 8009d94:	f845 0d04 	str.w	r0, [r5, #-4]!
 8009d98:	661e      	str	r6, [r3, #96]	@ 0x60
 8009d9a:	6800      	ldr	r0, [r0, #0]
 8009d9c:	f7f8 ff2a 	bl	8002bf4 <GUI_DEVICE_Link>
 8009da0:	4628      	mov	r0, r5
 8009da2:	f7f8 f963 	bl	800206c <GUI_ALLOC_UnlockH>
 8009da6:	f7f9 fe9d 	bl	8003ae4 <LCD_UpdateColorIndices>
 8009daa:	f7f9 fbcb 	bl	8003544 <LCD_SetClipRectMax>
 8009dae:	4638      	mov	r0, r7
 8009db0:	b003      	add	sp, #12
 8009db2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009db4:	20000014 	.word	0x20000014

08009db8 <GUI_MEMDEV_CopyToLCDAt>:
 8009db8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009dbc:	460c      	mov	r4, r1
 8009dbe:	b085      	sub	sp, #20
 8009dc0:	4615      	mov	r5, r2
 8009dc2:	4606      	mov	r6, r0
 8009dc4:	2800      	cmp	r0, #0
 8009dc6:	d043      	beq.n	8009e50 <GUI_MEMDEV_CopyToLCDAt+0x98>
 8009dc8:	2000      	movs	r0, #0
 8009dca:	f7f8 fcd4 	bl	8002776 <GUI_SetDrawMode>
 8009dce:	4b22      	ldr	r3, [pc, #136]	@ (8009e58 <GUI_MEMDEV_CopyToLCDAt+0xa0>)
 8009dd0:	4607      	mov	r7, r0
 8009dd2:	681b      	ldr	r3, [r3, #0]
 8009dd4:	4630      	mov	r0, r6
 8009dd6:	f8d3 8060 	ldr.w	r8, [r3, #96]	@ 0x60
 8009dda:	f7f8 f939 	bl	8002050 <GUI_ALLOC_LockH>
 8009dde:	6803      	ldr	r3, [r0, #0]
 8009de0:	9001      	str	r0, [sp, #4]
 8009de2:	6998      	ldr	r0, [r3, #24]
 8009de4:	f7ff f800 	bl	8008de8 <GUI_SelectLayer>
 8009de8:	9a01      	ldr	r2, [sp, #4]
 8009dea:	4b1c      	ldr	r3, [pc, #112]	@ (8009e5c <GUI_MEMDEV_CopyToLCDAt+0xa4>)
 8009dec:	4681      	mov	r9, r0
 8009dee:	429c      	cmp	r4, r3
 8009df0:	8913      	ldrh	r3, [r2, #8]
 8009df2:	bf08      	it	eq
 8009df4:	f9b2 4004 	ldrsheq.w	r4, [r2, #4]
 8009df8:	f103 33ff 	add.w	r3, r3, #4294967295
 8009dfc:	4423      	add	r3, r4
 8009dfe:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009e02:	8953      	ldrh	r3, [r2, #10]
 8009e04:	bf08      	it	eq
 8009e06:	f9b2 5006 	ldrsheq.w	r5, [r2, #6]
 8009e0a:	3b01      	subs	r3, #1
 8009e0c:	442b      	add	r3, r5
 8009e0e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8009e12:	f8ad 4008 	strh.w	r4, [sp, #8]
 8009e16:	f8ad 500a 	strh.w	r5, [sp, #10]
 8009e1a:	f7fd f8f9 	bl	8007010 <WM_Activate>
 8009e1e:	a801      	add	r0, sp, #4
 8009e20:	f7f8 f924 	bl	800206c <GUI_ALLOC_UnlockH>
 8009e24:	a802      	add	r0, sp, #8
 8009e26:	f7fc ff43 	bl	8006cb0 <WM__InitIVRSearch>
 8009e2a:	b948      	cbnz	r0, 8009e40 <GUI_MEMDEV_CopyToLCDAt+0x88>
 8009e2c:	4648      	mov	r0, r9
 8009e2e:	f7fe ffdb 	bl	8008de8 <GUI_SelectLayer>
 8009e32:	4640      	mov	r0, r8
 8009e34:	f7ff ff9a 	bl	8009d6c <GUI_MEMDEV_Select>
 8009e38:	4638      	mov	r0, r7
 8009e3a:	f7f8 fc9c 	bl	8002776 <GUI_SetDrawMode>
 8009e3e:	e007      	b.n	8009e50 <GUI_MEMDEV_CopyToLCDAt+0x98>
 8009e40:	462a      	mov	r2, r5
 8009e42:	4621      	mov	r1, r4
 8009e44:	4630      	mov	r0, r6
 8009e46:	f7fb fc45 	bl	80056d4 <GUI_MEMDEV__WriteToActiveOpaque>
 8009e4a:	f7fc fe6f 	bl	8006b2c <WM__GetNextIVR>
 8009e4e:	e7ec      	b.n	8009e2a <GUI_MEMDEV_CopyToLCDAt+0x72>
 8009e50:	b005      	add	sp, #20
 8009e52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009e56:	bf00      	nop
 8009e58:	20000014 	.word	0x20000014
 8009e5c:	fffff001 	.word	0xfffff001

08009e60 <GUI_MEMDEV_CopyToLCD>:
 8009e60:	4a01      	ldr	r2, [pc, #4]	@ (8009e68 <GUI_MEMDEV_CopyToLCD+0x8>)
 8009e62:	4611      	mov	r1, r2
 8009e64:	f7ff bfa8 	b.w	8009db8 <GUI_MEMDEV_CopyToLCDAt>
 8009e68:	fffff001 	.word	0xfffff001

08009e6c <GUI_MEMDEV_Draw>:
 8009e6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009e70:	4698      	mov	r8, r3
 8009e72:	4b52      	ldr	r3, [pc, #328]	@ (8009fbc <GUI_MEMDEV_Draw+0x150>)
 8009e74:	b087      	sub	sp, #28
 8009e76:	9203      	str	r2, [sp, #12]
 8009e78:	681a      	ldr	r2, [r3, #0]
 8009e7a:	4606      	mov	r6, r0
 8009e7c:	7c54      	ldrb	r4, [r2, #17]
 8009e7e:	4a50      	ldr	r2, [pc, #320]	@ (8009fc0 <GUI_MEMDEV_Draw+0x154>)
 8009e80:	9102      	str	r1, [sp, #8]
 8009e82:	5712      	ldrsb	r2, [r2, r4]
 8009e84:	4620      	mov	r0, r4
 8009e86:	2a01      	cmp	r2, #1
 8009e88:	469b      	mov	fp, r3
 8009e8a:	dd06      	ble.n	8009e9a <GUI_MEMDEV_Draw+0x2e>
 8009e8c:	f7f9 fcea 	bl	8003864 <LCD_GetXSizeEx>
 8009e90:	4681      	mov	r9, r0
 8009e92:	4620      	mov	r0, r4
 8009e94:	f7f9 fce9 	bl	800386a <LCD_GetYSizeEx>
 8009e98:	e005      	b.n	8009ea6 <GUI_MEMDEV_Draw+0x3a>
 8009e9a:	f7f9 fce9 	bl	8003870 <LCD_GetVXSizeEx>
 8009e9e:	4681      	mov	r9, r0
 8009ea0:	4620      	mov	r0, r4
 8009ea2:	f7f9 fce8 	bl	8003876 <LCD_GetVYSizeEx>
 8009ea6:	4604      	mov	r4, r0
 8009ea8:	b336      	cbz	r6, 8009ef8 <GUI_MEMDEV_Draw+0x8c>
 8009eaa:	a905      	add	r1, sp, #20
 8009eac:	a804      	add	r0, sp, #16
 8009eae:	f7f8 fb93 	bl	80025d8 <GUI_GetOrg>
 8009eb2:	9a04      	ldr	r2, [sp, #16]
 8009eb4:	9b05      	ldr	r3, [sp, #20]
 8009eb6:	4491      	add	r9, r2
 8009eb8:	f9b6 7000 	ldrsh.w	r7, [r6]
 8009ebc:	f9b6 5002 	ldrsh.w	r5, [r6, #2]
 8009ec0:	f109 32ff 	add.w	r2, r9, #4294967295
 8009ec4:	441c      	add	r4, r3
 8009ec6:	f9b6 9004 	ldrsh.w	r9, [r6, #4]
 8009eca:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009ece:	ea27 77e7 	bic.w	r7, r7, r7, asr #31
 8009ed2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8009ed6:	3c01      	subs	r4, #1
 8009ed8:	454a      	cmp	r2, r9
 8009eda:	bfd4      	ite	le
 8009edc:	ebc7 0902 	rsble	r9, r7, r2
 8009ee0:	ebc7 0909 	rsbgt	r9, r7, r9
 8009ee4:	429c      	cmp	r4, r3
 8009ee6:	bfd4      	ite	le
 8009ee8:	ebc5 0404 	rsble	r4, r5, r4
 8009eec:	ebc5 0403 	rsbgt	r4, r5, r3
 8009ef0:	f109 0901 	add.w	r9, r9, #1
 8009ef4:	3401      	adds	r4, #1
 8009ef6:	e001      	b.n	8009efc <GUI_MEMDEV_Draw+0x90>
 8009ef8:	4635      	mov	r5, r6
 8009efa:	4637      	mov	r7, r6
 8009efc:	f1b8 0f00 	cmp.w	r8, #0
 8009f00:	d101      	bne.n	8009f06 <GUI_MEMDEV_Draw+0x9a>
 8009f02:	f1c4 0800 	rsb	r8, r4, #0
 8009f06:	f1b9 0f00 	cmp.w	r9, #0
 8009f0a:	dd53      	ble.n	8009fb4 <GUI_MEMDEV_Draw+0x148>
 8009f0c:	2c00      	cmp	r4, #0
 8009f0e:	dd51      	ble.n	8009fb4 <GUI_MEMDEV_Draw+0x148>
 8009f10:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8009f12:	464a      	mov	r2, r9
 8009f14:	9300      	str	r3, [sp, #0]
 8009f16:	4629      	mov	r1, r5
 8009f18:	4643      	mov	r3, r8
 8009f1a:	4638      	mov	r0, r7
 8009f1c:	f7ff feea 	bl	8009cf4 <GUI_MEMDEV_CreateEx>
 8009f20:	4606      	mov	r6, r0
 8009f22:	b920      	cbnz	r0, 8009f2e <GUI_MEMDEV_Draw+0xc2>
 8009f24:	9803      	ldr	r0, [sp, #12]
 8009f26:	9b02      	ldr	r3, [sp, #8]
 8009f28:	4798      	blx	r3
 8009f2a:	2001      	movs	r0, #1
 8009f2c:	e043      	b.n	8009fb6 <GUI_MEMDEV_Draw+0x14a>
 8009f2e:	f000 f87b 	bl	800a028 <GUI_MEMDEV_GetYSize>
 8009f32:	4284      	cmp	r4, r0
 8009f34:	4680      	mov	r8, r0
 8009f36:	d006      	beq.n	8009f46 <GUI_MEMDEV_Draw+0xda>
 8009f38:	f8db 3000 	ldr.w	r3, [fp]
 8009f3c:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 8009f3e:	b110      	cbz	r0, 8009f46 <GUI_MEMDEV_Draw+0xda>
 8009f40:	2132      	movs	r1, #50	@ 0x32
 8009f42:	f7fd fd0b 	bl	800795c <WM__SendMessageNoPara>
 8009f46:	4630      	mov	r0, r6
 8009f48:	f7ff ff10 	bl	8009d6c <GUI_MEMDEV_Select>
 8009f4c:	46a2      	mov	sl, r4
 8009f4e:	f04f 0900 	mov.w	r9, #0
 8009f52:	45d0      	cmp	r8, sl
 8009f54:	dd03      	ble.n	8009f5e <GUI_MEMDEV_Draw+0xf2>
 8009f56:	4651      	mov	r1, sl
 8009f58:	4630      	mov	r0, r6
 8009f5a:	f000 f87d 	bl	800a058 <GUI_MEMDEV_ReduceYSize>
 8009f5e:	f1b9 0f00 	cmp.w	r9, #0
 8009f62:	d008      	beq.n	8009f76 <GUI_MEMDEV_Draw+0x10a>
 8009f64:	4630      	mov	r0, r6
 8009f66:	eb09 0205 	add.w	r2, r9, r5
 8009f6a:	4639      	mov	r1, r7
 8009f6c:	f000 f88a 	bl	800a084 <GUI_MEMDEV_SetOrg>
 8009f70:	4630      	mov	r0, r6
 8009f72:	f000 f829 	bl	8009fc8 <GUI_MEMDEV_Clear>
 8009f76:	9b02      	ldr	r3, [sp, #8]
 8009f78:	9803      	ldr	r0, [sp, #12]
 8009f7a:	4798      	blx	r3
 8009f7c:	4b11      	ldr	r3, [pc, #68]	@ (8009fc4 <GUI_MEMDEV_Draw+0x158>)
 8009f7e:	681b      	ldr	r3, [r3, #0]
 8009f80:	b10b      	cbz	r3, 8009f86 <GUI_MEMDEV_Draw+0x11a>
 8009f82:	2000      	movs	r0, #0
 8009f84:	4798      	blx	r3
 8009f86:	4630      	mov	r0, r6
 8009f88:	44c1      	add	r9, r8
 8009f8a:	f7ff ff69 	bl	8009e60 <GUI_MEMDEV_CopyToLCD>
 8009f8e:	454c      	cmp	r4, r9
 8009f90:	ebc8 0a0a 	rsb	sl, r8, sl
 8009f94:	dcdd      	bgt.n	8009f52 <GUI_MEMDEV_Draw+0xe6>
 8009f96:	4630      	mov	r0, r6
 8009f98:	f7ff fe8a 	bl	8009cb0 <GUI_MEMDEV_Delete>
 8009f9c:	2000      	movs	r0, #0
 8009f9e:	f7ff fee5 	bl	8009d6c <GUI_MEMDEV_Select>
 8009fa2:	4544      	cmp	r4, r8
 8009fa4:	d006      	beq.n	8009fb4 <GUI_MEMDEV_Draw+0x148>
 8009fa6:	f8db 3000 	ldr.w	r3, [fp]
 8009faa:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 8009fac:	b110      	cbz	r0, 8009fb4 <GUI_MEMDEV_Draw+0x148>
 8009fae:	2133      	movs	r1, #51	@ 0x33
 8009fb0:	f7fd fcd4 	bl	800795c <WM__SendMessageNoPara>
 8009fb4:	2000      	movs	r0, #0
 8009fb6:	b007      	add	sp, #28
 8009fb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009fbc:	20000014 	.word	0x20000014
 8009fc0:	20002be8 	.word	0x20002be8
 8009fc4:	200002bc 	.word	0x200002bc

08009fc8 <GUI_MEMDEV_Clear>:
 8009fc8:	b513      	push	{r0, r1, r4, lr}
 8009fca:	b918      	cbnz	r0, 8009fd4 <GUI_MEMDEV_Clear+0xc>
 8009fcc:	4b0d      	ldr	r3, [pc, #52]	@ (800a004 <GUI_MEMDEV_Clear+0x3c>)
 8009fce:	681b      	ldr	r3, [r3, #0]
 8009fd0:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 8009fd2:	b1a8      	cbz	r0, 800a000 <GUI_MEMDEV_Clear+0x38>
 8009fd4:	f7f8 f83c 	bl	8002050 <GUI_ALLOC_LockH>
 8009fd8:	ab02      	add	r3, sp, #8
 8009fda:	6944      	ldr	r4, [r0, #20]
 8009fdc:	f843 0d08 	str.w	r0, [r3, #-8]!
 8009fe0:	4618      	mov	r0, r3
 8009fe2:	f7f8 f843 	bl	800206c <GUI_ALLOC_UnlockH>
 8009fe6:	b15c      	cbz	r4, 800a000 <GUI_MEMDEV_Clear+0x38>
 8009fe8:	4620      	mov	r0, r4
 8009fea:	f7f8 f831 	bl	8002050 <GUI_ALLOC_LockH>
 8009fee:	6883      	ldr	r3, [r0, #8]
 8009ff0:	ac02      	add	r4, sp, #8
 8009ff2:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009ff6:	689b      	ldr	r3, [r3, #8]
 8009ff8:	4798      	blx	r3
 8009ffa:	4620      	mov	r0, r4
 8009ffc:	f7f8 f836 	bl	800206c <GUI_ALLOC_UnlockH>
 800a000:	b002      	add	sp, #8
 800a002:	bd10      	pop	{r4, pc}
 800a004:	20000014 	.word	0x20000014

0800a008 <GUI_MEMDEV_GetDataPtr>:
 800a008:	b513      	push	{r0, r1, r4, lr}
 800a00a:	b158      	cbz	r0, 800a024 <GUI_MEMDEV_GetDataPtr+0x1c>
 800a00c:	f7f8 f820 	bl	8002050 <GUI_ALLOC_LockH>
 800a010:	ab02      	add	r3, sp, #8
 800a012:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a016:	f100 0418 	add.w	r4, r0, #24
 800a01a:	4618      	mov	r0, r3
 800a01c:	f7f8 f826 	bl	800206c <GUI_ALLOC_UnlockH>
 800a020:	4620      	mov	r0, r4
 800a022:	e7ff      	b.n	800a024 <GUI_MEMDEV_GetDataPtr+0x1c>
 800a024:	b002      	add	sp, #8
 800a026:	bd10      	pop	{r4, pc}

0800a028 <GUI_MEMDEV_GetYSize>:
 800a028:	b513      	push	{r0, r1, r4, lr}
 800a02a:	b918      	cbnz	r0, 800a034 <GUI_MEMDEV_GetYSize+0xc>
 800a02c:	4b09      	ldr	r3, [pc, #36]	@ (800a054 <GUI_MEMDEV_GetYSize+0x2c>)
 800a02e:	681b      	ldr	r3, [r3, #0]
 800a030:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 800a032:	b150      	cbz	r0, 800a04a <GUI_MEMDEV_GetYSize+0x22>
 800a034:	f7f8 f80c 	bl	8002050 <GUI_ALLOC_LockH>
 800a038:	ab02      	add	r3, sp, #8
 800a03a:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a03e:	f9b0 400a 	ldrsh.w	r4, [r0, #10]
 800a042:	4618      	mov	r0, r3
 800a044:	f7f8 f812 	bl	800206c <GUI_ALLOC_UnlockH>
 800a048:	e000      	b.n	800a04c <GUI_MEMDEV_GetYSize+0x24>
 800a04a:	4604      	mov	r4, r0
 800a04c:	4620      	mov	r0, r4
 800a04e:	b002      	add	sp, #8
 800a050:	bd10      	pop	{r4, pc}
 800a052:	bf00      	nop
 800a054:	20000014 	.word	0x20000014

0800a058 <GUI_MEMDEV_ReduceYSize>:
 800a058:	b513      	push	{r0, r1, r4, lr}
 800a05a:	460c      	mov	r4, r1
 800a05c:	b918      	cbnz	r0, 800a066 <GUI_MEMDEV_ReduceYSize+0xe>
 800a05e:	4b08      	ldr	r3, [pc, #32]	@ (800a080 <GUI_MEMDEV_ReduceYSize+0x28>)
 800a060:	681b      	ldr	r3, [r3, #0]
 800a062:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 800a064:	b150      	cbz	r0, 800a07c <GUI_MEMDEV_ReduceYSize+0x24>
 800a066:	f7f7 fff3 	bl	8002050 <GUI_ALLOC_LockH>
 800a06a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800a06e:	9001      	str	r0, [sp, #4]
 800a070:	42a3      	cmp	r3, r4
 800a072:	bfc8      	it	gt
 800a074:	8144      	strhgt	r4, [r0, #10]
 800a076:	a801      	add	r0, sp, #4
 800a078:	f7f7 fff8 	bl	800206c <GUI_ALLOC_UnlockH>
 800a07c:	b002      	add	sp, #8
 800a07e:	bd10      	pop	{r4, pc}
 800a080:	20000014 	.word	0x20000014

0800a084 <GUI_MEMDEV_SetOrg>:
 800a084:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a086:	460d      	mov	r5, r1
 800a088:	4614      	mov	r4, r2
 800a08a:	b918      	cbnz	r0, 800a094 <GUI_MEMDEV_SetOrg+0x10>
 800a08c:	4b12      	ldr	r3, [pc, #72]	@ (800a0d8 <GUI_MEMDEV_SetOrg+0x54>)
 800a08e:	681b      	ldr	r3, [r3, #0]
 800a090:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 800a092:	b1f8      	cbz	r0, 800a0d4 <GUI_MEMDEV_SetOrg+0x50>
 800a094:	f7f7 ffdc 	bl	8002050 <GUI_ALLOC_LockH>
 800a098:	b224      	sxth	r4, r4
 800a09a:	b22d      	sxth	r5, r5
 800a09c:	80c4      	strh	r4, [r0, #6]
 800a09e:	8085      	strh	r5, [r0, #4]
 800a0a0:	9000      	str	r0, [sp, #0]
 800a0a2:	f7f9 fa4f 	bl	8003544 <LCD_SetClipRectMax>
 800a0a6:	9b00      	ldr	r3, [sp, #0]
 800a0a8:	6958      	ldr	r0, [r3, #20]
 800a0aa:	b180      	cbz	r0, 800a0ce <GUI_MEMDEV_SetOrg+0x4a>
 800a0ac:	f7f7 ffd0 	bl	8002050 <GUI_ALLOC_LockH>
 800a0b0:	9b00      	ldr	r3, [sp, #0]
 800a0b2:	9001      	str	r0, [sp, #4]
 800a0b4:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 800a0b8:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 800a0bc:	8082      	strh	r2, [r0, #4]
 800a0be:	80c3      	strh	r3, [r0, #6]
 800a0c0:	b112      	cbz	r2, 800a0c8 <GUI_MEMDEV_SetOrg+0x44>
 800a0c2:	b10b      	cbz	r3, 800a0c8 <GUI_MEMDEV_SetOrg+0x44>
 800a0c4:	8005      	strh	r5, [r0, #0]
 800a0c6:	8044      	strh	r4, [r0, #2]
 800a0c8:	a801      	add	r0, sp, #4
 800a0ca:	f7f7 ffcf 	bl	800206c <GUI_ALLOC_UnlockH>
 800a0ce:	4668      	mov	r0, sp
 800a0d0:	f7f7 ffcc 	bl	800206c <GUI_ALLOC_UnlockH>
 800a0d4:	b003      	add	sp, #12
 800a0d6:	bd30      	pop	{r4, r5, pc}
 800a0d8:	20000014 	.word	0x20000014

0800a0dc <_CreateStaticDevice>:
 800a0dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a0e0:	b087      	sub	sp, #28
 800a0e2:	4607      	mov	r7, r0
 800a0e4:	f7f7 ffb4 	bl	8002050 <GUI_ALLOC_LockH>
 800a0e8:	f9b0 9000 	ldrsh.w	r9, [r0]
 800a0ec:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 800a0f0:	f10d 0818 	add.w	r8, sp, #24
 800a0f4:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 800a0f8:	f9b0 b006 	ldrsh.w	fp, [r0, #6]
 800a0fc:	f848 0d04 	str.w	r0, [r8, #-4]!
 800a100:	ebc9 0606 	rsb	r6, r9, r6
 800a104:	f8d0 a024 	ldr.w	sl, [r0, #36]	@ 0x24
 800a108:	3601      	adds	r6, #1
 800a10a:	4640      	mov	r0, r8
 800a10c:	f7f7 ffae 	bl	800206c <GUI_ALLOC_UnlockH>
 800a110:	ebc5 040b 	rsb	r4, r5, fp
 800a114:	2e00      	cmp	r6, #0
 800a116:	f104 0401 	add.w	r4, r4, #1
 800a11a:	dd4c      	ble.n	800a1b6 <_CreateStaticDevice+0xda>
 800a11c:	2c00      	cmp	r4, #0
 800a11e:	dd4a      	ble.n	800a1b6 <_CreateStaticDevice+0xda>
 800a120:	f1ba 0f00 	cmp.w	sl, #0
 800a124:	d049      	beq.n	800a1ba <_CreateStaticDevice+0xde>
 800a126:	4650      	mov	r0, sl
 800a128:	f7f7 ff92 	bl	8002050 <GUI_ALLOC_LockH>
 800a12c:	ab06      	add	r3, sp, #24
 800a12e:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 800a132:	f843 0d08 	str.w	r0, [r3, #-8]!
 800a136:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 800a13a:	4618      	mov	r0, r3
 800a13c:	f7f7 ff96 	bl	800206c <GUI_ALLOC_UnlockH>
 800a140:	454e      	cmp	r6, r9
 800a142:	d101      	bne.n	800a148 <_CreateStaticDevice+0x6c>
 800a144:	42ac      	cmp	r4, r5
 800a146:	d031      	beq.n	800a1ac <_CreateStaticDevice+0xd0>
 800a148:	462a      	mov	r2, r5
 800a14a:	4649      	mov	r1, r9
 800a14c:	4650      	mov	r0, sl
 800a14e:	f7ff ff99 	bl	800a084 <GUI_MEMDEV_SetOrg>
 800a152:	e02b      	b.n	800a1ac <_CreateStaticDevice+0xd0>
 800a154:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a156:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800a15a:	6283      	str	r3, [r0, #40]	@ 0x28
 800a15c:	4640      	mov	r0, r8
 800a15e:	f7f7 ff85 	bl	800206c <GUI_ALLOC_UnlockH>
 800a162:	4628      	mov	r0, r5
 800a164:	f7ff fe02 	bl	8009d6c <GUI_MEMDEV_Select>
 800a168:	4680      	mov	r8, r0
 800a16a:	4650      	mov	r0, sl
 800a16c:	f000 fa3c 	bl	800a5e8 <GUI__AlphaPreserveTrans>
 800a170:	4628      	mov	r0, r5
 800a172:	f7ff ff49 	bl	800a008 <GUI_MEMDEV_GetDataPtr>
 800a176:	fb04 f206 	mul.w	r2, r4, r6
 800a17a:	4b2b      	ldr	r3, [pc, #172]	@ (800a228 <_CreateStaticDevice+0x14c>)
 800a17c:	492b      	ldr	r1, [pc, #172]	@ (800a22c <_CreateStaticDevice+0x150>)
 800a17e:	681b      	ldr	r3, [r3, #0]
 800a180:	0092      	lsls	r2, r2, #2
 800a182:	7809      	ldrb	r1, [r1, #0]
 800a184:	4c2a      	ldr	r4, [pc, #168]	@ (800a230 <_CreateStaticDevice+0x154>)
 800a186:	4d2b      	ldr	r5, [pc, #172]	@ (800a234 <_CreateStaticDevice+0x158>)
 800a188:	4798      	blx	r3
 800a18a:	4638      	mov	r0, r7
 800a18c:	6826      	ldr	r6, [r4, #0]
 800a18e:	602f      	str	r7, [r5, #0]
 800a190:	f7fd f8b2 	bl	80072f8 <WM_GetWindowOrgX>
 800a194:	6020      	str	r0, [r4, #0]
 800a196:	4638      	mov	r0, r7
 800a198:	f7fc fe14 	bl	8006dc4 <WM__Paint1>
 800a19c:	2000      	movs	r0, #0
 800a19e:	6026      	str	r6, [r4, #0]
 800a1a0:	6028      	str	r0, [r5, #0]
 800a1a2:	f000 fa21 	bl	800a5e8 <GUI__AlphaPreserveTrans>
 800a1a6:	4640      	mov	r0, r8
 800a1a8:	f7ff fde0 	bl	8009d6c <GUI_MEMDEV_Select>
 800a1ac:	4638      	mov	r0, r7
 800a1ae:	f7f7 ff45 	bl	800203c <GUI_ALLOC_h2p>
 800a1b2:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 800a1b4:	e035      	b.n	800a222 <_CreateStaticDevice+0x146>
 800a1b6:	2000      	movs	r0, #0
 800a1b8:	e033      	b.n	800a222 <_CreateStaticDevice+0x146>
 800a1ba:	f7fd f82b 	bl	8007214 <WM_GetDesktopWindow>
 800a1be:	4287      	cmp	r7, r0
 800a1c0:	d112      	bne.n	800a1e8 <_CreateStaticDevice+0x10c>
 800a1c2:	f7f9 fb61 	bl	8003888 <LCD_GetXSize>
 800a1c6:	4682      	mov	sl, r0
 800a1c8:	f7f9 fb66 	bl	8003898 <LCD_GetYSize>
 800a1cc:	4556      	cmp	r6, sl
 800a1ce:	dc02      	bgt.n	800a1d6 <_CreateStaticDevice+0xfa>
 800a1d0:	4284      	cmp	r4, r0
 800a1d2:	dd09      	ble.n	800a1e8 <_CreateStaticDevice+0x10c>
 800a1d4:	e000      	b.n	800a1d8 <_CreateStaticDevice+0xfc>
 800a1d6:	4656      	mov	r6, sl
 800a1d8:	4284      	cmp	r4, r0
 800a1da:	bfa8      	it	ge
 800a1dc:	4604      	movge	r4, r0
 800a1de:	4631      	mov	r1, r6
 800a1e0:	4622      	mov	r2, r4
 800a1e2:	4638      	mov	r0, r7
 800a1e4:	f7fd fa02 	bl	80075ec <WM_SetSize>
 800a1e8:	4b13      	ldr	r3, [pc, #76]	@ (800a238 <_CreateStaticDevice+0x15c>)
 800a1ea:	f04f 0a01 	mov.w	sl, #1
 800a1ee:	9302      	str	r3, [sp, #8]
 800a1f0:	4b12      	ldr	r3, [pc, #72]	@ (800a23c <_CreateStaticDevice+0x160>)
 800a1f2:	4629      	mov	r1, r5
 800a1f4:	9301      	str	r3, [sp, #4]
 800a1f6:	4632      	mov	r2, r6
 800a1f8:	4623      	mov	r3, r4
 800a1fa:	f8cd a000 	str.w	sl, [sp]
 800a1fe:	4648      	mov	r0, r9
 800a200:	f7ff fcae 	bl	8009b60 <GUI_MEMDEV__CreateFixed>
 800a204:	4605      	mov	r5, r0
 800a206:	4638      	mov	r0, r7
 800a208:	f7f7 ff22 	bl	8002050 <GUI_ALLOC_LockH>
 800a20c:	9005      	str	r0, [sp, #20]
 800a20e:	6245      	str	r5, [r0, #36]	@ 0x24
 800a210:	2d00      	cmp	r5, #0
 800a212:	d19f      	bne.n	800a154 <_CreateStaticDevice+0x78>
 800a214:	4640      	mov	r0, r8
 800a216:	f7f7 ff29 	bl	800206c <GUI_ALLOC_UnlockH>
 800a21a:	4638      	mov	r0, r7
 800a21c:	f7fc fdd2 	bl	8006dc4 <WM__Paint1>
 800a220:	4628      	mov	r0, r5
 800a222:	b007      	add	sp, #28
 800a224:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a228:	20000024 	.word	0x20000024
 800a22c:	200000b4 	.word	0x200000b4
 800a230:	20002bf8 	.word	0x20002bf8
 800a234:	20002ca0 	.word	0x20002ca0
 800a238:	0800bfe8 	.word	0x0800bfe8
 800a23c:	0800c000 	.word	0x0800c000

0800a240 <GUI_MEMDEV_Paint1Static>:
 800a240:	b538      	push	{r3, r4, r5, lr}
 800a242:	4605      	mov	r5, r0
 800a244:	2405      	movs	r4, #5
 800a246:	4628      	mov	r0, r5
 800a248:	f7ff ff48 	bl	800a0dc <_CreateStaticDevice>
 800a24c:	b910      	cbnz	r0, 800a254 <GUI_MEMDEV_Paint1Static+0x14>
 800a24e:	3c01      	subs	r4, #1
 800a250:	d1f9      	bne.n	800a246 <GUI_MEMDEV_Paint1Static+0x6>
 800a252:	bd38      	pop	{r3, r4, r5, pc}
 800a254:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a258:	f000 b904 	b.w	800a464 <GUI_MEMDEV_Write>

0800a25c <GUI_USAGE_BM_AddPixel>:
 800a25c:	f9b0 3000 	ldrsh.w	r3, [r0]
 800a260:	1ac9      	subs	r1, r1, r3
 800a262:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800a266:	1ad2      	subs	r2, r2, r3
 800a268:	6903      	ldr	r3, [r0, #16]
 800a26a:	435a      	muls	r2, r3
 800a26c:	3214      	adds	r2, #20
 800a26e:	eb02 02e1 	add.w	r2, r2, r1, asr #3
 800a272:	2380      	movs	r3, #128	@ 0x80
 800a274:	f001 0107 	and.w	r1, r1, #7
 800a278:	fa43 f101 	asr.w	r1, r3, r1
 800a27c:	5c83      	ldrb	r3, [r0, r2]
 800a27e:	4319      	orrs	r1, r3
 800a280:	5481      	strb	r1, [r0, r2]
 800a282:	4770      	bx	lr

0800a284 <GUI_USAGE_BM_GetNextDirty>:
 800a284:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800a288:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a28a:	4293      	cmp	r3, r2
 800a28c:	dd44      	ble.n	800a318 <GUI_USAGE_BM_GetNextDirty+0x94>
 800a28e:	680c      	ldr	r4, [r1, #0]
 800a290:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 800a294:	42b4      	cmp	r4, r6
 800a296:	da3f      	bge.n	800a318 <GUI_USAGE_BM_GetNextDirty+0x94>
 800a298:	10e3      	asrs	r3, r4, #3
 800a29a:	461d      	mov	r5, r3
 800a29c:	6907      	ldr	r7, [r0, #16]
 800a29e:	fb07 3202 	mla	r2, r7, r2, r3
 800a2a2:	1e73      	subs	r3, r6, #1
 800a2a4:	ebc5 03e3 	rsb	r3, r5, r3, asr #3
 800a2a8:	f102 0515 	add.w	r5, r2, #21
 800a2ac:	3214      	adds	r2, #20
 800a2ae:	5c82      	ldrb	r2, [r0, r2]
 800a2b0:	4405      	add	r5, r0
 800a2b2:	f004 0007 	and.w	r0, r4, #7
 800a2b6:	4082      	lsls	r2, r0
 800a2b8:	b2d2      	uxtb	r2, r2
 800a2ba:	b93a      	cbnz	r2, 800a2cc <GUI_USAGE_BM_GetNextDirty+0x48>
 800a2bc:	b373      	cbz	r3, 800a31c <GUI_USAGE_BM_GetNextDirty+0x98>
 800a2be:	3408      	adds	r4, #8
 800a2c0:	f815 2b01 	ldrb.w	r2, [r5], #1
 800a2c4:	3b01      	subs	r3, #1
 800a2c6:	f024 0407 	bic.w	r4, r4, #7
 800a2ca:	e7f6      	b.n	800a2ba <GUI_USAGE_BM_GetNextDirty+0x36>
 800a2cc:	0617      	lsls	r7, r2, #24
 800a2ce:	d403      	bmi.n	800a2d8 <GUI_USAGE_BM_GetNextDirty+0x54>
 800a2d0:	0052      	lsls	r2, r2, #1
 800a2d2:	b2d2      	uxtb	r2, r2
 800a2d4:	3401      	adds	r4, #1
 800a2d6:	e7f9      	b.n	800a2cc <GUI_USAGE_BM_GetNextDirty+0x48>
 800a2d8:	2aff      	cmp	r2, #255	@ 0xff
 800a2da:	d006      	beq.n	800a2ea <GUI_USAGE_BM_GetNextDirty+0x66>
 800a2dc:	4620      	mov	r0, r4
 800a2de:	0656      	lsls	r6, r2, #25
 800a2e0:	d504      	bpl.n	800a2ec <GUI_USAGE_BM_GetNextDirty+0x68>
 800a2e2:	0052      	lsls	r2, r2, #1
 800a2e4:	b2d2      	uxtb	r2, r2
 800a2e6:	3001      	adds	r0, #1
 800a2e8:	e7f9      	b.n	800a2de <GUI_USAGE_BM_GetNextDirty+0x5a>
 800a2ea:	1de0      	adds	r0, r4, #7
 800a2ec:	f000 0207 	and.w	r2, r0, #7
 800a2f0:	2a07      	cmp	r2, #7
 800a2f2:	d10d      	bne.n	800a310 <GUI_USAGE_BM_GetNextDirty+0x8c>
 800a2f4:	3b01      	subs	r3, #1
 800a2f6:	d40b      	bmi.n	800a310 <GUI_USAGE_BM_GetNextDirty+0x8c>
 800a2f8:	f815 2b01 	ldrb.w	r2, [r5], #1
 800a2fc:	2aff      	cmp	r2, #255	@ 0xff
 800a2fe:	d101      	bne.n	800a304 <GUI_USAGE_BM_GetNextDirty+0x80>
 800a300:	3008      	adds	r0, #8
 800a302:	e7f7      	b.n	800a2f4 <GUI_USAGE_BM_GetNextDirty+0x70>
 800a304:	0613      	lsls	r3, r2, #24
 800a306:	d503      	bpl.n	800a310 <GUI_USAGE_BM_GetNextDirty+0x8c>
 800a308:	0052      	lsls	r2, r2, #1
 800a30a:	b2d2      	uxtb	r2, r2
 800a30c:	3001      	adds	r0, #1
 800a30e:	e7f9      	b.n	800a304 <GUI_USAGE_BM_GetNextDirty+0x80>
 800a310:	1b00      	subs	r0, r0, r4
 800a312:	600c      	str	r4, [r1, #0]
 800a314:	3001      	adds	r0, #1
 800a316:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a318:	2000      	movs	r0, #0
 800a31a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a31c:	4618      	mov	r0, r3
 800a31e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a320 <_GUI_USAGE_BM_Delete>:
 800a320:	f7f7 bed0 	b.w	80020c4 <GUI_ALLOC_Free>

0800a324 <GUI_USAGE_BM_Clear>:
 800a324:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800a328:	6902      	ldr	r2, [r0, #16]
 800a32a:	2100      	movs	r1, #0
 800a32c:	435a      	muls	r2, r3
 800a32e:	3014      	adds	r0, #20
 800a330:	f000 bf48 	b.w	800b1c4 <memset>

0800a334 <GUI_USAGE_BM_AddHLine>:
 800a334:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a336:	f9b0 4000 	ldrsh.w	r4, [r0]
 800a33a:	1b09      	subs	r1, r1, r4
 800a33c:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800a340:	42a1      	cmp	r1, r4
 800a342:	da32      	bge.n	800a3aa <GUI_USAGE_BM_AddHLine+0x76>
 800a344:	440b      	add	r3, r1
 800a346:	3b01      	subs	r3, #1
 800a348:	43df      	mvns	r7, r3
 800a34a:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 800a34e:	10ce      	asrs	r6, r1, #3
 800a350:	1b52      	subs	r2, r2, r5
 800a352:	6905      	ldr	r5, [r0, #16]
 800a354:	f001 0407 	and.w	r4, r1, #7
 800a358:	fb05 6502 	mla	r5, r5, r2, r6
 800a35c:	21ff      	movs	r1, #255	@ 0xff
 800a35e:	f007 0707 	and.w	r7, r7, #7
 800a362:	3514      	adds	r5, #20
 800a364:	fa41 f404 	asr.w	r4, r1, r4
 800a368:	fa01 f707 	lsl.w	r7, r1, r7
 800a36c:	ebd6 06e3 	rsbs	r6, r6, r3, asr #3
 800a370:	eb00 0205 	add.w	r2, r0, r5
 800a374:	b2e4      	uxtb	r4, r4
 800a376:	b2ff      	uxtb	r7, r7
 800a378:	f810 e005 	ldrb.w	lr, [r0, r5]
 800a37c:	d104      	bne.n	800a388 <GUI_USAGE_BM_AddHLine+0x54>
 800a37e:	403c      	ands	r4, r7
 800a380:	ea4e 0404 	orr.w	r4, lr, r4
 800a384:	5544      	strb	r4, [r0, r5]
 800a386:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a388:	ea44 040e 	orr.w	r4, r4, lr
 800a38c:	5544      	strb	r4, [r0, r5]
 800a38e:	1e75      	subs	r5, r6, #1
 800a390:	2d00      	cmp	r5, #0
 800a392:	f102 0301 	add.w	r3, r2, #1
 800a396:	dd05      	ble.n	800a3a4 <GUI_USAGE_BM_AddHLine+0x70>
 800a398:	4618      	mov	r0, r3
 800a39a:	462a      	mov	r2, r5
 800a39c:	f000 ff12 	bl	800b1c4 <memset>
 800a3a0:	4603      	mov	r3, r0
 800a3a2:	442b      	add	r3, r5
 800a3a4:	781c      	ldrb	r4, [r3, #0]
 800a3a6:	433c      	orrs	r4, r7
 800a3a8:	701c      	strb	r4, [r3, #0]
 800a3aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800a3ac <GUI_USAGE_BM_Create>:
 800a3ac:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a3b0:	f102 040f 	add.w	r4, r2, #15
 800a3b4:	1124      	asrs	r4, r4, #4
 800a3b6:	0064      	lsls	r4, r4, #1
 800a3b8:	4680      	mov	r8, r0
 800a3ba:	fb03 f004 	mul.w	r0, r3, r4
 800a3be:	3014      	adds	r0, #20
 800a3c0:	460f      	mov	r7, r1
 800a3c2:	4616      	mov	r6, r2
 800a3c4:	461d      	mov	r5, r3
 800a3c6:	f7f8 f81d 	bl	8002404 <GUI_ALLOC_AllocZero>
 800a3ca:	4681      	mov	r9, r0
 800a3cc:	b188      	cbz	r0, 800a3f2 <GUI_USAGE_BM_Create+0x46>
 800a3ce:	f7f7 fe3f 	bl	8002050 <GUI_ALLOC_LockH>
 800a3d2:	4603      	mov	r3, r0
 800a3d4:	4a09      	ldr	r2, [pc, #36]	@ (800a3fc <GUI_USAGE_BM_Create+0x50>)
 800a3d6:	a802      	add	r0, sp, #8
 800a3d8:	609a      	str	r2, [r3, #8]
 800a3da:	2201      	movs	r2, #1
 800a3dc:	f840 3d04 	str.w	r3, [r0, #-4]!
 800a3e0:	809e      	strh	r6, [r3, #4]
 800a3e2:	f8a3 8000 	strh.w	r8, [r3]
 800a3e6:	805f      	strh	r7, [r3, #2]
 800a3e8:	80dd      	strh	r5, [r3, #6]
 800a3ea:	819a      	strh	r2, [r3, #12]
 800a3ec:	611c      	str	r4, [r3, #16]
 800a3ee:	f7f7 fe3d 	bl	800206c <GUI_ALLOC_UnlockH>
 800a3f2:	4648      	mov	r0, r9
 800a3f4:	b003      	add	sp, #12
 800a3f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a3fa:	bf00      	nop
 800a3fc:	0800bfd0 	.word	0x0800bfd0

0800a400 <GUI_MEMDEV_WriteAt>:
 800a400:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a402:	460c      	mov	r4, r1
 800a404:	4615      	mov	r5, r2
 800a406:	4606      	mov	r6, r0
 800a408:	b340      	cbz	r0, 800a45c <GUI_MEMDEV_WriteAt+0x5c>
 800a40a:	f7f7 fe21 	bl	8002050 <GUI_ALLOC_LockH>
 800a40e:	4b14      	ldr	r3, [pc, #80]	@ (800a460 <GUI_MEMDEV_WriteAt+0x60>)
 800a410:	9001      	str	r0, [sp, #4]
 800a412:	429c      	cmp	r4, r3
 800a414:	8903      	ldrh	r3, [r0, #8]
 800a416:	bf08      	it	eq
 800a418:	f9b0 4004 	ldrsheq.w	r4, [r0, #4]
 800a41c:	f103 33ff 	add.w	r3, r3, #4294967295
 800a420:	4423      	add	r3, r4
 800a422:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a426:	8943      	ldrh	r3, [r0, #10]
 800a428:	bf08      	it	eq
 800a42a:	f9b0 5006 	ldrsheq.w	r5, [r0, #6]
 800a42e:	3b01      	subs	r3, #1
 800a430:	442b      	add	r3, r5
 800a432:	a801      	add	r0, sp, #4
 800a434:	f8ad 4008 	strh.w	r4, [sp, #8]
 800a438:	f8ad 500a 	strh.w	r5, [sp, #10]
 800a43c:	f8ad 300e 	strh.w	r3, [sp, #14]
 800a440:	f7f7 fe14 	bl	800206c <GUI_ALLOC_UnlockH>
 800a444:	a802      	add	r0, sp, #8
 800a446:	f7fc fc33 	bl	8006cb0 <WM__InitIVRSearch>
 800a44a:	b138      	cbz	r0, 800a45c <GUI_MEMDEV_WriteAt+0x5c>
 800a44c:	462a      	mov	r2, r5
 800a44e:	4621      	mov	r1, r4
 800a450:	4630      	mov	r0, r6
 800a452:	f7ff fb69 	bl	8009b28 <GUI_MEMDEV__WriteToActiveAt>
 800a456:	f7fc fb69 	bl	8006b2c <WM__GetNextIVR>
 800a45a:	e7f6      	b.n	800a44a <GUI_MEMDEV_WriteAt+0x4a>
 800a45c:	b004      	add	sp, #16
 800a45e:	bd70      	pop	{r4, r5, r6, pc}
 800a460:	fffff001 	.word	0xfffff001

0800a464 <GUI_MEMDEV_Write>:
 800a464:	4a01      	ldr	r2, [pc, #4]	@ (800a46c <GUI_MEMDEV_Write+0x8>)
 800a466:	4611      	mov	r1, r2
 800a468:	f7ff bfca 	b.w	800a400 <GUI_MEMDEV_WriteAt>
 800a46c:	fffff001 	.word	0xfffff001

0800a470 <_cbInvalidateOne>:
 800a470:	f7fc b9b1 	b.w	80067d6 <WM_InvalidateWindow>

0800a474 <WM_BringToTop>:
 800a474:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a476:	4605      	mov	r5, r0
 800a478:	b390      	cbz	r0, 800a4e0 <WM_BringToTop+0x6c>
 800a47a:	f7f7 fde9 	bl	8002050 <GUI_ALLOC_LockH>
 800a47e:	ac02      	add	r4, sp, #8
 800a480:	4603      	mov	r3, r0
 800a482:	f844 0d08 	str.w	r0, [r4, #-8]!
 800a486:	6a00      	ldr	r0, [r0, #32]
 800a488:	b908      	cbnz	r0, 800a48e <WM_BringToTop+0x1a>
 800a48a:	4620      	mov	r0, r4
 800a48c:	e00e      	b.n	800a4ac <WM_BringToTop+0x38>
 800a48e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a490:	071a      	lsls	r2, r3, #28
 800a492:	d411      	bmi.n	800a4b8 <WM_BringToTop+0x44>
 800a494:	f7f7 fddc 	bl	8002050 <GUI_ALLOC_LockH>
 800a498:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a49a:	ae02      	add	r6, sp, #8
 800a49c:	071b      	lsls	r3, r3, #28
 800a49e:	f846 0d04 	str.w	r0, [r6, #-4]!
 800a4a2:	d506      	bpl.n	800a4b2 <WM_BringToTop+0x3e>
 800a4a4:	4620      	mov	r0, r4
 800a4a6:	f7f7 fde1 	bl	800206c <GUI_ALLOC_UnlockH>
 800a4aa:	4630      	mov	r0, r6
 800a4ac:	f7f7 fdde 	bl	800206c <GUI_ALLOC_UnlockH>
 800a4b0:	e016      	b.n	800a4e0 <WM_BringToTop+0x6c>
 800a4b2:	4630      	mov	r0, r6
 800a4b4:	f7f7 fdda 	bl	800206c <GUI_ALLOC_UnlockH>
 800a4b8:	9b00      	ldr	r3, [sp, #0]
 800a4ba:	4620      	mov	r0, r4
 800a4bc:	699e      	ldr	r6, [r3, #24]
 800a4be:	f7f7 fdd5 	bl	800206c <GUI_ALLOC_UnlockH>
 800a4c2:	4628      	mov	r0, r5
 800a4c4:	f7fb ff74 	bl	80063b0 <WM__RemoveWindowFromList>
 800a4c8:	4631      	mov	r1, r6
 800a4ca:	4628      	mov	r0, r5
 800a4cc:	f7fb ff1a 	bl	8006304 <WM__InsertWindowIntoList>
 800a4d0:	4628      	mov	r0, r5
 800a4d2:	f7fc f980 	bl	80067d6 <WM_InvalidateWindow>
 800a4d6:	2200      	movs	r2, #0
 800a4d8:	4902      	ldr	r1, [pc, #8]	@ (800a4e4 <WM_BringToTop+0x70>)
 800a4da:	4628      	mov	r0, r5
 800a4dc:	f7fc fe7a 	bl	80071d4 <WM_ForEachDesc>
 800a4e0:	b002      	add	sp, #8
 800a4e2:	bd70      	pop	{r4, r5, r6, pc}
 800a4e4:	0800a471 	.word	0x0800a471

0800a4e8 <_GetNextChild>:
 800a4e8:	b538      	push	{r3, r4, r5, lr}
 800a4ea:	4605      	mov	r5, r0
 800a4ec:	460c      	mov	r4, r1
 800a4ee:	b921      	cbnz	r1, 800a4fa <_GetNextChild+0x12>
 800a4f0:	4628      	mov	r0, r5
 800a4f2:	f7f7 fda3 	bl	800203c <GUI_ALLOC_h2p>
 800a4f6:	69c0      	ldr	r0, [r0, #28]
 800a4f8:	e005      	b.n	800a506 <_GetNextChild+0x1e>
 800a4fa:	4608      	mov	r0, r1
 800a4fc:	f7f7 fd9e 	bl	800203c <GUI_ALLOC_h2p>
 800a500:	6a00      	ldr	r0, [r0, #32]
 800a502:	2800      	cmp	r0, #0
 800a504:	d0f4      	beq.n	800a4f0 <_GetNextChild+0x8>
 800a506:	42a0      	cmp	r0, r4
 800a508:	bf08      	it	eq
 800a50a:	2000      	moveq	r0, #0
 800a50c:	bd38      	pop	{r3, r4, r5, pc}
	...

0800a510 <WM_SetFocusOnNextChild>:
 800a510:	b570      	push	{r4, r5, r6, lr}
 800a512:	4606      	mov	r6, r0
 800a514:	b308      	cbz	r0, 800a55a <WM_SetFocusOnNextChild+0x4a>
 800a516:	f7fd f9f1 	bl	80078fc <WM__GetFocusedChild>
 800a51a:	4601      	mov	r1, r0
 800a51c:	4630      	mov	r0, r6
 800a51e:	f7ff ffe3 	bl	800a4e8 <_GetNextChild>
 800a522:	4605      	mov	r5, r0
 800a524:	4604      	mov	r4, r0
 800a526:	4620      	mov	r0, r4
 800a528:	f7fc ff48 	bl	80073bc <WM_IsFocusable>
 800a52c:	b938      	cbnz	r0, 800a53e <WM_SetFocusOnNextChild+0x2e>
 800a52e:	b1a4      	cbz	r4, 800a55a <WM_SetFocusOnNextChild+0x4a>
 800a530:	4621      	mov	r1, r4
 800a532:	4630      	mov	r0, r6
 800a534:	f7ff ffd8 	bl	800a4e8 <_GetNextChild>
 800a538:	4285      	cmp	r5, r0
 800a53a:	4604      	mov	r4, r0
 800a53c:	d1f3      	bne.n	800a526 <WM_SetFocusOnNextChild+0x16>
 800a53e:	b164      	cbz	r4, 800a55a <WM_SetFocusOnNextChild+0x4a>
 800a540:	4d07      	ldr	r5, [pc, #28]	@ (800a560 <WM_SetFocusOnNextChild+0x50>)
 800a542:	4620      	mov	r0, r4
 800a544:	682e      	ldr	r6, [r5, #0]
 800a546:	f7fc f809 	bl	800655c <WM__GetTopLevelLayer>
 800a54a:	1c43      	adds	r3, r0, #1
 800a54c:	d006      	beq.n	800a55c <WM_SetFocusOnNextChild+0x4c>
 800a54e:	6028      	str	r0, [r5, #0]
 800a550:	4620      	mov	r0, r4
 800a552:	f7fc fffd 	bl	8007550 <WM_SetFocus>
 800a556:	602e      	str	r6, [r5, #0]
 800a558:	b100      	cbz	r0, 800a55c <WM_SetFocusOnNextChild+0x4c>
 800a55a:	2400      	movs	r4, #0
 800a55c:	4620      	mov	r0, r4
 800a55e:	bd70      	pop	{r4, r5, r6, pc}
 800a560:	20002c74 	.word	0x20002c74

0800a564 <_GetPrevChild>:
 800a564:	b510      	push	{r4, lr}
 800a566:	4604      	mov	r4, r0
 800a568:	b918      	cbnz	r0, 800a572 <_GetPrevChild+0xe>
 800a56a:	4620      	mov	r0, r4
 800a56c:	f7fd f97c 	bl	8007868 <WM__GetLastSibling>
 800a570:	e003      	b.n	800a57a <_GetPrevChild+0x16>
 800a572:	f7fd f985 	bl	8007880 <WM__GetPrevSibling>
 800a576:	2800      	cmp	r0, #0
 800a578:	d0f7      	beq.n	800a56a <_GetPrevChild+0x6>
 800a57a:	42a0      	cmp	r0, r4
 800a57c:	bf08      	it	eq
 800a57e:	2000      	moveq	r0, #0
 800a580:	bd10      	pop	{r4, pc}

0800a582 <WM_SetFocusOnPrevChild>:
 800a582:	b538      	push	{r3, r4, r5, lr}
 800a584:	b908      	cbnz	r0, 800a58a <WM_SetFocusOnPrevChild+0x8>
 800a586:	2400      	movs	r4, #0
 800a588:	e015      	b.n	800a5b6 <WM_SetFocusOnPrevChild+0x34>
 800a58a:	f7fd f9b7 	bl	80078fc <WM__GetFocusedChild>
 800a58e:	f7ff ffe9 	bl	800a564 <_GetPrevChild>
 800a592:	4605      	mov	r5, r0
 800a594:	4604      	mov	r4, r0
 800a596:	4620      	mov	r0, r4
 800a598:	f7fc ff10 	bl	80073bc <WM_IsFocusable>
 800a59c:	b930      	cbnz	r0, 800a5ac <WM_SetFocusOnPrevChild+0x2a>
 800a59e:	b12c      	cbz	r4, 800a5ac <WM_SetFocusOnPrevChild+0x2a>
 800a5a0:	4620      	mov	r0, r4
 800a5a2:	f7ff ffdf 	bl	800a564 <_GetPrevChild>
 800a5a6:	4285      	cmp	r5, r0
 800a5a8:	4604      	mov	r4, r0
 800a5aa:	d1f4      	bne.n	800a596 <WM_SetFocusOnPrevChild+0x14>
 800a5ac:	4620      	mov	r0, r4
 800a5ae:	f7fc ffcf 	bl	8007550 <WM_SetFocus>
 800a5b2:	2800      	cmp	r0, #0
 800a5b4:	d1e7      	bne.n	800a586 <WM_SetFocusOnPrevChild+0x4>
 800a5b6:	4620      	mov	r0, r4
 800a5b8:	bd38      	pop	{r3, r4, r5, pc}

0800a5ba <_Color2Index_8888>:
 800a5ba:	4770      	bx	lr

0800a5bc <_GetIndexMask_8888>:
 800a5bc:	f04f 30ff 	mov.w	r0, #4294967295
 800a5c0:	4770      	bx	lr

0800a5c2 <_Color2IndexBulk>:
 800a5c2:	b510      	push	{r4, lr}
 800a5c4:	f850 4b04 	ldr.w	r4, [r0], #4
 800a5c8:	3a01      	subs	r2, #1
 800a5ca:	600c      	str	r4, [r1, #0]
 800a5cc:	4419      	add	r1, r3
 800a5ce:	d1f9      	bne.n	800a5c4 <_Color2IndexBulk+0x2>
 800a5d0:	bd10      	pop	{r4, pc}

0800a5d2 <_Index2ColorBulk>:
 800a5d2:	b510      	push	{r4, lr}
 800a5d4:	6804      	ldr	r4, [r0, #0]
 800a5d6:	3a01      	subs	r2, #1
 800a5d8:	f841 4b04 	str.w	r4, [r1], #4
 800a5dc:	4418      	add	r0, r3
 800a5de:	d1f9      	bne.n	800a5d4 <_Index2ColorBulk+0x2>
 800a5e0:	bd10      	pop	{r4, pc}

0800a5e2 <LCD_Index2Color_8888>:
 800a5e2:	4770      	bx	lr

0800a5e4 <LCD_Index2Color_888>:
 800a5e4:	4770      	bx	lr
	...

0800a5e8 <GUI__AlphaPreserveTrans>:
 800a5e8:	b510      	push	{r4, lr}
 800a5ea:	4b07      	ldr	r3, [pc, #28]	@ (800a608 <GUI__AlphaPreserveTrans+0x20>)
 800a5ec:	781c      	ldrb	r4, [r3, #0]
 800a5ee:	b120      	cbz	r0, 800a5fa <GUI__AlphaPreserveTrans+0x12>
 800a5f0:	2201      	movs	r2, #1
 800a5f2:	701a      	strb	r2, [r3, #0]
 800a5f4:	f04f 30ff 	mov.w	r0, #4294967295
 800a5f8:	e002      	b.n	800a600 <GUI__AlphaPreserveTrans+0x18>
 800a5fa:	7018      	strb	r0, [r3, #0]
 800a5fc:	f06f 407f 	mvn.w	r0, #4278190080	@ 0xff000000
 800a600:	f7ff f970 	bl	80098e4 <LCD_AA_SetAndMask>
 800a604:	4620      	mov	r0, r4
 800a606:	bd10      	pop	{r4, pc}
 800a608:	20002c20 	.word	0x20002c20

0800a60c <_GetDevData>:
 800a60c:	2901      	cmp	r1, #1
 800a60e:	4802      	ldr	r0, [pc, #8]	@ (800a618 <_GetDevData+0xc>)
 800a610:	bf18      	it	ne
 800a612:	2000      	movne	r0, #0
 800a614:	4770      	bx	lr
 800a616:	bf00      	nop
 800a618:	0800c000 	.word	0x0800c000

0800a61c <_GetDevFunc>:
 800a61c:	2916      	cmp	r1, #22
 800a61e:	4802      	ldr	r0, [pc, #8]	@ (800a628 <_GetDevFunc+0xc>)
 800a620:	bf18      	it	ne
 800a622:	2000      	movne	r0, #0
 800a624:	4770      	bx	lr
 800a626:	bf00      	nop
 800a628:	0800b005 	.word	0x0800b005

0800a62c <_GetDevProp>:
 800a62c:	2908      	cmp	r1, #8
 800a62e:	bf0c      	ite	eq
 800a630:	2020      	moveq	r0, #32
 800a632:	2000      	movne	r0, #0
 800a634:	4770      	bx	lr

0800a636 <_SetOrg>:
 800a636:	6800      	ldr	r0, [r0, #0]
 800a638:	68c3      	ldr	r3, [r0, #12]
 800a63a:	6a1b      	ldr	r3, [r3, #32]
 800a63c:	4718      	bx	r3

0800a63e <_GetRect>:
 800a63e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a640:	6880      	ldr	r0, [r0, #8]
 800a642:	460d      	mov	r5, r1
 800a644:	f7f7 fd04 	bl	8002050 <GUI_ALLOC_LockH>
 800a648:	4602      	mov	r2, r0
 800a64a:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800a64e:	8914      	ldrh	r4, [r2, #8]
 800a650:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
 800a654:	802b      	strh	r3, [r5, #0]
 800a656:	441c      	add	r4, r3
 800a658:	8953      	ldrh	r3, [r2, #10]
 800a65a:	a802      	add	r0, sp, #8
 800a65c:	440b      	add	r3, r1
 800a65e:	3b01      	subs	r3, #1
 800a660:	3c01      	subs	r4, #1
 800a662:	f840 2d04 	str.w	r2, [r0, #-4]!
 800a666:	8069      	strh	r1, [r5, #2]
 800a668:	80ac      	strh	r4, [r5, #4]
 800a66a:	80eb      	strh	r3, [r5, #6]
 800a66c:	f7f7 fcfe 	bl	800206c <GUI_ALLOC_UnlockH>
 800a670:	b003      	add	sp, #12
 800a672:	bd30      	pop	{r4, r5, pc}

0800a674 <_XY2PTR>:
 800a674:	4b0e      	ldr	r3, [pc, #56]	@ (800a6b0 <_XY2PTR+0x3c>)
 800a676:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a678:	681b      	ldr	r3, [r3, #0]
 800a67a:	4606      	mov	r6, r0
 800a67c:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 800a67e:	460d      	mov	r5, r1
 800a680:	f7f7 fce6 	bl	8002050 <GUI_ALLOC_LockH>
 800a684:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800a688:	68c4      	ldr	r4, [r0, #12]
 800a68a:	1a69      	subs	r1, r5, r1
 800a68c:	f9b0 5004 	ldrsh.w	r5, [r0, #4]
 800a690:	ab02      	add	r3, sp, #8
 800a692:	1b76      	subs	r6, r6, r5
 800a694:	00b6      	lsls	r6, r6, #2
 800a696:	3618      	adds	r6, #24
 800a698:	fb04 6501 	mla	r5, r4, r1, r6
 800a69c:	f843 0d04 	str.w	r0, [r3, #-4]!
 800a6a0:	1944      	adds	r4, r0, r5
 800a6a2:	4618      	mov	r0, r3
 800a6a4:	f7f7 fce2 	bl	800206c <GUI_ALLOC_UnlockH>
 800a6a8:	4620      	mov	r0, r4
 800a6aa:	b002      	add	sp, #8
 800a6ac:	bd70      	pop	{r4, r5, r6, pc}
 800a6ae:	bf00      	nop
 800a6b0:	20000014 	.word	0x20000014

0800a6b4 <_GetPixelIndex>:
 800a6b4:	b508      	push	{r3, lr}
 800a6b6:	4608      	mov	r0, r1
 800a6b8:	4611      	mov	r1, r2
 800a6ba:	f7ff ffdb 	bl	800a674 <_XY2PTR>
 800a6be:	6800      	ldr	r0, [r0, #0]
 800a6c0:	bd08      	pop	{r3, pc}
	...

0800a6c4 <_XorPixel>:
 800a6c4:	4b15      	ldr	r3, [pc, #84]	@ (800a71c <_XorPixel+0x58>)
 800a6c6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a6c8:	681b      	ldr	r3, [r3, #0]
 800a6ca:	4616      	mov	r6, r2
 800a6cc:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 800a6ce:	460d      	mov	r5, r1
 800a6d0:	f7f7 fcbe 	bl	8002050 <GUI_ALLOC_LockH>
 800a6d4:	4631      	mov	r1, r6
 800a6d6:	9000      	str	r0, [sp, #0]
 800a6d8:	4628      	mov	r0, r5
 800a6da:	f7ff ffcb 	bl	800a674 <_XY2PTR>
 800a6de:	9b00      	ldr	r3, [sp, #0]
 800a6e0:	4604      	mov	r4, r0
 800a6e2:	681b      	ldr	r3, [r3, #0]
 800a6e4:	691b      	ldr	r3, [r3, #16]
 800a6e6:	689b      	ldr	r3, [r3, #8]
 800a6e8:	4798      	blx	r3
 800a6ea:	6823      	ldr	r3, [r4, #0]
 800a6ec:	4058      	eors	r0, r3
 800a6ee:	9b00      	ldr	r3, [sp, #0]
 800a6f0:	6020      	str	r0, [r4, #0]
 800a6f2:	6958      	ldr	r0, [r3, #20]
 800a6f4:	b160      	cbz	r0, 800a710 <_XorPixel+0x4c>
 800a6f6:	f7f7 fcab 	bl	8002050 <GUI_ALLOC_LockH>
 800a6fa:	6883      	ldr	r3, [r0, #8]
 800a6fc:	ac02      	add	r4, sp, #8
 800a6fe:	f844 0d04 	str.w	r0, [r4, #-4]!
 800a702:	681b      	ldr	r3, [r3, #0]
 800a704:	4632      	mov	r2, r6
 800a706:	4629      	mov	r1, r5
 800a708:	4798      	blx	r3
 800a70a:	4620      	mov	r0, r4
 800a70c:	f7f7 fcae 	bl	800206c <GUI_ALLOC_UnlockH>
 800a710:	4668      	mov	r0, sp
 800a712:	f7f7 fcab 	bl	800206c <GUI_ALLOC_UnlockH>
 800a716:	b002      	add	sp, #8
 800a718:	bd70      	pop	{r4, r5, r6, pc}
 800a71a:	bf00      	nop
 800a71c:	20000014 	.word	0x20000014

0800a720 <_SetPixelIndex>:
 800a720:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a722:	461c      	mov	r4, r3
 800a724:	4b10      	ldr	r3, [pc, #64]	@ (800a768 <_SetPixelIndex+0x48>)
 800a726:	460d      	mov	r5, r1
 800a728:	681b      	ldr	r3, [r3, #0]
 800a72a:	4616      	mov	r6, r2
 800a72c:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 800a72e:	f7f7 fc8f 	bl	8002050 <GUI_ALLOC_LockH>
 800a732:	4631      	mov	r1, r6
 800a734:	9000      	str	r0, [sp, #0]
 800a736:	4628      	mov	r0, r5
 800a738:	f7ff ff9c 	bl	800a674 <_XY2PTR>
 800a73c:	9b00      	ldr	r3, [sp, #0]
 800a73e:	6004      	str	r4, [r0, #0]
 800a740:	6958      	ldr	r0, [r3, #20]
 800a742:	b160      	cbz	r0, 800a75e <_SetPixelIndex+0x3e>
 800a744:	f7f7 fc84 	bl	8002050 <GUI_ALLOC_LockH>
 800a748:	6883      	ldr	r3, [r0, #8]
 800a74a:	ac02      	add	r4, sp, #8
 800a74c:	f844 0d04 	str.w	r0, [r4, #-4]!
 800a750:	681b      	ldr	r3, [r3, #0]
 800a752:	4632      	mov	r2, r6
 800a754:	4629      	mov	r1, r5
 800a756:	4798      	blx	r3
 800a758:	4620      	mov	r0, r4
 800a75a:	f7f7 fc87 	bl	800206c <GUI_ALLOC_UnlockH>
 800a75e:	4668      	mov	r0, sp
 800a760:	f7f7 fc84 	bl	800206c <GUI_ALLOC_UnlockH>
 800a764:	b002      	add	sp, #8
 800a766:	bd70      	pop	{r4, r5, r6, pc}
 800a768:	20000014 	.word	0x20000014

0800a76c <_DrawVLine>:
 800a76c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a770:	4c2a      	ldr	r4, [pc, #168]	@ (800a81c <_DrawVLine+0xb0>)
 800a772:	461e      	mov	r6, r3
 800a774:	6823      	ldr	r3, [r4, #0]
 800a776:	4688      	mov	r8, r1
 800a778:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 800a77a:	4615      	mov	r5, r2
 800a77c:	f7f7 fc68 	bl	8002050 <GUI_ALLOC_LockH>
 800a780:	9000      	str	r0, [sp, #0]
 800a782:	6940      	ldr	r0, [r0, #20]
 800a784:	4627      	mov	r7, r4
 800a786:	b108      	cbz	r0, 800a78c <_DrawVLine+0x20>
 800a788:	f7f7 fc62 	bl	8002050 <GUI_ALLOC_LockH>
 800a78c:	9001      	str	r0, [sp, #4]
 800a78e:	4629      	mov	r1, r5
 800a790:	4640      	mov	r0, r8
 800a792:	f7ff ff6f 	bl	800a674 <_XY2PTR>
 800a796:	683b      	ldr	r3, [r7, #0]
 800a798:	4604      	mov	r4, r0
 800a79a:	7c19      	ldrb	r1, [r3, #16]
 800a79c:	9a00      	ldr	r2, [sp, #0]
 800a79e:	07c9      	lsls	r1, r1, #31
 800a7a0:	d51d      	bpl.n	800a7de <_DrawVLine+0x72>
 800a7a2:	6813      	ldr	r3, [r2, #0]
 800a7a4:	691b      	ldr	r3, [r3, #16]
 800a7a6:	689b      	ldr	r3, [r3, #8]
 800a7a8:	4798      	blx	r3
 800a7aa:	4607      	mov	r7, r0
 800a7ac:	9801      	ldr	r0, [sp, #4]
 800a7ae:	b120      	cbz	r0, 800a7ba <_DrawVLine+0x4e>
 800a7b0:	6883      	ldr	r3, [r0, #8]
 800a7b2:	462a      	mov	r2, r5
 800a7b4:	681b      	ldr	r3, [r3, #0]
 800a7b6:	4641      	mov	r1, r8
 800a7b8:	4798      	blx	r3
 800a7ba:	6823      	ldr	r3, [r4, #0]
 800a7bc:	3501      	adds	r5, #1
 800a7be:	407b      	eors	r3, r7
 800a7c0:	6023      	str	r3, [r4, #0]
 800a7c2:	9b00      	ldr	r3, [sp, #0]
 800a7c4:	42b5      	cmp	r5, r6
 800a7c6:	68db      	ldr	r3, [r3, #12]
 800a7c8:	441c      	add	r4, r3
 800a7ca:	ddef      	ble.n	800a7ac <_DrawVLine+0x40>
 800a7cc:	4668      	mov	r0, sp
 800a7ce:	f7f7 fc4d 	bl	800206c <GUI_ALLOC_UnlockH>
 800a7d2:	9b01      	ldr	r3, [sp, #4]
 800a7d4:	b1f3      	cbz	r3, 800a814 <_DrawVLine+0xa8>
 800a7d6:	a801      	add	r0, sp, #4
 800a7d8:	f7f7 fc48 	bl	800206c <GUI_ALLOC_UnlockH>
 800a7dc:	e01a      	b.n	800a814 <_DrawVLine+0xa8>
 800a7de:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a7e0:	68d7      	ldr	r7, [r2, #12]
 800a7e2:	f8d3 9000 	ldr.w	r9, [r3]
 800a7e6:	9b01      	ldr	r3, [sp, #4]
 800a7e8:	b163      	cbz	r3, 800a804 <_DrawVLine+0x98>
 800a7ea:	9801      	ldr	r0, [sp, #4]
 800a7ec:	462a      	mov	r2, r5
 800a7ee:	6883      	ldr	r3, [r0, #8]
 800a7f0:	4641      	mov	r1, r8
 800a7f2:	681b      	ldr	r3, [r3, #0]
 800a7f4:	3501      	adds	r5, #1
 800a7f6:	4798      	blx	r3
 800a7f8:	42ae      	cmp	r6, r5
 800a7fa:	f8c4 9000 	str.w	r9, [r4]
 800a7fe:	443c      	add	r4, r7
 800a800:	daf3      	bge.n	800a7ea <_DrawVLine+0x7e>
 800a802:	e7e3      	b.n	800a7cc <_DrawVLine+0x60>
 800a804:	1b75      	subs	r5, r6, r5
 800a806:	3501      	adds	r5, #1
 800a808:	3d01      	subs	r5, #1
 800a80a:	f8c4 9000 	str.w	r9, [r4]
 800a80e:	443c      	add	r4, r7
 800a810:	d1fa      	bne.n	800a808 <_DrawVLine+0x9c>
 800a812:	e7db      	b.n	800a7cc <_DrawVLine+0x60>
 800a814:	b003      	add	sp, #12
 800a816:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a81a:	bf00      	nop
 800a81c:	20000014 	.word	0x20000014

0800a820 <_FillRect>:
 800a820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a824:	4e2a      	ldr	r6, [pc, #168]	@ (800a8d0 <_FillRect+0xb0>)
 800a826:	461c      	mov	r4, r3
 800a828:	6833      	ldr	r3, [r6, #0]
 800a82a:	b085      	sub	sp, #20
 800a82c:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 800a82e:	4689      	mov	r9, r1
 800a830:	4615      	mov	r5, r2
 800a832:	f7f7 fc0d 	bl	8002050 <GUI_ALLOC_LockH>
 800a836:	4629      	mov	r1, r5
 800a838:	9002      	str	r0, [sp, #8]
 800a83a:	4648      	mov	r0, r9
 800a83c:	f7ff ff1a 	bl	800a674 <_XY2PTR>
 800a840:	9b02      	ldr	r3, [sp, #8]
 800a842:	6832      	ldr	r2, [r6, #0]
 800a844:	4607      	mov	r7, r0
 800a846:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 800a848:	6958      	ldr	r0, [r3, #20]
 800a84a:	ebc9 0404 	rsb	r4, r9, r4
 800a84e:	f8d3 a00c 	ldr.w	sl, [r3, #12]
 800a852:	3401      	adds	r4, #1
 800a854:	f8d2 b000 	ldr.w	fp, [r2]
 800a858:	b330      	cbz	r0, 800a8a8 <_FillRect+0x88>
 800a85a:	f7f7 fbf9 	bl	8002050 <GUI_ALLOC_LockH>
 800a85e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800a860:	f10d 0810 	add.w	r8, sp, #16
 800a864:	1b5b      	subs	r3, r3, r5
 800a866:	3301      	adds	r3, #1
 800a868:	f848 0d04 	str.w	r0, [r8, #-4]!
 800a86c:	462a      	mov	r2, r5
 800a86e:	9300      	str	r3, [sp, #0]
 800a870:	4649      	mov	r1, r9
 800a872:	4623      	mov	r3, r4
 800a874:	f7fa feda 	bl	800562c <GUI_USAGE_AddRect>
 800a878:	4640      	mov	r0, r8
 800a87a:	f7f7 fbf7 	bl	800206c <GUI_ALLOC_UnlockH>
 800a87e:	e013      	b.n	800a8a8 <_FillRect+0x88>
 800a880:	6833      	ldr	r3, [r6, #0]
 800a882:	7c1b      	ldrb	r3, [r3, #16]
 800a884:	07db      	lsls	r3, r3, #31
 800a886:	d513      	bpl.n	800a8b0 <_FillRect+0x90>
 800a888:	9b02      	ldr	r3, [sp, #8]
 800a88a:	681b      	ldr	r3, [r3, #0]
 800a88c:	691b      	ldr	r3, [r3, #16]
 800a88e:	689b      	ldr	r3, [r3, #8]
 800a890:	4798      	blx	r3
 800a892:	463a      	mov	r2, r7
 800a894:	4623      	mov	r3, r4
 800a896:	6811      	ldr	r1, [r2, #0]
 800a898:	3b01      	subs	r3, #1
 800a89a:	ea81 0100 	eor.w	r1, r1, r0
 800a89e:	f842 1b04 	str.w	r1, [r2], #4
 800a8a2:	d1f8      	bne.n	800a896 <_FillRect+0x76>
 800a8a4:	4457      	add	r7, sl
 800a8a6:	3501      	adds	r5, #1
 800a8a8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800a8aa:	429d      	cmp	r5, r3
 800a8ac:	dde8      	ble.n	800a880 <_FillRect+0x60>
 800a8ae:	e008      	b.n	800a8c2 <_FillRect+0xa2>
 800a8b0:	2c00      	cmp	r4, #0
 800a8b2:	ddf7      	ble.n	800a8a4 <_FillRect+0x84>
 800a8b4:	4623      	mov	r3, r4
 800a8b6:	463a      	mov	r2, r7
 800a8b8:	3b01      	subs	r3, #1
 800a8ba:	f842 bb04 	str.w	fp, [r2], #4
 800a8be:	d1fb      	bne.n	800a8b8 <_FillRect+0x98>
 800a8c0:	e7f0      	b.n	800a8a4 <_FillRect+0x84>
 800a8c2:	a802      	add	r0, sp, #8
 800a8c4:	f7f7 fbd2 	bl	800206c <GUI_ALLOC_UnlockH>
 800a8c8:	b005      	add	sp, #20
 800a8ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a8ce:	bf00      	nop
 800a8d0:	20000014 	.word	0x20000014

0800a8d4 <_DrawHLine>:
 800a8d4:	b507      	push	{r0, r1, r2, lr}
 800a8d6:	9200      	str	r2, [sp, #0]
 800a8d8:	f7ff ffa2 	bl	800a820 <_FillRect>
 800a8dc:	b003      	add	sp, #12
 800a8de:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800a8e4 <_DrawBitmap>:
 800a8e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a8e8:	4ea9      	ldr	r6, [pc, #676]	@ (800ab90 <_DrawBitmap+0x2ac>)
 800a8ea:	b091      	sub	sp, #68	@ 0x44
 800a8ec:	9302      	str	r3, [sp, #8]
 800a8ee:	6833      	ldr	r3, [r6, #0]
 800a8f0:	9005      	str	r0, [sp, #20]
 800a8f2:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 800a8f4:	460d      	mov	r5, r1
 800a8f6:	9206      	str	r2, [sp, #24]
 800a8f8:	9c1d      	ldr	r4, [sp, #116]	@ 0x74
 800a8fa:	f8dd b07c 	ldr.w	fp, [sp, #124]	@ 0x7c
 800a8fe:	2800      	cmp	r0, #0
 800a900:	f000 837c 	beq.w	800affc <_DrawBitmap+0x718>
 800a904:	f7f7 fba4 	bl	8002050 <GUI_ALLOC_LockH>
 800a908:	900e      	str	r0, [sp, #56]	@ 0x38
 800a90a:	6940      	ldr	r0, [r0, #20]
 800a90c:	b108      	cbz	r0, 800a912 <_DrawBitmap+0x2e>
 800a90e:	f7f7 fb9f 	bl	8002050 <GUI_ALLOC_LockH>
 800a912:	900f      	str	r0, [sp, #60]	@ 0x3c
 800a914:	a810      	add	r0, sp, #64	@ 0x40
 800a916:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 800a91a:	68db      	ldr	r3, [r3, #12]
 800a91c:	9308      	str	r3, [sp, #32]
 800a91e:	f7f7 fba5 	bl	800206c <GUI_ALLOC_UnlockH>
 800a922:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 800a924:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 800a926:	18eb      	adds	r3, r5, r3
 800a928:	9303      	str	r3, [sp, #12]
 800a92a:	b150      	cbz	r0, 800a942 <_DrawBitmap+0x5e>
 800a92c:	6833      	ldr	r3, [r6, #0]
 800a92e:	7c1b      	ldrb	r3, [r3, #16]
 800a930:	079d      	lsls	r5, r3, #30
 800a932:	d406      	bmi.n	800a942 <_DrawBitmap+0x5e>
 800a934:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 800a936:	9a06      	ldr	r2, [sp, #24]
 800a938:	9300      	str	r3, [sp, #0]
 800a93a:	9903      	ldr	r1, [sp, #12]
 800a93c:	9b02      	ldr	r3, [sp, #8]
 800a93e:	f7fa fe75 	bl	800562c <GUI_USAGE_AddRect>
 800a942:	9906      	ldr	r1, [sp, #24]
 800a944:	9803      	ldr	r0, [sp, #12]
 800a946:	f7ff fe95 	bl	800a674 <_XY2PTR>
 800a94a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 800a94c:	4605      	mov	r5, r0
 800a94e:	2b17      	cmp	r3, #23
 800a950:	dd68      	ble.n	800aa24 <_DrawBitmap+0x140>
 800a952:	9b02      	ldr	r3, [sp, #8]
 800a954:	f8df 9240 	ldr.w	r9, [pc, #576]	@ 800ab98 <_DrawBitmap+0x2b4>
 800a958:	009b      	lsls	r3, r3, #2
 800a95a:	9307      	str	r3, [sp, #28]
 800a95c:	f04f 0b00 	mov.w	fp, #0
 800a960:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 800a962:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 800a964:	459b      	cmp	fp, r3
 800a966:	da59      	bge.n	800aa1c <_DrawBitmap+0x138>
 800a968:	b130      	cbz	r0, 800a978 <_DrawBitmap+0x94>
 800a96a:	6883      	ldr	r3, [r0, #8]
 800a96c:	9a06      	ldr	r2, [sp, #24]
 800a96e:	685e      	ldr	r6, [r3, #4]
 800a970:	445a      	add	r2, fp
 800a972:	9b02      	ldr	r3, [sp, #8]
 800a974:	9903      	ldr	r1, [sp, #12]
 800a976:	47b0      	blx	r6
 800a978:	9b05      	ldr	r3, [sp, #20]
 800a97a:	691b      	ldr	r3, [r3, #16]
 800a97c:	68d8      	ldr	r0, [r3, #12]
 800a97e:	b130      	cbz	r0, 800a98e <_DrawBitmap+0xaa>
 800a980:	f8d9 3000 	ldr.w	r3, [r9]
 800a984:	9a07      	ldr	r2, [sp, #28]
 800a986:	4621      	mov	r1, r4
 800a988:	4628      	mov	r0, r5
 800a98a:	4798      	blx	r3
 800a98c:	e03f      	b.n	800aa0e <_DrawBitmap+0x12a>
 800a98e:	685b      	ldr	r3, [r3, #4]
 800a990:	4798      	blx	r3
 800a992:	462f      	mov	r7, r5
 800a994:	4626      	mov	r6, r4
 800a996:	0e03      	lsrs	r3, r0, #24
 800a998:	f8dd 8008 	ldr.w	r8, [sp, #8]
 800a99c:	9304      	str	r3, [sp, #16]
 800a99e:	4642      	mov	r2, r8
 800a9a0:	4631      	mov	r1, r6
 800a9a2:	f04f 0a00 	mov.w	sl, #0
 800a9a6:	f851 3b04 	ldr.w	r3, [r1], #4
 800a9aa:	9804      	ldr	r0, [sp, #16]
 800a9ac:	0e1b      	lsrs	r3, r3, #24
 800a9ae:	4298      	cmp	r0, r3
 800a9b0:	9804      	ldr	r0, [sp, #16]
 800a9b2:	bf08      	it	eq
 800a9b4:	f10a 0a01 	addeq.w	sl, sl, #1
 800a9b8:	4298      	cmp	r0, r3
 800a9ba:	f102 32ff 	add.w	r2, r2, #4294967295
 800a9be:	d011      	beq.n	800a9e4 <_DrawBitmap+0x100>
 800a9c0:	f1ba 0f00 	cmp.w	sl, #0
 800a9c4:	d011      	beq.n	800a9ea <_DrawBitmap+0x106>
 800a9c6:	ea4f 038a 	mov.w	r3, sl, lsl #2
 800a9ca:	461a      	mov	r2, r3
 800a9cc:	9309      	str	r3, [sp, #36]	@ 0x24
 800a9ce:	4631      	mov	r1, r6
 800a9d0:	4638      	mov	r0, r7
 800a9d2:	f8d9 3000 	ldr.w	r3, [r9]
 800a9d6:	4798      	blx	r3
 800a9d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a9da:	ebca 0808 	rsb	r8, sl, r8
 800a9de:	441f      	add	r7, r3
 800a9e0:	441e      	add	r6, r3
 800a9e2:	e011      	b.n	800aa08 <_DrawBitmap+0x124>
 800a9e4:	2a00      	cmp	r2, #0
 800a9e6:	d1de      	bne.n	800a9a6 <_DrawBitmap+0xc2>
 800a9e8:	e7ea      	b.n	800a9c0 <_DrawBitmap+0xdc>
 800a9ea:	6830      	ldr	r0, [r6, #0]
 800a9ec:	0e02      	lsrs	r2, r0, #24
 800a9ee:	2aff      	cmp	r2, #255	@ 0xff
 800a9f0:	d006      	beq.n	800aa00 <_DrawBitmap+0x11c>
 800a9f2:	43d2      	mvns	r2, r2
 800a9f4:	4b67      	ldr	r3, [pc, #412]	@ (800ab94 <_DrawBitmap+0x2b0>)
 800a9f6:	b2d2      	uxtb	r2, r2
 800a9f8:	6839      	ldr	r1, [r7, #0]
 800a9fa:	681b      	ldr	r3, [r3, #0]
 800a9fc:	4798      	blx	r3
 800a9fe:	6038      	str	r0, [r7, #0]
 800aa00:	3704      	adds	r7, #4
 800aa02:	3604      	adds	r6, #4
 800aa04:	f108 38ff 	add.w	r8, r8, #4294967295
 800aa08:	f1b8 0f00 	cmp.w	r8, #0
 800aa0c:	d1c7      	bne.n	800a99e <_DrawBitmap+0xba>
 800aa0e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 800aa10:	f10b 0b01 	add.w	fp, fp, #1
 800aa14:	441c      	add	r4, r3
 800aa16:	9b08      	ldr	r3, [sp, #32]
 800aa18:	441d      	add	r5, r3
 800aa1a:	e7a1      	b.n	800a960 <_DrawBitmap+0x7c>
 800aa1c:	2800      	cmp	r0, #0
 800aa1e:	f040 82ea 	bne.w	800aff6 <_DrawBitmap+0x712>
 800aa22:	e2eb      	b.n	800affc <_DrawBitmap+0x718>
 800aa24:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 800aa26:	2b10      	cmp	r3, #16
 800aa28:	d137      	bne.n	800aa9a <_DrawBitmap+0x1b6>
 800aa2a:	9b03      	ldr	r3, [sp, #12]
 800aa2c:	9a03      	ldr	r2, [sp, #12]
 800aa2e:	eba4 0443 	sub.w	r4, r4, r3, lsl #1
 800aa32:	eba0 0583 	sub.w	r5, r0, r3, lsl #2
 800aa36:	9b02      	ldr	r3, [sp, #8]
 800aa38:	f04f 0800 	mov.w	r8, #0
 800aa3c:	eb03 0a02 	add.w	sl, r3, r2
 800aa40:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 800aa42:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 800aa44:	4598      	cmp	r8, r3
 800aa46:	da24      	bge.n	800aa92 <_DrawBitmap+0x1ae>
 800aa48:	9b06      	ldr	r3, [sp, #24]
 800aa4a:	eb03 0908 	add.w	r9, r3, r8
 800aa4e:	b136      	cbz	r6, 800aa5e <_DrawBitmap+0x17a>
 800aa50:	68b3      	ldr	r3, [r6, #8]
 800aa52:	464a      	mov	r2, r9
 800aa54:	685f      	ldr	r7, [r3, #4]
 800aa56:	9903      	ldr	r1, [sp, #12]
 800aa58:	9b02      	ldr	r3, [sp, #8]
 800aa5a:	4630      	mov	r0, r6
 800aa5c:	47b8      	blx	r7
 800aa5e:	9f03      	ldr	r7, [sp, #12]
 800aa60:	9b05      	ldr	r3, [sp, #20]
 800aa62:	f834 0017 	ldrh.w	r0, [r4, r7, lsl #1]
 800aa66:	691b      	ldr	r3, [r3, #16]
 800aa68:	685b      	ldr	r3, [r3, #4]
 800aa6a:	4798      	blx	r3
 800aa6c:	f845 0027 	str.w	r0, [r5, r7, lsl #2]
 800aa70:	b12e      	cbz	r6, 800aa7e <_DrawBitmap+0x19a>
 800aa72:	68b3      	ldr	r3, [r6, #8]
 800aa74:	464a      	mov	r2, r9
 800aa76:	681b      	ldr	r3, [r3, #0]
 800aa78:	4639      	mov	r1, r7
 800aa7a:	4630      	mov	r0, r6
 800aa7c:	4798      	blx	r3
 800aa7e:	3701      	adds	r7, #1
 800aa80:	4557      	cmp	r7, sl
 800aa82:	d1ed      	bne.n	800aa60 <_DrawBitmap+0x17c>
 800aa84:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 800aa86:	f108 0801 	add.w	r8, r8, #1
 800aa8a:	441c      	add	r4, r3
 800aa8c:	9b08      	ldr	r3, [sp, #32]
 800aa8e:	441d      	add	r5, r3
 800aa90:	e7d6      	b.n	800aa40 <_DrawBitmap+0x15c>
 800aa92:	2e00      	cmp	r6, #0
 800aa94:	f040 82af 	bne.w	800aff6 <_DrawBitmap+0x712>
 800aa98:	e2b0      	b.n	800affc <_DrawBitmap+0x718>
 800aa9a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 800aa9c:	2b08      	cmp	r3, #8
 800aa9e:	f040 8083 	bne.w	800aba8 <_DrawBitmap+0x2c4>
 800aaa2:	9a03      	ldr	r2, [sp, #12]
 800aaa4:	f06f 0303 	mvn.w	r3, #3
 800aaa8:	4353      	muls	r3, r2
 800aaaa:	9304      	str	r3, [sp, #16]
 800aaac:	9b02      	ldr	r3, [sp, #8]
 800aaae:	9f06      	ldr	r7, [sp, #24]
 800aab0:	4413      	add	r3, r2
 800aab2:	9305      	str	r3, [sp, #20]
 800aab4:	9b06      	ldr	r3, [sp, #24]
 800aab6:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800aab8:	1afb      	subs	r3, r7, r3
 800aaba:	429a      	cmp	r2, r3
 800aabc:	f340 8299 	ble.w	800aff2 <_DrawBitmap+0x70e>
 800aac0:	6833      	ldr	r3, [r6, #0]
 800aac2:	7c1b      	ldrb	r3, [r3, #16]
 800aac4:	f1bb 0f00 	cmp.w	fp, #0
 800aac8:	d034      	beq.n	800ab34 <_DrawBitmap+0x250>
 800aaca:	f013 0303 	ands.w	r3, r3, #3
 800aace:	d00b      	beq.n	800aae8 <_DrawBitmap+0x204>
 800aad0:	2b02      	cmp	r3, #2
 800aad2:	d163      	bne.n	800ab9c <_DrawBitmap+0x2b8>
 800aad4:	9b04      	ldr	r3, [sp, #16]
 800aad6:	f8dd 903c 	ldr.w	r9, [sp, #60]	@ 0x3c
 800aada:	18eb      	adds	r3, r5, r3
 800aadc:	f104 3aff 	add.w	sl, r4, #4294967295
 800aae0:	9307      	str	r3, [sp, #28]
 800aae2:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800aae6:	e020      	b.n	800ab2a <_DrawBitmap+0x246>
 800aae8:	9a02      	ldr	r2, [sp, #8]
 800aaea:	4623      	mov	r3, r4
 800aaec:	18a1      	adds	r1, r4, r2
 800aaee:	462a      	mov	r2, r5
 800aaf0:	f813 0b01 	ldrb.w	r0, [r3], #1
 800aaf4:	f85b 0020 	ldr.w	r0, [fp, r0, lsl #2]
 800aaf8:	428b      	cmp	r3, r1
 800aafa:	f842 0b04 	str.w	r0, [r2], #4
 800aafe:	d1f7      	bne.n	800aaf0 <_DrawBitmap+0x20c>
 800ab00:	e04c      	b.n	800ab9c <_DrawBitmap+0x2b8>
 800ab02:	f85b 3023 	ldr.w	r3, [fp, r3, lsl #2]
 800ab06:	9a07      	ldr	r2, [sp, #28]
 800ab08:	f842 3028 	str.w	r3, [r2, r8, lsl #2]
 800ab0c:	f1b9 0f00 	cmp.w	r9, #0
 800ab10:	d006      	beq.n	800ab20 <_DrawBitmap+0x23c>
 800ab12:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800ab16:	463a      	mov	r2, r7
 800ab18:	681b      	ldr	r3, [r3, #0]
 800ab1a:	4641      	mov	r1, r8
 800ab1c:	4648      	mov	r0, r9
 800ab1e:	4798      	blx	r3
 800ab20:	9b05      	ldr	r3, [sp, #20]
 800ab22:	f108 0801 	add.w	r8, r8, #1
 800ab26:	4543      	cmp	r3, r8
 800ab28:	d038      	beq.n	800ab9c <_DrawBitmap+0x2b8>
 800ab2a:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
 800ab2e:	2b00      	cmp	r3, #0
 800ab30:	d0f6      	beq.n	800ab20 <_DrawBitmap+0x23c>
 800ab32:	e7e6      	b.n	800ab02 <_DrawBitmap+0x21e>
 800ab34:	f013 0303 	ands.w	r3, r3, #3
 800ab38:	d00b      	beq.n	800ab52 <_DrawBitmap+0x26e>
 800ab3a:	2b02      	cmp	r3, #2
 800ab3c:	d12e      	bne.n	800ab9c <_DrawBitmap+0x2b8>
 800ab3e:	9b04      	ldr	r3, [sp, #16]
 800ab40:	f8dd 903c 	ldr.w	r9, [sp, #60]	@ 0x3c
 800ab44:	18eb      	adds	r3, r5, r3
 800ab46:	f104 3aff 	add.w	sl, r4, #4294967295
 800ab4a:	9307      	str	r3, [sp, #28]
 800ab4c:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800ab50:	e018      	b.n	800ab84 <_DrawBitmap+0x2a0>
 800ab52:	4b11      	ldr	r3, [pc, #68]	@ (800ab98 <_DrawBitmap+0x2b4>)
 800ab54:	9a02      	ldr	r2, [sp, #8]
 800ab56:	4621      	mov	r1, r4
 800ab58:	4628      	mov	r0, r5
 800ab5a:	681b      	ldr	r3, [r3, #0]
 800ab5c:	4798      	blx	r3
 800ab5e:	e01d      	b.n	800ab9c <_DrawBitmap+0x2b8>
 800ab60:	9a07      	ldr	r2, [sp, #28]
 800ab62:	f842 3028 	str.w	r3, [r2, r8, lsl #2]
 800ab66:	f1b9 0f00 	cmp.w	r9, #0
 800ab6a:	d006      	beq.n	800ab7a <_DrawBitmap+0x296>
 800ab6c:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800ab70:	463a      	mov	r2, r7
 800ab72:	681b      	ldr	r3, [r3, #0]
 800ab74:	4641      	mov	r1, r8
 800ab76:	4648      	mov	r0, r9
 800ab78:	4798      	blx	r3
 800ab7a:	9b05      	ldr	r3, [sp, #20]
 800ab7c:	f108 0801 	add.w	r8, r8, #1
 800ab80:	4543      	cmp	r3, r8
 800ab82:	d00b      	beq.n	800ab9c <_DrawBitmap+0x2b8>
 800ab84:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
 800ab88:	2b00      	cmp	r3, #0
 800ab8a:	d0f6      	beq.n	800ab7a <_DrawBitmap+0x296>
 800ab8c:	e7e8      	b.n	800ab60 <_DrawBitmap+0x27c>
 800ab8e:	bf00      	nop
 800ab90:	20000014 	.word	0x20000014
 800ab94:	20000094 	.word	0x20000094
 800ab98:	20000020 	.word	0x20000020
 800ab9c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 800ab9e:	3701      	adds	r7, #1
 800aba0:	441c      	add	r4, r3
 800aba2:	9b08      	ldr	r3, [sp, #32]
 800aba4:	441d      	add	r5, r3
 800aba6:	e785      	b.n	800aab4 <_DrawBitmap+0x1d0>
 800aba8:	4bb1      	ldr	r3, [pc, #708]	@ (800ae70 <_DrawBitmap+0x58c>)
 800abaa:	f1bb 0f00 	cmp.w	fp, #0
 800abae:	bf08      	it	eq
 800abb0:	469b      	moveq	fp, r3
 800abb2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 800abb4:	005b      	lsls	r3, r3, #1
 800abb6:	930a      	str	r3, [sp, #40]	@ 0x28
 800abb8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 800abba:	009b      	lsls	r3, r3, #2
 800abbc:	930b      	str	r3, [sp, #44]	@ 0x2c
 800abbe:	1c63      	adds	r3, r4, #1
 800abc0:	9304      	str	r3, [sp, #16]
 800abc2:	1d03      	adds	r3, r0, #4
 800abc4:	9307      	str	r3, [sp, #28]
 800abc6:	9b06      	ldr	r3, [sp, #24]
 800abc8:	9305      	str	r3, [sp, #20]
 800abca:	9b07      	ldr	r3, [sp, #28]
 800abcc:	9a06      	ldr	r2, [sp, #24]
 800abce:	1f1c      	subs	r4, r3, #4
 800abd0:	9b04      	ldr	r3, [sp, #16]
 800abd2:	f103 3aff 	add.w	sl, r3, #4294967295
 800abd6:	9b05      	ldr	r3, [sp, #20]
 800abd8:	1a9b      	subs	r3, r3, r2
 800abda:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800abdc:	429a      	cmp	r2, r3
 800abde:	f340 8208 	ble.w	800aff2 <_DrawBitmap+0x70e>
 800abe2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 800abe4:	2b02      	cmp	r3, #2
 800abe6:	f000 809b 	beq.w	800ad20 <_DrawBitmap+0x43c>
 800abea:	2b04      	cmp	r3, #4
 800abec:	f000 812e 	beq.w	800ae4c <_DrawBitmap+0x568>
 800abf0:	2b01      	cmp	r3, #1
 800abf2:	f040 81f2 	bne.w	800afda <_DrawBitmap+0x6f6>
 800abf6:	4b9f      	ldr	r3, [pc, #636]	@ (800ae74 <_DrawBitmap+0x590>)
 800abf8:	681b      	ldr	r3, [r3, #0]
 800abfa:	6e18      	ldr	r0, [r3, #96]	@ 0x60
 800abfc:	f7f7 fa28 	bl	8002050 <GUI_ALLOC_LockH>
 800ac00:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 800ac02:	4a9d      	ldr	r2, [pc, #628]	@ (800ae78 <_DrawBitmap+0x594>)
 800ac04:	f1c3 0508 	rsb	r5, r3, #8
 800ac08:	9b04      	ldr	r3, [sp, #16]
 800ac0a:	900e      	str	r0, [sp, #56]	@ 0x38
 800ac0c:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 800ac10:	9f02      	ldr	r7, [sp, #8]
 800ac12:	5cd6      	ldrb	r6, [r2, r3]
 800ac14:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 800ac16:	411e      	asrs	r6, r3
 800ac18:	4b96      	ldr	r3, [pc, #600]	@ (800ae74 <_DrawBitmap+0x590>)
 800ac1a:	681b      	ldr	r3, [r3, #0]
 800ac1c:	7c1b      	ldrb	r3, [r3, #16]
 800ac1e:	f003 0303 	and.w	r3, r3, #3
 800ac22:	2b02      	cmp	r3, #2
 800ac24:	d01d      	beq.n	800ac62 <_DrawBitmap+0x37e>
 800ac26:	2b03      	cmp	r3, #3
 800ac28:	d057      	beq.n	800acda <_DrawBitmap+0x3f6>
 800ac2a:	2b01      	cmp	r3, #1
 800ac2c:	d055      	beq.n	800acda <_DrawBitmap+0x3f6>
 800ac2e:	42bd      	cmp	r5, r7
 800ac30:	bf28      	it	cs
 800ac32:	463d      	movcs	r5, r7
 800ac34:	4622      	mov	r2, r4
 800ac36:	462b      	mov	r3, r5
 800ac38:	1b7f      	subs	r7, r7, r5
 800ac3a:	f006 0101 	and.w	r1, r6, #1
 800ac3e:	f85b 1021 	ldr.w	r1, [fp, r1, lsl #2]
 800ac42:	3b01      	subs	r3, #1
 800ac44:	f842 1b04 	str.w	r1, [r2], #4
 800ac48:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800ac4c:	d1f5      	bne.n	800ac3a <_DrawBitmap+0x356>
 800ac4e:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 800ac52:	2f00      	cmp	r7, #0
 800ac54:	d060      	beq.n	800ad18 <_DrawBitmap+0x434>
 800ac56:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
 800ac5a:	4a87      	ldr	r2, [pc, #540]	@ (800ae78 <_DrawBitmap+0x594>)
 800ac5c:	2508      	movs	r5, #8
 800ac5e:	5cd6      	ldrb	r6, [r2, r3]
 800ac60:	e7e5      	b.n	800ac2e <_DrawBitmap+0x34a>
 800ac62:	f8db 3004 	ldr.w	r3, [fp, #4]
 800ac66:	f8dd 903c 	ldr.w	r9, [sp, #60]	@ 0x3c
 800ac6a:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800ac6e:	9309      	str	r3, [sp, #36]	@ 0x24
 800ac70:	42bd      	cmp	r5, r7
 800ac72:	bf28      	it	cs
 800ac74:	463d      	movcs	r5, r7
 800ac76:	1b7f      	subs	r7, r7, r5
 800ac78:	f1b9 0f00 	cmp.w	r9, #0
 800ac7c:	d022      	beq.n	800acc4 <_DrawBitmap+0x3e0>
 800ac7e:	b91e      	cbnz	r6, 800ac88 <_DrawBitmap+0x3a4>
 800ac80:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 800ac84:	44a8      	add	r8, r5
 800ac86:	e021      	b.n	800accc <_DrawBitmap+0x3e8>
 800ac88:	07f0      	lsls	r0, r6, #31
 800ac8a:	d508      	bpl.n	800ac9e <_DrawBitmap+0x3ba>
 800ac8c:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800ac90:	9a05      	ldr	r2, [sp, #20]
 800ac92:	681b      	ldr	r3, [r3, #0]
 800ac94:	4641      	mov	r1, r8
 800ac96:	4648      	mov	r0, r9
 800ac98:	4798      	blx	r3
 800ac9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ac9c:	6023      	str	r3, [r4, #0]
 800ac9e:	3d01      	subs	r5, #1
 800aca0:	f108 0801 	add.w	r8, r8, #1
 800aca4:	f104 0404 	add.w	r4, r4, #4
 800aca8:	d010      	beq.n	800accc <_DrawBitmap+0x3e8>
 800acaa:	0876      	lsrs	r6, r6, #1
 800acac:	e7e7      	b.n	800ac7e <_DrawBitmap+0x39a>
 800acae:	07f1      	lsls	r1, r6, #31
 800acb0:	bf48      	it	mi
 800acb2:	9b09      	ldrmi	r3, [sp, #36]	@ 0x24
 800acb4:	f104 0404 	add.w	r4, r4, #4
 800acb8:	bf48      	it	mi
 800acba:	f844 3c04 	strmi.w	r3, [r4, #-4]
 800acbe:	3d01      	subs	r5, #1
 800acc0:	d004      	beq.n	800accc <_DrawBitmap+0x3e8>
 800acc2:	0876      	lsrs	r6, r6, #1
 800acc4:	2e00      	cmp	r6, #0
 800acc6:	d1f2      	bne.n	800acae <_DrawBitmap+0x3ca>
 800acc8:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 800accc:	b327      	cbz	r7, 800ad18 <_DrawBitmap+0x434>
 800acce:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
 800acd2:	4a69      	ldr	r2, [pc, #420]	@ (800ae78 <_DrawBitmap+0x594>)
 800acd4:	2508      	movs	r5, #8
 800acd6:	5cd6      	ldrb	r6, [r2, r3]
 800acd8:	e7ca      	b.n	800ac70 <_DrawBitmap+0x38c>
 800acda:	6803      	ldr	r3, [r0, #0]
 800acdc:	691b      	ldr	r3, [r3, #16]
 800acde:	689b      	ldr	r3, [r3, #8]
 800ace0:	4798      	blx	r3
 800ace2:	42bd      	cmp	r5, r7
 800ace4:	bf28      	it	cs
 800ace6:	463d      	movcs	r5, r7
 800ace8:	4623      	mov	r3, r4
 800acea:	4629      	mov	r1, r5
 800acec:	1b7f      	subs	r7, r7, r5
 800acee:	07f2      	lsls	r2, r6, #31
 800acf0:	bf48      	it	mi
 800acf2:	681a      	ldrmi	r2, [r3, #0]
 800acf4:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800acf8:	bf44      	itt	mi
 800acfa:	4042      	eormi	r2, r0
 800acfc:	601a      	strmi	r2, [r3, #0]
 800acfe:	3901      	subs	r1, #1
 800ad00:	f103 0304 	add.w	r3, r3, #4
 800ad04:	d1f3      	bne.n	800acee <_DrawBitmap+0x40a>
 800ad06:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 800ad0a:	b12f      	cbz	r7, 800ad18 <_DrawBitmap+0x434>
 800ad0c:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
 800ad10:	4a59      	ldr	r2, [pc, #356]	@ (800ae78 <_DrawBitmap+0x594>)
 800ad12:	2508      	movs	r5, #8
 800ad14:	5cd6      	ldrb	r6, [r2, r3]
 800ad16:	e7e4      	b.n	800ace2 <_DrawBitmap+0x3fe>
 800ad18:	a80e      	add	r0, sp, #56	@ 0x38
 800ad1a:	f7f7 f9a7 	bl	800206c <GUI_ALLOC_UnlockH>
 800ad1e:	e15c      	b.n	800afda <_DrawBitmap+0x6f6>
 800ad20:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 800ad22:	f1c3 0504 	rsb	r5, r3, #4
 800ad26:	9b04      	ldr	r3, [sp, #16]
 800ad28:	b2ed      	uxtb	r5, r5
 800ad2a:	f813 6c01 	ldrb.w	r6, [r3, #-1]
 800ad2e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800ad30:	409e      	lsls	r6, r3
 800ad32:	4b50      	ldr	r3, [pc, #320]	@ (800ae74 <_DrawBitmap+0x590>)
 800ad34:	b2f6      	uxtb	r6, r6
 800ad36:	681b      	ldr	r3, [r3, #0]
 800ad38:	7c1b      	ldrb	r3, [r3, #16]
 800ad3a:	f003 0303 	and.w	r3, r3, #3
 800ad3e:	2b01      	cmp	r3, #1
 800ad40:	d009      	beq.n	800ad56 <_DrawBitmap+0x472>
 800ad42:	d30a      	bcc.n	800ad5a <_DrawBitmap+0x476>
 800ad44:	2b02      	cmp	r3, #2
 800ad46:	f040 8148 	bne.w	800afda <_DrawBitmap+0x6f6>
 800ad4a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800ad4c:	f8dd 8008 	ldr.w	r8, [sp, #8]
 800ad50:	9309      	str	r3, [sp, #36]	@ 0x24
 800ad52:	9f03      	ldr	r7, [sp, #12]
 800ad54:	e035      	b.n	800adc2 <_DrawBitmap+0x4de>
 800ad56:	9b02      	ldr	r3, [sp, #8]
 800ad58:	e071      	b.n	800ae3e <_DrawBitmap+0x55a>
 800ad5a:	9b02      	ldr	r3, [sp, #8]
 800ad5c:	429d      	cmp	r5, r3
 800ad5e:	bfc8      	it	gt
 800ad60:	b2dd      	uxtbgt	r5, r3
 800ad62:	462a      	mov	r2, r5
 800ad64:	4621      	mov	r1, r4
 800ad66:	1b5b      	subs	r3, r3, r5
 800ad68:	09b0      	lsrs	r0, r6, #6
 800ad6a:	f85b 0020 	ldr.w	r0, [fp, r0, lsl #2]
 800ad6e:	3a01      	subs	r2, #1
 800ad70:	00b6      	lsls	r6, r6, #2
 800ad72:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 800ad76:	f841 0b04 	str.w	r0, [r1], #4
 800ad7a:	b2f6      	uxtb	r6, r6
 800ad7c:	d1f4      	bne.n	800ad68 <_DrawBitmap+0x484>
 800ad7e:	3d01      	subs	r5, #1
 800ad80:	b2ed      	uxtb	r5, r5
 800ad82:	3501      	adds	r5, #1
 800ad84:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 800ad88:	2b00      	cmp	r3, #0
 800ad8a:	f000 8126 	beq.w	800afda <_DrawBitmap+0x6f6>
 800ad8e:	f81a 6f01 	ldrb.w	r6, [sl, #1]!
 800ad92:	2504      	movs	r5, #4
 800ad94:	e7e2      	b.n	800ad5c <_DrawBitmap+0x478>
 800ad96:	f016 0fc0 	tst.w	r6, #192	@ 0xc0
 800ad9a:	d124      	bne.n	800ade6 <_DrawBitmap+0x502>
 800ad9c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800ad9e:	f109 0901 	add.w	r9, r9, #1
 800ada2:	00b6      	lsls	r6, r6, #2
 800ada4:	4599      	cmp	r9, r3
 800ada6:	b2f6      	uxtb	r6, r6
 800ada8:	d1f5      	bne.n	800ad96 <_DrawBitmap+0x4b2>
 800adaa:	1c6b      	adds	r3, r5, #1
 800adac:	3701      	adds	r7, #1
 800adae:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800adb2:	442f      	add	r7, r5
 800adb4:	f1b8 0f00 	cmp.w	r8, #0
 800adb8:	f000 810f 	beq.w	800afda <_DrawBitmap+0x6f6>
 800adbc:	f81a 6f01 	ldrb.w	r6, [sl, #1]!
 800adc0:	2504      	movs	r5, #4
 800adc2:	4545      	cmp	r5, r8
 800adc4:	bfc8      	it	gt
 800adc6:	fa5f f588 	uxtbgt.w	r5, r8
 800adca:	ebc5 0808 	rsb	r8, r5, r8
 800adce:	3d01      	subs	r5, #1
 800add0:	b2ed      	uxtb	r5, r5
 800add2:	1c7b      	adds	r3, r7, #1
 800add4:	442b      	add	r3, r5
 800add6:	930d      	str	r3, [sp, #52]	@ 0x34
 800add8:	f06f 0303 	mvn.w	r3, #3
 800addc:	fb03 4307 	mla	r3, r3, r7, r4
 800ade0:	46b9      	mov	r9, r7
 800ade2:	930c      	str	r3, [sp, #48]	@ 0x30
 800ade4:	e7d7      	b.n	800ad96 <_DrawBitmap+0x4b2>
 800ade6:	09b3      	lsrs	r3, r6, #6
 800ade8:	f85b 3023 	ldr.w	r3, [fp, r3, lsl #2]
 800adec:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800adee:	f842 3029 	str.w	r3, [r2, r9, lsl #2]
 800adf2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800adf4:	2b00      	cmp	r3, #0
 800adf6:	d0d1      	beq.n	800ad9c <_DrawBitmap+0x4b8>
 800adf8:	689b      	ldr	r3, [r3, #8]
 800adfa:	9a05      	ldr	r2, [sp, #20]
 800adfc:	681b      	ldr	r3, [r3, #0]
 800adfe:	4649      	mov	r1, r9
 800ae00:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ae02:	4798      	blx	r3
 800ae04:	e7ca      	b.n	800ad9c <_DrawBitmap+0x4b8>
 800ae06:	f016 0fc0 	tst.w	r6, #192	@ 0xc0
 800ae0a:	bf18      	it	ne
 800ae0c:	6801      	ldrne	r1, [r0, #0]
 800ae0e:	f102 32ff 	add.w	r2, r2, #4294967295
 800ae12:	bf1c      	itt	ne
 800ae14:	f081 01ff 	eorne.w	r1, r1, #255	@ 0xff
 800ae18:	6001      	strne	r1, [r0, #0]
 800ae1a:	00b6      	lsls	r6, r6, #2
 800ae1c:	f012 02ff 	ands.w	r2, r2, #255	@ 0xff
 800ae20:	f100 0004 	add.w	r0, r0, #4
 800ae24:	b2f6      	uxtb	r6, r6
 800ae26:	d1ee      	bne.n	800ae06 <_DrawBitmap+0x522>
 800ae28:	3d01      	subs	r5, #1
 800ae2a:	b2ed      	uxtb	r5, r5
 800ae2c:	3501      	adds	r5, #1
 800ae2e:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 800ae32:	2b00      	cmp	r3, #0
 800ae34:	f000 80d1 	beq.w	800afda <_DrawBitmap+0x6f6>
 800ae38:	f81a 6f01 	ldrb.w	r6, [sl, #1]!
 800ae3c:	2504      	movs	r5, #4
 800ae3e:	429d      	cmp	r5, r3
 800ae40:	bfc8      	it	gt
 800ae42:	b2dd      	uxtbgt	r5, r3
 800ae44:	1b5b      	subs	r3, r3, r5
 800ae46:	462a      	mov	r2, r5
 800ae48:	4620      	mov	r0, r4
 800ae4a:	e7dc      	b.n	800ae06 <_DrawBitmap+0x522>
 800ae4c:	9b04      	ldr	r3, [sp, #16]
 800ae4e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ae50:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 800ae54:	4093      	lsls	r3, r2
 800ae56:	4a07      	ldr	r2, [pc, #28]	@ (800ae74 <_DrawBitmap+0x590>)
 800ae58:	b2dd      	uxtb	r5, r3
 800ae5a:	6812      	ldr	r2, [r2, #0]
 800ae5c:	7c12      	ldrb	r2, [r2, #16]
 800ae5e:	f002 0203 	and.w	r2, r2, #3
 800ae62:	2a01      	cmp	r2, #1
 800ae64:	f000 8093 	beq.w	800af8e <_DrawBitmap+0x6aa>
 800ae68:	d308      	bcc.n	800ae7c <_DrawBitmap+0x598>
 800ae6a:	2a02      	cmp	r2, #2
 800ae6c:	d037      	beq.n	800aede <_DrawBitmap+0x5fa>
 800ae6e:	e0b4      	b.n	800afda <_DrawBitmap+0x6f6>
 800ae70:	0800c034 	.word	0x0800c034
 800ae74:	20000014 	.word	0x20000014
 800ae78:	0800bed0 	.word	0x0800bed0
 800ae7c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 800ae7e:	b153      	cbz	r3, 800ae96 <_DrawBitmap+0x5b2>
 800ae80:	092d      	lsrs	r5, r5, #4
 800ae82:	f85b 3025 	ldr.w	r3, [fp, r5, lsl #2]
 800ae86:	9a04      	ldr	r2, [sp, #16]
 800ae88:	6023      	str	r3, [r4, #0]
 800ae8a:	9b02      	ldr	r3, [sp, #8]
 800ae8c:	9c07      	ldr	r4, [sp, #28]
 800ae8e:	3b01      	subs	r3, #1
 800ae90:	7815      	ldrb	r5, [r2, #0]
 800ae92:	4692      	mov	sl, r2
 800ae94:	e000      	b.n	800ae98 <_DrawBitmap+0x5b4>
 800ae96:	9b02      	ldr	r3, [sp, #8]
 800ae98:	2b01      	cmp	r3, #1
 800ae9a:	dd18      	ble.n	800aece <_DrawBitmap+0x5ea>
 800ae9c:	1058      	asrs	r0, r3, #1
 800ae9e:	f104 0208 	add.w	r2, r4, #8
 800aea2:	f003 0301 	and.w	r3, r3, #1
 800aea6:	eb0a 0600 	add.w	r6, sl, r0
 800aeaa:	0929      	lsrs	r1, r5, #4
 800aeac:	f85b 1021 	ldr.w	r1, [fp, r1, lsl #2]
 800aeb0:	f005 050f 	and.w	r5, r5, #15
 800aeb4:	f842 1c08 	str.w	r1, [r2, #-8]
 800aeb8:	f85b 1025 	ldr.w	r1, [fp, r5, lsl #2]
 800aebc:	3208      	adds	r2, #8
 800aebe:	f842 1c0c 	str.w	r1, [r2, #-12]
 800aec2:	f81a 5f01 	ldrb.w	r5, [sl, #1]!
 800aec6:	45b2      	cmp	sl, r6
 800aec8:	d1ef      	bne.n	800aeaa <_DrawBitmap+0x5c6>
 800aeca:	eb04 04c0 	add.w	r4, r4, r0, lsl #3
 800aece:	2b00      	cmp	r3, #0
 800aed0:	f000 8083 	beq.w	800afda <_DrawBitmap+0x6f6>
 800aed4:	092d      	lsrs	r5, r5, #4
 800aed6:	f85b 3025 	ldr.w	r3, [fp, r5, lsl #2]
 800aeda:	6023      	str	r3, [r4, #0]
 800aedc:	e07d      	b.n	800afda <_DrawBitmap+0x6f6>
 800aede:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 800aee0:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 800aee2:	b1ba      	cbz	r2, 800af14 <_DrawBitmap+0x630>
 800aee4:	f013 0ff0 	tst.w	r3, #240	@ 0xf0
 800aee8:	d00a      	beq.n	800af00 <_DrawBitmap+0x61c>
 800aeea:	092d      	lsrs	r5, r5, #4
 800aeec:	f85b 3025 	ldr.w	r3, [fp, r5, lsl #2]
 800aef0:	6023      	str	r3, [r4, #0]
 800aef2:	b12e      	cbz	r6, 800af00 <_DrawBitmap+0x61c>
 800aef4:	68b3      	ldr	r3, [r6, #8]
 800aef6:	9a05      	ldr	r2, [sp, #20]
 800aef8:	681b      	ldr	r3, [r3, #0]
 800aefa:	9903      	ldr	r1, [sp, #12]
 800aefc:	4630      	mov	r0, r6
 800aefe:	4798      	blx	r3
 800af00:	9b03      	ldr	r3, [sp, #12]
 800af02:	9c07      	ldr	r4, [sp, #28]
 800af04:	1c5f      	adds	r7, r3, #1
 800af06:	9b02      	ldr	r3, [sp, #8]
 800af08:	f103 38ff 	add.w	r8, r3, #4294967295
 800af0c:	9b04      	ldr	r3, [sp, #16]
 800af0e:	781d      	ldrb	r5, [r3, #0]
 800af10:	469a      	mov	sl, r3
 800af12:	e00f      	b.n	800af34 <_DrawBitmap+0x650>
 800af14:	f8dd 8008 	ldr.w	r8, [sp, #8]
 800af18:	9f03      	ldr	r7, [sp, #12]
 800af1a:	e00b      	b.n	800af34 <_DrawBitmap+0x650>
 800af1c:	f015 0ff0 	tst.w	r5, #240	@ 0xf0
 800af20:	d10c      	bne.n	800af3c <_DrawBitmap+0x658>
 800af22:	f015 050f 	ands.w	r5, r5, #15
 800af26:	d116      	bne.n	800af56 <_DrawBitmap+0x672>
 800af28:	f81a 5f01 	ldrb.w	r5, [sl, #1]!
 800af2c:	3408      	adds	r4, #8
 800af2e:	3702      	adds	r7, #2
 800af30:	f1a8 0802 	sub.w	r8, r8, #2
 800af34:	f1b8 0f01 	cmp.w	r8, #1
 800af38:	dcf0      	bgt.n	800af1c <_DrawBitmap+0x638>
 800af3a:	e018      	b.n	800af6e <_DrawBitmap+0x68a>
 800af3c:	092b      	lsrs	r3, r5, #4
 800af3e:	f85b 3023 	ldr.w	r3, [fp, r3, lsl #2]
 800af42:	6023      	str	r3, [r4, #0]
 800af44:	2e00      	cmp	r6, #0
 800af46:	d0ec      	beq.n	800af22 <_DrawBitmap+0x63e>
 800af48:	68b3      	ldr	r3, [r6, #8]
 800af4a:	9a05      	ldr	r2, [sp, #20]
 800af4c:	681b      	ldr	r3, [r3, #0]
 800af4e:	4639      	mov	r1, r7
 800af50:	4630      	mov	r0, r6
 800af52:	4798      	blx	r3
 800af54:	e7e5      	b.n	800af22 <_DrawBitmap+0x63e>
 800af56:	f85b 3025 	ldr.w	r3, [fp, r5, lsl #2]
 800af5a:	6063      	str	r3, [r4, #4]
 800af5c:	2e00      	cmp	r6, #0
 800af5e:	d0e3      	beq.n	800af28 <_DrawBitmap+0x644>
 800af60:	68b3      	ldr	r3, [r6, #8]
 800af62:	9a05      	ldr	r2, [sp, #20]
 800af64:	681b      	ldr	r3, [r3, #0]
 800af66:	1c79      	adds	r1, r7, #1
 800af68:	4630      	mov	r0, r6
 800af6a:	4798      	blx	r3
 800af6c:	e7dc      	b.n	800af28 <_DrawBitmap+0x644>
 800af6e:	f1b8 0f00 	cmp.w	r8, #0
 800af72:	d032      	beq.n	800afda <_DrawBitmap+0x6f6>
 800af74:	092d      	lsrs	r5, r5, #4
 800af76:	d030      	beq.n	800afda <_DrawBitmap+0x6f6>
 800af78:	f85b 3025 	ldr.w	r3, [fp, r5, lsl #2]
 800af7c:	6023      	str	r3, [r4, #0]
 800af7e:	b366      	cbz	r6, 800afda <_DrawBitmap+0x6f6>
 800af80:	68b3      	ldr	r3, [r6, #8]
 800af82:	9a05      	ldr	r2, [sp, #20]
 800af84:	681b      	ldr	r3, [r3, #0]
 800af86:	4639      	mov	r1, r7
 800af88:	4630      	mov	r0, r6
 800af8a:	4798      	blx	r3
 800af8c:	e025      	b.n	800afda <_DrawBitmap+0x6f6>
 800af8e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 800af90:	9a02      	ldr	r2, [sp, #8]
 800af92:	f1c3 0302 	rsb	r3, r3, #2
 800af96:	b2db      	uxtb	r3, r3
 800af98:	4293      	cmp	r3, r2
 800af9a:	bfc8      	it	gt
 800af9c:	b2d3      	uxtbgt	r3, r2
 800af9e:	4619      	mov	r1, r3
 800afa0:	4626      	mov	r6, r4
 800afa2:	1ad2      	subs	r2, r2, r3
 800afa4:	f015 0fc0 	tst.w	r5, #192	@ 0xc0
 800afa8:	bf18      	it	ne
 800afaa:	6830      	ldrne	r0, [r6, #0]
 800afac:	f101 31ff 	add.w	r1, r1, #4294967295
 800afb0:	bf1c      	itt	ne
 800afb2:	f080 00ff 	eorne.w	r0, r0, #255	@ 0xff
 800afb6:	6030      	strne	r0, [r6, #0]
 800afb8:	012d      	lsls	r5, r5, #4
 800afba:	f011 01ff 	ands.w	r1, r1, #255	@ 0xff
 800afbe:	f106 0604 	add.w	r6, r6, #4
 800afc2:	b2ed      	uxtb	r5, r5
 800afc4:	d1ee      	bne.n	800afa4 <_DrawBitmap+0x6c0>
 800afc6:	3b01      	subs	r3, #1
 800afc8:	b2db      	uxtb	r3, r3
 800afca:	3301      	adds	r3, #1
 800afcc:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800afd0:	b11a      	cbz	r2, 800afda <_DrawBitmap+0x6f6>
 800afd2:	f81a 5f01 	ldrb.w	r5, [sl, #1]!
 800afd6:	2302      	movs	r3, #2
 800afd8:	e7de      	b.n	800af98 <_DrawBitmap+0x6b4>
 800afda:	9b05      	ldr	r3, [sp, #20]
 800afdc:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800afde:	3301      	adds	r3, #1
 800afe0:	9305      	str	r3, [sp, #20]
 800afe2:	9b04      	ldr	r3, [sp, #16]
 800afe4:	4413      	add	r3, r2
 800afe6:	9304      	str	r3, [sp, #16]
 800afe8:	9a08      	ldr	r2, [sp, #32]
 800afea:	9b07      	ldr	r3, [sp, #28]
 800afec:	4413      	add	r3, r2
 800afee:	9307      	str	r3, [sp, #28]
 800aff0:	e5eb      	b.n	800abca <_DrawBitmap+0x2e6>
 800aff2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800aff4:	b113      	cbz	r3, 800affc <_DrawBitmap+0x718>
 800aff6:	a80f      	add	r0, sp, #60	@ 0x3c
 800aff8:	f7f7 f838 	bl	800206c <GUI_ALLOC_UnlockH>
 800affc:	b011      	add	sp, #68	@ 0x44
 800affe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b002:	bf00      	nop

0800b004 <GUI_MEMDEV__WriteToActiveAlpha>:
 800b004:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b008:	4c5e      	ldr	r4, [pc, #376]	@ (800b184 <GUI_MEMDEV__WriteToActiveAlpha+0x180>)
 800b00a:	4e5f      	ldr	r6, [pc, #380]	@ (800b188 <GUI_MEMDEV__WriteToActiveAlpha+0x184>)
 800b00c:	6823      	ldr	r3, [r4, #0]
 800b00e:	b091      	sub	sp, #68	@ 0x44
 800b010:	7c5b      	ldrb	r3, [r3, #17]
 800b012:	4688      	mov	r8, r1
 800b014:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 800b018:	4615      	mov	r5, r2
 800b01a:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800b01e:	900c      	str	r0, [sp, #48]	@ 0x30
 800b020:	f7f7 f816 	bl	8002050 <GUI_ALLOC_LockH>
 800b024:	4603      	mov	r3, r0
 800b026:	a810      	add	r0, sp, #64	@ 0x40
 800b028:	f840 3d08 	str.w	r3, [r0, #-8]!
 800b02c:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 800b030:	f9b3 900a 	ldrsh.w	r9, [r3, #10]
 800b034:	681b      	ldr	r3, [r3, #0]
 800b036:	691b      	ldr	r3, [r3, #16]
 800b038:	685b      	ldr	r3, [r3, #4]
 800b03a:	9307      	str	r3, [sp, #28]
 800b03c:	f7f7 f816 	bl	800206c <GUI_ALLOC_UnlockH>
 800b040:	6823      	ldr	r3, [r4, #0]
 800b042:	2108      	movs	r1, #8
 800b044:	7c5b      	ldrb	r3, [r3, #17]
 800b046:	f856 0023 	ldr.w	r0, [r6, r3, lsl #2]
 800b04a:	68c3      	ldr	r3, [r0, #12]
 800b04c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b04e:	4798      	blx	r3
 800b050:	2817      	cmp	r0, #23
 800b052:	4606      	mov	r6, r0
 800b054:	d804      	bhi.n	800b060 <GUI_MEMDEV__WriteToActiveAlpha+0x5c>
 800b056:	2803      	cmp	r0, #3
 800b058:	bf14      	ite	ne
 800b05a:	4606      	movne	r6, r0
 800b05c:	2608      	moveq	r6, #8
 800b05e:	e000      	b.n	800b062 <GUI_MEMDEV__WriteToActiveAlpha+0x5e>
 800b060:	2620      	movs	r6, #32
 800b062:	f8da 3004 	ldr.w	r3, [sl, #4]
 800b066:	2000      	movs	r0, #0
 800b068:	9308      	str	r3, [sp, #32]
 800b06a:	f8da 3000 	ldr.w	r3, [sl]
 800b06e:	9309      	str	r3, [sp, #36]	@ 0x24
 800b070:	f7fe f94a 	bl	8009308 <GUI__AllocAlphaBuffer>
 800b074:	2800      	cmp	r0, #0
 800b076:	f040 8082 	bne.w	800b17e <GUI_MEMDEV__WriteToActiveAlpha+0x17a>
 800b07a:	6822      	ldr	r2, [r4, #0]
 800b07c:	eb08 0407 	add.w	r4, r8, r7
 800b080:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
 800b084:	3c01      	subs	r4, #1
 800b086:	1ae4      	subs	r4, r4, r3
 800b088:	2c00      	cmp	r4, #0
 800b08a:	bfd8      	it	le
 800b08c:	463c      	movle	r4, r7
 800b08e:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
 800b092:	bfc8      	it	gt
 800b094:	1b3c      	subgt	r4, r7, r4
 800b096:	4598      	cmp	r8, r3
 800b098:	bfbd      	ittte	lt
 800b09a:	ebc8 0103 	rsblt	r1, r8, r3
 800b09e:	1a64      	sublt	r4, r4, r1
 800b0a0:	4698      	movlt	r8, r3
 800b0a2:	2100      	movge	r1, #0
 800b0a4:	2c00      	cmp	r4, #0
 800b0a6:	dd6a      	ble.n	800b17e <GUI_MEMDEV__WriteToActiveAlpha+0x17a>
 800b0a8:	eb05 0309 	add.w	r3, r5, r9
 800b0ac:	f9b2 000e 	ldrsh.w	r0, [r2, #14]
 800b0b0:	3b01      	subs	r3, #1
 800b0b2:	1a1b      	subs	r3, r3, r0
 800b0b4:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 800b0b8:	2b00      	cmp	r3, #0
 800b0ba:	bfc8      	it	gt
 800b0bc:	ebc3 0909 	rsbgt	r9, r3, r9
 800b0c0:	4295      	cmp	r5, r2
 800b0c2:	bfbd      	ittte	lt
 800b0c4:	1b53      	sublt	r3, r2, r5
 800b0c6:	ebc3 0909 	rsblt	r9, r3, r9
 800b0ca:	4615      	movlt	r5, r2
 800b0cc:	2300      	movge	r3, #0
 800b0ce:	f1b9 0f00 	cmp.w	r9, #0
 800b0d2:	dd54      	ble.n	800b17e <GUI_MEMDEV__WriteToActiveAlpha+0x17a>
 800b0d4:	fb03 1107 	mla	r1, r3, r7, r1
 800b0d8:	008b      	lsls	r3, r1, #2
 800b0da:	00ba      	lsls	r2, r7, #2
 800b0dc:	9306      	str	r3, [sp, #24]
 800b0de:	eb05 0309 	add.w	r3, r5, r9
 800b0e2:	920a      	str	r2, [sp, #40]	@ 0x28
 800b0e4:	930b      	str	r3, [sp, #44]	@ 0x2c
 800b0e6:	980c      	ldr	r0, [sp, #48]	@ 0x30
 800b0e8:	f7fe ff8e 	bl	800a008 <GUI_MEMDEV_GetDataPtr>
 800b0ec:	ab0f      	add	r3, sp, #60	@ 0x3c
 800b0ee:	9301      	str	r3, [sp, #4]
 800b0f0:	9a06      	ldr	r2, [sp, #24]
 800b0f2:	9b07      	ldr	r3, [sp, #28]
 800b0f4:	1882      	adds	r2, r0, r2
 800b0f6:	9300      	str	r3, [sp, #0]
 800b0f8:	4629      	mov	r1, r5
 800b0fa:	4623      	mov	r3, r4
 800b0fc:	4640      	mov	r0, r8
 800b0fe:	f7fe f819 	bl	8009134 <GUI__DoAlphaBlending>
 800b102:	4681      	mov	r9, r0
 800b104:	2800      	cmp	r0, #0
 800b106:	d03a      	beq.n	800b17e <GUI_MEMDEV__WriteToActiveAlpha+0x17a>
 800b108:	9b08      	ldr	r3, [sp, #32]
 800b10a:	461a      	mov	r2, r3
 800b10c:	4b1f      	ldr	r3, [pc, #124]	@ (800b18c <GUI_MEMDEV__WriteToActiveAlpha+0x188>)
 800b10e:	429a      	cmp	r2, r3
 800b110:	d01c      	beq.n	800b14c <GUI_MEMDEV__WriteToActiveAlpha+0x148>
 800b112:	4653      	mov	r3, sl
 800b114:	4632      	mov	r2, r6
 800b116:	4621      	mov	r1, r4
 800b118:	f7fe fa85 	bl	8009626 <GUI__CompactPixelIndicesEx>
 800b11c:	b9b0      	cbnz	r0, 800b14c <GUI_MEMDEV__WriteToActiveAlpha+0x148>
 800b11e:	f8da b010 	ldr.w	fp, [sl, #16]
 800b122:	f1bb 0f00 	cmp.w	fp, #0
 800b126:	d005      	beq.n	800b134 <GUI_MEMDEV__WriteToActiveAlpha+0x130>
 800b128:	2304      	movs	r3, #4
 800b12a:	463a      	mov	r2, r7
 800b12c:	4649      	mov	r1, r9
 800b12e:	4648      	mov	r0, r9
 800b130:	47d8      	blx	fp
 800b132:	e00b      	b.n	800b14c <GUI_MEMDEV__WriteToActiveAlpha+0x148>
 800b134:	464b      	mov	r3, r9
 800b136:	46bb      	mov	fp, r7
 800b138:	6818      	ldr	r0, [r3, #0]
 800b13a:	930d      	str	r3, [sp, #52]	@ 0x34
 800b13c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b13e:	4798      	blx	r3
 800b140:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800b142:	f1bb 0b01 	subs.w	fp, fp, #1
 800b146:	f843 0b04 	str.w	r0, [r3], #4
 800b14a:	d1f5      	bne.n	800b138 <GUI_MEMDEV__WriteToActiveAlpha+0x134>
 800b14c:	2300      	movs	r3, #0
 800b14e:	9305      	str	r3, [sp, #20]
 800b150:	9303      	str	r3, [sp, #12]
 800b152:	2301      	movs	r3, #1
 800b154:	9301      	str	r3, [sp, #4]
 800b156:	9300      	str	r3, [sp, #0]
 800b158:	4622      	mov	r2, r4
 800b15a:	f8cd 9010 	str.w	r9, [sp, #16]
 800b15e:	9602      	str	r6, [sp, #8]
 800b160:	4629      	mov	r1, r5
 800b162:	4640      	mov	r0, r8
 800b164:	f7f8 f8dc 	bl	8003320 <LCD_DrawBitmap>
 800b168:	9b06      	ldr	r3, [sp, #24]
 800b16a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800b16c:	f105 0b01 	add.w	fp, r5, #1
 800b170:	4413      	add	r3, r2
 800b172:	9306      	str	r3, [sp, #24]
 800b174:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800b176:	459b      	cmp	fp, r3
 800b178:	d001      	beq.n	800b17e <GUI_MEMDEV__WriteToActiveAlpha+0x17a>
 800b17a:	465d      	mov	r5, fp
 800b17c:	e7b3      	b.n	800b0e6 <GUI_MEMDEV__WriteToActiveAlpha+0xe2>
 800b17e:	b011      	add	sp, #68	@ 0x44
 800b180:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b184:	20000014 	.word	0x20000014
 800b188:	20002c38 	.word	0x20002c38
 800b18c:	0800a5e3 	.word	0x0800a5e3

0800b190 <memmove>:
 800b190:	4288      	cmp	r0, r1
 800b192:	b510      	push	{r4, lr}
 800b194:	eb01 0402 	add.w	r4, r1, r2
 800b198:	d902      	bls.n	800b1a0 <memmove+0x10>
 800b19a:	4284      	cmp	r4, r0
 800b19c:	4623      	mov	r3, r4
 800b19e:	d807      	bhi.n	800b1b0 <memmove+0x20>
 800b1a0:	1e43      	subs	r3, r0, #1
 800b1a2:	42a1      	cmp	r1, r4
 800b1a4:	d008      	beq.n	800b1b8 <memmove+0x28>
 800b1a6:	f811 2b01 	ldrb.w	r2, [r1], #1
 800b1aa:	f803 2f01 	strb.w	r2, [r3, #1]!
 800b1ae:	e7f8      	b.n	800b1a2 <memmove+0x12>
 800b1b0:	4601      	mov	r1, r0
 800b1b2:	4402      	add	r2, r0
 800b1b4:	428a      	cmp	r2, r1
 800b1b6:	d100      	bne.n	800b1ba <memmove+0x2a>
 800b1b8:	bd10      	pop	{r4, pc}
 800b1ba:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800b1be:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800b1c2:	e7f7      	b.n	800b1b4 <memmove+0x24>

0800b1c4 <memset>:
 800b1c4:	4603      	mov	r3, r0
 800b1c6:	4402      	add	r2, r0
 800b1c8:	4293      	cmp	r3, r2
 800b1ca:	d100      	bne.n	800b1ce <memset+0xa>
 800b1cc:	4770      	bx	lr
 800b1ce:	f803 1b01 	strb.w	r1, [r3], #1
 800b1d2:	e7f9      	b.n	800b1c8 <memset+0x4>

0800b1d4 <__libc_init_array>:
 800b1d4:	b570      	push	{r4, r5, r6, lr}
 800b1d6:	2600      	movs	r6, #0
 800b1d8:	4d0c      	ldr	r5, [pc, #48]	@ (800b20c <__libc_init_array+0x38>)
 800b1da:	4c0d      	ldr	r4, [pc, #52]	@ (800b210 <__libc_init_array+0x3c>)
 800b1dc:	1b64      	subs	r4, r4, r5
 800b1de:	10a4      	asrs	r4, r4, #2
 800b1e0:	42a6      	cmp	r6, r4
 800b1e2:	d109      	bne.n	800b1f8 <__libc_init_array+0x24>
 800b1e4:	f000 f828 	bl	800b238 <_init>
 800b1e8:	2600      	movs	r6, #0
 800b1ea:	4d0a      	ldr	r5, [pc, #40]	@ (800b214 <__libc_init_array+0x40>)
 800b1ec:	4c0a      	ldr	r4, [pc, #40]	@ (800b218 <__libc_init_array+0x44>)
 800b1ee:	1b64      	subs	r4, r4, r5
 800b1f0:	10a4      	asrs	r4, r4, #2
 800b1f2:	42a6      	cmp	r6, r4
 800b1f4:	d105      	bne.n	800b202 <__libc_init_array+0x2e>
 800b1f6:	bd70      	pop	{r4, r5, r6, pc}
 800b1f8:	f855 3b04 	ldr.w	r3, [r5], #4
 800b1fc:	4798      	blx	r3
 800b1fe:	3601      	adds	r6, #1
 800b200:	e7ee      	b.n	800b1e0 <__libc_init_array+0xc>
 800b202:	f855 3b04 	ldr.w	r3, [r5], #4
 800b206:	4798      	blx	r3
 800b208:	3601      	adds	r6, #1
 800b20a:	e7f2      	b.n	800b1f2 <__libc_init_array+0x1e>
 800b20c:	0800c0d0 	.word	0x0800c0d0
 800b210:	0800c0d0 	.word	0x0800c0d0
 800b214:	0800c0d0 	.word	0x0800c0d0
 800b218:	0800c0d4 	.word	0x0800c0d4

0800b21c <memcpy>:
 800b21c:	440a      	add	r2, r1
 800b21e:	4291      	cmp	r1, r2
 800b220:	f100 33ff 	add.w	r3, r0, #4294967295
 800b224:	d100      	bne.n	800b228 <memcpy+0xc>
 800b226:	4770      	bx	lr
 800b228:	b510      	push	{r4, lr}
 800b22a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b22e:	4291      	cmp	r1, r2
 800b230:	f803 4f01 	strb.w	r4, [r3, #1]!
 800b234:	d1f9      	bne.n	800b22a <memcpy+0xe>
 800b236:	bd10      	pop	{r4, pc}

0800b238 <_init>:
 800b238:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b23a:	bf00      	nop
 800b23c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800b23e:	bc08      	pop	{r3}
 800b240:	469e      	mov	lr, r3
 800b242:	4770      	bx	lr

0800b244 <_fini>:
 800b244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b246:	bf00      	nop
 800b248:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800b24a:	bc08      	pop	{r3}
 800b24c:	469e      	mov	lr, r3
 800b24e:	4770      	bx	lr
